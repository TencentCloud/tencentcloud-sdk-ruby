# frozen_string_literal: true

# Copyright (c) 2017-2018 THL A29 Limited, a Tencent company. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

module TencentCloud
  module Tcss
    module V20201101
      # 灰度项目配置
      class ABTestConfig < TencentCloud::Common::AbstractModel
        # @param ProjectName: 灰度项目名称
        # @type ProjectName: String
        # @param Status: true：正在灰度，false：不在灰度
        # @type Status: Boolean

        attr_accessor :ProjectName, :Status

        def initialize(projectname=nil, status=nil)
          @ProjectName = projectname
          @Status = status
        end

        def deserialize(params)
          @ProjectName = params['ProjectName']
          @Status = params['Status']
        end
      end

      # 容器运行时安全，子策略信息
      class AbnormalProcessChildRuleInfo < TencentCloud::Common::AbstractModel
        # @param RuleMode: 策略模式，   RULE_MODE_RELEASE: 放行
        #    RULE_MODE_ALERT: 告警
        #    RULE_MODE_HOLDUP:拦截
        # @type RuleMode: String
        # @param ProcessPath: 进程路径
        # @type ProcessPath: String
        # @param RuleId: 子策略id
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type RuleId: String
        # @param RuleLevel: 威胁等级，HIGH:高，MIDDLE:中，LOW:低
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type RuleLevel: String

        attr_accessor :RuleMode, :ProcessPath, :RuleId, :RuleLevel

        def initialize(rulemode=nil, processpath=nil, ruleid=nil, rulelevel=nil)
          @RuleMode = rulemode
          @ProcessPath = processpath
          @RuleId = ruleid
          @RuleLevel = rulelevel
        end

        def deserialize(params)
          @RuleMode = params['RuleMode']
          @ProcessPath = params['ProcessPath']
          @RuleId = params['RuleId']
          @RuleLevel = params['RuleLevel']
        end
      end

      # 运行时容器访问控制事件描述信息
      class AbnormalProcessEventDescription < TencentCloud::Common::AbstractModel
        # @param Description: 事件规则
        # @type Description: String
        # @param Solution: 解决方案
        # @type Solution: String
        # @param Remark: 事件备注信息
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Remark: String
        # @param MatchRule: 命中规则详细信息
        # @type MatchRule: :class:`Tencentcloud::Tcss.v20201101.models.AbnormalProcessChildRuleInfo`
        # @param RuleName: 命中规则名称，PROXY_TOOL：代理软件，TRANSFER_CONTROL：横向渗透，ATTACK_CMD：恶意命令，REVERSE_SHELL：反弹shell，FILELESS：无文件程序执行，RISK_CMD：高危命令，ABNORMAL_CHILD_PROC：敏感服务异常子进程启动，USER_DEFINED_RULE：用户自定义规则
        # @type RuleName: String
        # @param RuleId: 命中规则的id
        # @type RuleId: String
        # @param OperationTime: 事件最后一次处理的时间
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type OperationTime: String
        # @param GroupName: 命中策略名称：SYSTEM_DEFINED_RULE （系统策略）或  用户自定义的策略名字
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type GroupName: String

        attr_accessor :Description, :Solution, :Remark, :MatchRule, :RuleName, :RuleId, :OperationTime, :GroupName

        def initialize(description=nil, solution=nil, remark=nil, matchrule=nil, rulename=nil, ruleid=nil, operationtime=nil, groupname=nil)
          @Description = description
          @Solution = solution
          @Remark = remark
          @MatchRule = matchrule
          @RuleName = rulename
          @RuleId = ruleid
          @OperationTime = operationtime
          @GroupName = groupname
        end

        def deserialize(params)
          @Description = params['Description']
          @Solution = params['Solution']
          @Remark = params['Remark']
          unless params['MatchRule'].nil?
            @MatchRule = AbnormalProcessChildRuleInfo.new
            @MatchRule.deserialize(params['MatchRule'])
          end
          @RuleName = params['RuleName']
          @RuleId = params['RuleId']
          @OperationTime = params['OperationTime']
          @GroupName = params['GroupName']
        end
      end

      # 容器运行时安全异常进程信息
      class AbnormalProcessEventInfo < TencentCloud::Common::AbstractModel
        # @param ProcessPath: 进程目录
        # @type ProcessPath: String
        # @param EventType: 事件类型，MALICE_PROCESS_START:恶意进程启动
        # @type EventType: String
        # @param MatchRuleName: 命中规则名称，PROXY_TOOL：代理软件，TRANSFER_CONTROL：横向渗透，ATTACK_CMD：恶意命令，REVERSE_SHELL：反弹shell，FILELESS：无文件程序执行，RISK_CMD：高危命令，ABNORMAL_CHILD_PROC：敏感服务异常子进程启动，USER_DEFINED_RULE：用户自定义规则
        # @type MatchRuleName: String
        # @param FoundTime: 生成时间
        # @type FoundTime: String
        # @param ContainerName: 容器名
        # @type ContainerName: String
        # @param ImageName: 镜像名
        # @type ImageName: String
        # @param Behavior: 动作执行结果，    BEHAVIOR_NONE: 无
        #     BEHAVIOR_ALERT: 告警
        #     BEHAVIOR_RELEASE：放行
        #     BEHAVIOR_HOLDUP_FAILED:拦截失败
        #     BEHAVIOR_HOLDUP_SUCCESSED：拦截失败
        # @type Behavior: String
        # @param Status: 状态，EVENT_UNDEAL:事件未处理
        #     EVENT_DEALED:事件已经处理
        #     EVENT_INGNORE：事件已经忽略
        # @type Status: String
        # @param Id: 事件记录的唯一id
        # @type Id: String
        # @param ImageId: 镜像id，用于跳转
        # @type ImageId: String
        # @param ContainerId: 容器id，用于跳转
        # @type ContainerId: String
        # @param Solution: 事件解决方案
        # @type Solution: String
        # @param Description: 事件详细描述
        # @type Description: String
        # @param MatchRuleId: 命中策略id
        # @type MatchRuleId: String
        # @param MatchAction: 命中规则行为：
        # RULE_MODE_RELEASE 放行
        # RULE_MODE_ALERT  告警
        # RULE_MODE_HOLDUP 拦截
        # @type MatchAction: String
        # @param MatchProcessPath: 命中规则进程信息
        # @type MatchProcessPath: String
        # @param RuleExist: 规则是否存在
        # @type RuleExist: Boolean
        # @param EventCount: 事件数量
        # @type EventCount: Integer
        # @param LatestFoundTime: 最近生成时间
        # @type LatestFoundTime: String
        # @param RuleId: 规则组Id
        # @type RuleId: String
        # @param MatchGroupName: 命中策略名称：SYSTEM_DEFINED_RULE （系统策略）或  用户自定义的策略名字
        # @type MatchGroupName: String
        # @param MatchRuleLevel: 命中规则等级，HIGH：高危，MIDDLE：中危，LOW：低危。
        # @type MatchRuleLevel: String
        # @param ContainerNetStatus: 网络状态
        # 未隔离  	NORMAL
        # 已隔离		ISOLATED
        # 隔离中		ISOLATING
        # 隔离失败	ISOLATE_FAILED
        # 解除隔离中  RESTORING
        # 解除隔离失败 RESTORE_FAILED
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ContainerNetStatus: String
        # @param ContainerNetSubStatus: 容器子状态
        # "AGENT_OFFLINE"       //Agent离线
        # "NODE_DESTROYED"      //节点已销毁
        # "CONTAINER_EXITED"    //容器已退出
        # "CONTAINER_DESTROYED" //容器已销毁
        # "SHARED_HOST"         // 容器与主机共享网络
        # "RESOURCE_LIMIT"      //隔离操作资源超限
        # "UNKNOW"              // 原因未知
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ContainerNetSubStatus: String
        # @param ContainerIsolateOperationSrc: 容器隔离操作来源
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ContainerIsolateOperationSrc: String
        # @param ContainerStatus: 容器状态
        # 正在运行: RUNNING
        # 暂停: PAUSED
        # 停止: STOPPED
        # 已经创建: CREATED
        # 已经销毁: DESTROYED
        # 正在重启中: RESTARTING
        # 迁移中: REMOVING
        # @type ContainerStatus: String
        # @param ClusterID: 集群ID
        # @type ClusterID: String
        # @param NodeType: 节点类型：NORMAL普通节点、SUPER超级节点
        # @type NodeType: String
        # @param PodName: pod 名称
        # @type PodName: String
        # @param PodIP: pod ip
        # @type PodIP: String
        # @param NodeUniqueID: 集群id
        # @type NodeUniqueID: String
        # @param PublicIP: 节点公网ip
        # @type PublicIP: String
        # @param NodeName: 节点名称
        # @type NodeName: String
        # @param NodeID: 节点id
        # @type NodeID: String
        # @param HostID: uuid
        # @type HostID: String
        # @param HostIP: 节点内网ip
        # @type HostIP: String
        # @param ClusterName: 集群名称
        # @type ClusterName: String

        attr_accessor :ProcessPath, :EventType, :MatchRuleName, :FoundTime, :ContainerName, :ImageName, :Behavior, :Status, :Id, :ImageId, :ContainerId, :Solution, :Description, :MatchRuleId, :MatchAction, :MatchProcessPath, :RuleExist, :EventCount, :LatestFoundTime, :RuleId, :MatchGroupName, :MatchRuleLevel, :ContainerNetStatus, :ContainerNetSubStatus, :ContainerIsolateOperationSrc, :ContainerStatus, :ClusterID, :NodeType, :PodName, :PodIP, :NodeUniqueID, :PublicIP, :NodeName, :NodeID, :HostID, :HostIP, :ClusterName

        def initialize(processpath=nil, eventtype=nil, matchrulename=nil, foundtime=nil, containername=nil, imagename=nil, behavior=nil, status=nil, id=nil, imageid=nil, containerid=nil, solution=nil, description=nil, matchruleid=nil, matchaction=nil, matchprocesspath=nil, ruleexist=nil, eventcount=nil, latestfoundtime=nil, ruleid=nil, matchgroupname=nil, matchrulelevel=nil, containernetstatus=nil, containernetsubstatus=nil, containerisolateoperationsrc=nil, containerstatus=nil, clusterid=nil, nodetype=nil, podname=nil, podip=nil, nodeuniqueid=nil, publicip=nil, nodename=nil, nodeid=nil, hostid=nil, hostip=nil, clustername=nil)
          @ProcessPath = processpath
          @EventType = eventtype
          @MatchRuleName = matchrulename
          @FoundTime = foundtime
          @ContainerName = containername
          @ImageName = imagename
          @Behavior = behavior
          @Status = status
          @Id = id
          @ImageId = imageid
          @ContainerId = containerid
          @Solution = solution
          @Description = description
          @MatchRuleId = matchruleid
          @MatchAction = matchaction
          @MatchProcessPath = matchprocesspath
          @RuleExist = ruleexist
          @EventCount = eventcount
          @LatestFoundTime = latestfoundtime
          @RuleId = ruleid
          @MatchGroupName = matchgroupname
          @MatchRuleLevel = matchrulelevel
          @ContainerNetStatus = containernetstatus
          @ContainerNetSubStatus = containernetsubstatus
          @ContainerIsolateOperationSrc = containerisolateoperationsrc
          @ContainerStatus = containerstatus
          @ClusterID = clusterid
          @NodeType = nodetype
          @PodName = podname
          @PodIP = podip
          @NodeUniqueID = nodeuniqueid
          @PublicIP = publicip
          @NodeName = nodename
          @NodeID = nodeid
          @HostID = hostid
          @HostIP = hostip
          @ClusterName = clustername
        end

        def deserialize(params)
          @ProcessPath = params['ProcessPath']
          @EventType = params['EventType']
          @MatchRuleName = params['MatchRuleName']
          @FoundTime = params['FoundTime']
          @ContainerName = params['ContainerName']
          @ImageName = params['ImageName']
          @Behavior = params['Behavior']
          @Status = params['Status']
          @Id = params['Id']
          @ImageId = params['ImageId']
          @ContainerId = params['ContainerId']
          @Solution = params['Solution']
          @Description = params['Description']
          @MatchRuleId = params['MatchRuleId']
          @MatchAction = params['MatchAction']
          @MatchProcessPath = params['MatchProcessPath']
          @RuleExist = params['RuleExist']
          @EventCount = params['EventCount']
          @LatestFoundTime = params['LatestFoundTime']
          @RuleId = params['RuleId']
          @MatchGroupName = params['MatchGroupName']
          @MatchRuleLevel = params['MatchRuleLevel']
          @ContainerNetStatus = params['ContainerNetStatus']
          @ContainerNetSubStatus = params['ContainerNetSubStatus']
          @ContainerIsolateOperationSrc = params['ContainerIsolateOperationSrc']
          @ContainerStatus = params['ContainerStatus']
          @ClusterID = params['ClusterID']
          @NodeType = params['NodeType']
          @PodName = params['PodName']
          @PodIP = params['PodIP']
          @NodeUniqueID = params['NodeUniqueID']
          @PublicIP = params['PublicIP']
          @NodeName = params['NodeName']
          @NodeID = params['NodeID']
          @HostID = params['HostID']
          @HostIP = params['HostIP']
          @ClusterName = params['ClusterName']
        end
      end

      # 待处理异常进程事件趋势
      class AbnormalProcessEventTendencyInfo < TencentCloud::Common::AbstractModel
        # @param Date: 日期
        # @type Date: String
        # @param ProxyToolEventCount: 待处理代理软件事件数
        # @type ProxyToolEventCount: Integer
        # @param TransferControlEventCount: 待处理横向参透事件数
        # @type TransferControlEventCount: Integer
        # @param AttackCmdEventCount: 待处理恶意命令事件数
        # @type AttackCmdEventCount: Integer
        # @param ReverseShellEventCount: 待处理反弹shell事件数
        # @type ReverseShellEventCount: Integer
        # @param FilelessEventCount: 待处理无文件程序执行事件数
        # @type FilelessEventCount: Integer
        # @param RiskCmdEventCount: 待处理高危命令事件数
        # @type RiskCmdEventCount: Integer
        # @param AbnormalChildProcessEventCount: 待处理敏感服务异常子进程启动事件数
        # @type AbnormalChildProcessEventCount: Integer
        # @param UserDefinedRuleEventCount: 待处理自定义规则事件数
        # @type UserDefinedRuleEventCount: Integer

        attr_accessor :Date, :ProxyToolEventCount, :TransferControlEventCount, :AttackCmdEventCount, :ReverseShellEventCount, :FilelessEventCount, :RiskCmdEventCount, :AbnormalChildProcessEventCount, :UserDefinedRuleEventCount

        def initialize(date=nil, proxytooleventcount=nil, transfercontroleventcount=nil, attackcmdeventcount=nil, reverseshelleventcount=nil, filelesseventcount=nil, riskcmdeventcount=nil, abnormalchildprocesseventcount=nil, userdefinedruleeventcount=nil)
          @Date = date
          @ProxyToolEventCount = proxytooleventcount
          @TransferControlEventCount = transfercontroleventcount
          @AttackCmdEventCount = attackcmdeventcount
          @ReverseShellEventCount = reverseshelleventcount
          @FilelessEventCount = filelesseventcount
          @RiskCmdEventCount = riskcmdeventcount
          @AbnormalChildProcessEventCount = abnormalchildprocesseventcount
          @UserDefinedRuleEventCount = userdefinedruleeventcount
        end

        def deserialize(params)
          @Date = params['Date']
          @ProxyToolEventCount = params['ProxyToolEventCount']
          @TransferControlEventCount = params['TransferControlEventCount']
          @AttackCmdEventCount = params['AttackCmdEventCount']
          @ReverseShellEventCount = params['ReverseShellEventCount']
          @FilelessEventCount = params['FilelessEventCount']
          @RiskCmdEventCount = params['RiskCmdEventCount']
          @AbnormalChildProcessEventCount = params['AbnormalChildProcessEventCount']
          @UserDefinedRuleEventCount = params['UserDefinedRuleEventCount']
        end
      end

      # 运行时安全，异常进程检测策略
      class AbnormalProcessRuleInfo < TencentCloud::Common::AbstractModel
        # @param IsEnable: true:策略启用，false:策略禁用
        # @type IsEnable: Boolean
        # @param ImageIds: 生效镜像id，空数组代表全部镜像
        # @type ImageIds: Array
        # @param ChildRules: 用户策略的子策略数组
        # @type ChildRules: Array
        # @param RuleName: 策略名字
        # @type RuleName: String
        # @param RuleId: 策略id
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type RuleId: String
        # @param SystemChildRules: 系统策略的子策略数组
        # @type SystemChildRules: Array
        # @param IsDefault: 是否是系统默认策略
        # @type IsDefault: Boolean

        attr_accessor :IsEnable, :ImageIds, :ChildRules, :RuleName, :RuleId, :SystemChildRules, :IsDefault

        def initialize(isenable=nil, imageids=nil, childrules=nil, rulename=nil, ruleid=nil, systemchildrules=nil, isdefault=nil)
          @IsEnable = isenable
          @ImageIds = imageids
          @ChildRules = childrules
          @RuleName = rulename
          @RuleId = ruleid
          @SystemChildRules = systemchildrules
          @IsDefault = isdefault
        end

        def deserialize(params)
          @IsEnable = params['IsEnable']
          @ImageIds = params['ImageIds']
          unless params['ChildRules'].nil?
            @ChildRules = []
            params['ChildRules'].each do |i|
              abnormalprocesschildruleinfo_tmp = AbnormalProcessChildRuleInfo.new
              abnormalprocesschildruleinfo_tmp.deserialize(i)
              @ChildRules << abnormalprocesschildruleinfo_tmp
            end
          end
          @RuleName = params['RuleName']
          @RuleId = params['RuleId']
          unless params['SystemChildRules'].nil?
            @SystemChildRules = []
            params['SystemChildRules'].each do |i|
              abnormalprocesssystemchildruleinfo_tmp = AbnormalProcessSystemChildRuleInfo.new
              abnormalprocesssystemchildruleinfo_tmp.deserialize(i)
              @SystemChildRules << abnormalprocesssystemchildruleinfo_tmp
            end
          end
          @IsDefault = params['IsDefault']
        end
      end

      # 异常进程系统策略的子策略信息
      class AbnormalProcessSystemChildRuleInfo < TencentCloud::Common::AbstractModel
        # @param RuleId: 子策略Id
        # @type RuleId: String
        # @param IsEnable: 子策略状态，true为开启，false为关闭
        # @type IsEnable: Boolean
        # @param RuleMode: 策略模式,  RULE_MODE_RELEASE: 放行
        #    RULE_MODE_ALERT: 告警
        #    RULE_MODE_HOLDUP:拦截
        # @type RuleMode: String
        # @param RuleType: 子策略检测的行为类型
        # PROXY_TOOL： 代理软件
        # TRANSFER_CONTROL：横向渗透
        # ATTACK_CMD： 恶意命令
        # REVERSE_SHELL：反弹shell
        # FILELESS：无文件程序执行
        # RISK_CMD：高危命令
        # ABNORMAL_CHILD_PROC: 敏感服务异常子进程启动
        # @type RuleType: String
        # @param RuleLevel: 威胁等级，HIGH:高，MIDDLE:中，LOW:低
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type RuleLevel: String

        attr_accessor :RuleId, :IsEnable, :RuleMode, :RuleType, :RuleLevel

        def initialize(ruleid=nil, isenable=nil, rulemode=nil, ruletype=nil, rulelevel=nil)
          @RuleId = ruleid
          @IsEnable = isenable
          @RuleMode = rulemode
          @RuleType = ruletype
          @RuleLevel = rulelevel
        end

        def deserialize(params)
          @RuleId = params['RuleId']
          @IsEnable = params['IsEnable']
          @RuleMode = params['RuleMode']
          @RuleType = params['RuleType']
          @RuleLevel = params['RuleLevel']
        end
      end

      # 容器运行时安全，访问控制子策略信息
      class AccessControlChildRuleInfo < TencentCloud::Common::AbstractModel
        # @param RuleMode: 策略模式,  RULE_MODE_RELEASE: 放行
        #    RULE_MODE_ALERT: 告警
        #    RULE_MODE_HOLDUP:拦截
        # @type RuleMode: String
        # @param ProcessPath: 进程路径
        # @type ProcessPath: String
        # @param TargetFilePath: 被访问文件路径，仅仅在访问控制生效
        # @type TargetFilePath: String
        # @param RuleId: 子策略id
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type RuleId: String

        attr_accessor :RuleMode, :ProcessPath, :TargetFilePath, :RuleId

        def initialize(rulemode=nil, processpath=nil, targetfilepath=nil, ruleid=nil)
          @RuleMode = rulemode
          @ProcessPath = processpath
          @TargetFilePath = targetfilepath
          @RuleId = ruleid
        end

        def deserialize(params)
          @RuleMode = params['RuleMode']
          @ProcessPath = params['ProcessPath']
          @TargetFilePath = params['TargetFilePath']
          @RuleId = params['RuleId']
        end
      end

      # 运行时容器访问控制事件描述信息
      class AccessControlEventDescription < TencentCloud::Common::AbstractModel
        # @param Description: 事件规则
        # @type Description: String
        # @param Solution: 解决方案
        # @type Solution: String
        # @param Remark: 事件备注信息
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Remark: String
        # @param MatchRule: 命中规则详细信息
        # @type MatchRule: :class:`Tencentcloud::Tcss.v20201101.models.AccessControlChildRuleInfo`
        # @param RuleName: 命中规则名字
        # @type RuleName: String
        # @param RuleId: 命中规则id
        # @type RuleId: String
        # @param OperationTime: 事件最后一次处理的时间
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type OperationTime: String

        attr_accessor :Description, :Solution, :Remark, :MatchRule, :RuleName, :RuleId, :OperationTime

        def initialize(description=nil, solution=nil, remark=nil, matchrule=nil, rulename=nil, ruleid=nil, operationtime=nil)
          @Description = description
          @Solution = solution
          @Remark = remark
          @MatchRule = matchrule
          @RuleName = rulename
          @RuleId = ruleid
          @OperationTime = operationtime
        end

        def deserialize(params)
          @Description = params['Description']
          @Solution = params['Solution']
          @Remark = params['Remark']
          unless params['MatchRule'].nil?
            @MatchRule = AccessControlChildRuleInfo.new
            @MatchRule.deserialize(params['MatchRule'])
          end
          @RuleName = params['RuleName']
          @RuleId = params['RuleId']
          @OperationTime = params['OperationTime']
        end
      end

      # 容器运行时安全访问控制事件信息
      class AccessControlEventInfo < TencentCloud::Common::AbstractModel
        # @param ProcessName: 进程名称
        # @type ProcessName: String
        # @param MatchRuleName: 命中规则名称
        # @type MatchRuleName: String
        # @param FoundTime: 生成时间
        # @type FoundTime: String
        # @param ContainerName: 容器名
        # @type ContainerName: String
        # @param ImageName: 镜像名
        # @type ImageName: String
        # @param Behavior: 动作执行结果，   BEHAVIOR_NONE: 无
        #     BEHAVIOR_ALERT: 告警
        #     BEHAVIOR_RELEASE：放行
        #     BEHAVIOR_HOLDUP_FAILED:拦截失败
        #     BEHAVIOR_HOLDUP_SUCCESSED：拦截失败
        # @type Behavior: String
        # @param Status: 状态0:未处理  “EVENT_UNDEAL”:事件未处理
        #     "EVENT_DEALED":事件已经处理
        #     "EVENT_INGNORE"：事件已经忽略
        # @type Status: String
        # @param Id: 事件记录的唯一id
        # @type Id: String
        # @param FileName: 文件名称
        # @type FileName: String
        # @param EventType: 事件类型， FILE_ABNORMAL_READ:文件异常读取
        # @type EventType: String
        # @param ImageId: 镜像id, 用于跳转
        # @type ImageId: String
        # @param ContainerId: 容器id, 用于跳转
        # @type ContainerId: String
        # @param Solution: 事件解决方案
        # @type Solution: String
        # @param Description: 事件详细描述
        # @type Description: String
        # @param MatchRuleId: 命中策略id
        # @type MatchRuleId: String
        # @param MatchAction: 命中规则行为：
        # RULE_MODE_RELEASE 放行
        # RULE_MODE_ALERT  告警
        # RULE_MODE_HOLDUP 拦截
        # @type MatchAction: String
        # @param MatchProcessPath: 命中规则进程信息
        # @type MatchProcessPath: String
        # @param MatchFilePath: 命中规则文件信息
        # @type MatchFilePath: String
        # @param FilePath: 文件路径，包含名字
        # @type FilePath: String
        # @param RuleExist: 规则是否存在
        # @type RuleExist: Boolean
        # @param EventCount: 事件数量
        # @type EventCount: Integer
        # @param LatestFoundTime: 最近生成时间
        # @type LatestFoundTime: String
        # @param RuleId: 规则组id
        # @type RuleId: String
        # @param ContainerNetStatus: 网络状态
        # 未隔离  	NORMAL
        # 已隔离		ISOLATED
        # 隔离中		ISOLATING
        # 隔离失败	ISOLATE_FAILED
        # 解除隔离中  RESTORING
        # 解除隔离失败 RESTORE_FAILED
        # @type ContainerNetStatus: String
        # @param ContainerNetSubStatus: 容器子状态
        # "AGENT_OFFLINE"       //Agent离线
        # "NODE_DESTROYED"      //节点已销毁
        # "CONTAINER_EXITED"    //容器已退出
        # "CONTAINER_DESTROYED" //容器已销毁
        # "SHARED_HOST"         // 容器与主机共享网络
        # "RESOURCE_LIMIT"      //隔离操作资源超限
        # "UNKNOW"              // 原因未知
        # @type ContainerNetSubStatus: String
        # @param ContainerIsolateOperationSrc: 容器隔离操作来源
        # @type ContainerIsolateOperationSrc: String
        # @param ContainerStatus: 容器状态
        # 正在运行: RUNNING
        # 暂停: PAUSED
        # 停止: STOPPED
        # 已经创建: CREATED
        # 已经销毁: DESTROYED
        # 正在重启中: RESTARTING
        # 迁移中: REMOVING
        # @type ContainerStatus: String
        # @param NodeName: 节点名称：如果是超级节点，展示的实质上是它的node_id
        # @type NodeName: String
        # @param PodName: pod名称
        # @type PodName: String
        # @param PodIP: pod ip
        # @type PodIP: String
        # @param NodeType: 节点类型：NORMAL普通节点、SUPER超级节点
        # @type NodeType: String
        # @param ClusterID: 集群id
        # @type ClusterID: String
        # @param NodeUniqueID: 节点的唯一id，主要是超级节点使用
        # @type NodeUniqueID: String
        # @param PublicIP: 节点公网IP
        # @type PublicIP: String
        # @param NodeID: 节点id
        # @type NodeID: String
        # @param HostID: uuid
        # @type HostID: String
        # @param HostIP: 节点内网ip
        # @type HostIP: String
        # @param ClusterName: 集群名称
        # @type ClusterName: String

        attr_accessor :ProcessName, :MatchRuleName, :FoundTime, :ContainerName, :ImageName, :Behavior, :Status, :Id, :FileName, :EventType, :ImageId, :ContainerId, :Solution, :Description, :MatchRuleId, :MatchAction, :MatchProcessPath, :MatchFilePath, :FilePath, :RuleExist, :EventCount, :LatestFoundTime, :RuleId, :ContainerNetStatus, :ContainerNetSubStatus, :ContainerIsolateOperationSrc, :ContainerStatus, :NodeName, :PodName, :PodIP, :NodeType, :ClusterID, :NodeUniqueID, :PublicIP, :NodeID, :HostID, :HostIP, :ClusterName

        def initialize(processname=nil, matchrulename=nil, foundtime=nil, containername=nil, imagename=nil, behavior=nil, status=nil, id=nil, filename=nil, eventtype=nil, imageid=nil, containerid=nil, solution=nil, description=nil, matchruleid=nil, matchaction=nil, matchprocesspath=nil, matchfilepath=nil, filepath=nil, ruleexist=nil, eventcount=nil, latestfoundtime=nil, ruleid=nil, containernetstatus=nil, containernetsubstatus=nil, containerisolateoperationsrc=nil, containerstatus=nil, nodename=nil, podname=nil, podip=nil, nodetype=nil, clusterid=nil, nodeuniqueid=nil, publicip=nil, nodeid=nil, hostid=nil, hostip=nil, clustername=nil)
          @ProcessName = processname
          @MatchRuleName = matchrulename
          @FoundTime = foundtime
          @ContainerName = containername
          @ImageName = imagename
          @Behavior = behavior
          @Status = status
          @Id = id
          @FileName = filename
          @EventType = eventtype
          @ImageId = imageid
          @ContainerId = containerid
          @Solution = solution
          @Description = description
          @MatchRuleId = matchruleid
          @MatchAction = matchaction
          @MatchProcessPath = matchprocesspath
          @MatchFilePath = matchfilepath
          @FilePath = filepath
          @RuleExist = ruleexist
          @EventCount = eventcount
          @LatestFoundTime = latestfoundtime
          @RuleId = ruleid
          @ContainerNetStatus = containernetstatus
          @ContainerNetSubStatus = containernetsubstatus
          @ContainerIsolateOperationSrc = containerisolateoperationsrc
          @ContainerStatus = containerstatus
          @NodeName = nodename
          @PodName = podname
          @PodIP = podip
          @NodeType = nodetype
          @ClusterID = clusterid
          @NodeUniqueID = nodeuniqueid
          @PublicIP = publicip
          @NodeID = nodeid
          @HostID = hostid
          @HostIP = hostip
          @ClusterName = clustername
        end

        def deserialize(params)
          @ProcessName = params['ProcessName']
          @MatchRuleName = params['MatchRuleName']
          @FoundTime = params['FoundTime']
          @ContainerName = params['ContainerName']
          @ImageName = params['ImageName']
          @Behavior = params['Behavior']
          @Status = params['Status']
          @Id = params['Id']
          @FileName = params['FileName']
          @EventType = params['EventType']
          @ImageId = params['ImageId']
          @ContainerId = params['ContainerId']
          @Solution = params['Solution']
          @Description = params['Description']
          @MatchRuleId = params['MatchRuleId']
          @MatchAction = params['MatchAction']
          @MatchProcessPath = params['MatchProcessPath']
          @MatchFilePath = params['MatchFilePath']
          @FilePath = params['FilePath']
          @RuleExist = params['RuleExist']
          @EventCount = params['EventCount']
          @LatestFoundTime = params['LatestFoundTime']
          @RuleId = params['RuleId']
          @ContainerNetStatus = params['ContainerNetStatus']
          @ContainerNetSubStatus = params['ContainerNetSubStatus']
          @ContainerIsolateOperationSrc = params['ContainerIsolateOperationSrc']
          @ContainerStatus = params['ContainerStatus']
          @NodeName = params['NodeName']
          @PodName = params['PodName']
          @PodIP = params['PodIP']
          @NodeType = params['NodeType']
          @ClusterID = params['ClusterID']
          @NodeUniqueID = params['NodeUniqueID']
          @PublicIP = params['PublicIP']
          @NodeID = params['NodeID']
          @HostID = params['HostID']
          @HostIP = params['HostIP']
          @ClusterName = params['ClusterName']
        end
      end

      # 容器运行时，访问控制策略信息
      class AccessControlRuleInfo < TencentCloud::Common::AbstractModel
        # @param IsEnable: 开关,true:开启，false:禁用
        # @type IsEnable: Boolean
        # @param ImageIds: 生效镜像id，空数组代表全部镜像
        # @type ImageIds: Array
        # @param ChildRules: 用户策略的子策略数组
        # @type ChildRules: Array
        # @param RuleName: 策略名字
        # @type RuleName: String
        # @param RuleId: 策略id
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type RuleId: String
        # @param SystemChildRules: 系统策略的子策略数组
        # @type SystemChildRules: Array
        # @param IsDefault: 是否是系统默认策略
        # @type IsDefault: Boolean

        attr_accessor :IsEnable, :ImageIds, :ChildRules, :RuleName, :RuleId, :SystemChildRules, :IsDefault

        def initialize(isenable=nil, imageids=nil, childrules=nil, rulename=nil, ruleid=nil, systemchildrules=nil, isdefault=nil)
          @IsEnable = isenable
          @ImageIds = imageids
          @ChildRules = childrules
          @RuleName = rulename
          @RuleId = ruleid
          @SystemChildRules = systemchildrules
          @IsDefault = isdefault
        end

        def deserialize(params)
          @IsEnable = params['IsEnable']
          @ImageIds = params['ImageIds']
          unless params['ChildRules'].nil?
            @ChildRules = []
            params['ChildRules'].each do |i|
              accesscontrolchildruleinfo_tmp = AccessControlChildRuleInfo.new
              accesscontrolchildruleinfo_tmp.deserialize(i)
              @ChildRules << accesscontrolchildruleinfo_tmp
            end
          end
          @RuleName = params['RuleName']
          @RuleId = params['RuleId']
          unless params['SystemChildRules'].nil?
            @SystemChildRules = []
            params['SystemChildRules'].each do |i|
              accesscontrolsystemchildruleinfo_tmp = AccessControlSystemChildRuleInfo.new
              accesscontrolsystemchildruleinfo_tmp.deserialize(i)
              @SystemChildRules << accesscontrolsystemchildruleinfo_tmp
            end
          end
          @IsDefault = params['IsDefault']
        end
      end

      # 容器运行时安全，访问控制系统策略的子策略信息
      class AccessControlSystemChildRuleInfo < TencentCloud::Common::AbstractModel
        # @param RuleId: 子策略Id
        # @type RuleId: String
        # @param RuleMode: 策略模式,  RULE_MODE_RELEASE: 放行
        #    RULE_MODE_ALERT: 告警
        #    RULE_MODE_HOLDUP:拦截
        # @type RuleMode: String
        # @param IsEnable: 子策略状态，true为开启，false为关闭
        # @type IsEnable: Boolean
        # @param RuleType: 子策略检测的入侵行为类型
        # CHANGE_CRONTAB：篡改计划任务
        # CHANGE_SYS_BIN：篡改系统程序
        # CHANGE_USRCFG：篡改用户配置
        # @type RuleType: String

        attr_accessor :RuleId, :RuleMode, :IsEnable, :RuleType

        def initialize(ruleid=nil, rulemode=nil, isenable=nil, ruletype=nil)
          @RuleId = ruleid
          @RuleMode = rulemode
          @IsEnable = isenable
          @RuleType = ruletype
        end

        def deserialize(params)
          @RuleId = params['RuleId']
          @RuleMode = params['RuleMode']
          @IsEnable = params['IsEnable']
          @RuleType = params['RuleType']
        end
      end

      # AddAndPublishNetworkFirewallPolicyDetail请求参数结构体
      class AddAndPublishNetworkFirewallPolicyDetailRequest < TencentCloud::Common::AbstractModel
        # @param ClusterId: 集群Id
        # @type ClusterId: String
        # @param PolicyName: 策略名
        # @type PolicyName: String
        # @param FromPolicyRule: 入站规则

        # 全部允许：1

        # 全部拒绝 ：2

        # 自定义：3
        # @type FromPolicyRule: Integer
        # @param ToPolicyRule: 出站规则

        # 全部允许：1

        # 全部拒绝 ：2

        # 自定义：3
        # @type ToPolicyRule: Integer
        # @param PodSelector: pod选择器
        # @type PodSelector: String
        # @param Namespace: 命名空间
        # @type Namespace: String
        # @param Description: 策略描述
        # @type Description: String
        # @param CustomPolicy: 自定义规则
        # @type CustomPolicy: Array

        attr_accessor :ClusterId, :PolicyName, :FromPolicyRule, :ToPolicyRule, :PodSelector, :Namespace, :Description, :CustomPolicy

        def initialize(clusterid=nil, policyname=nil, frompolicyrule=nil, topolicyrule=nil, podselector=nil, namespace=nil, description=nil, custompolicy=nil)
          @ClusterId = clusterid
          @PolicyName = policyname
          @FromPolicyRule = frompolicyrule
          @ToPolicyRule = topolicyrule
          @PodSelector = podselector
          @Namespace = namespace
          @Description = description
          @CustomPolicy = custompolicy
        end

        def deserialize(params)
          @ClusterId = params['ClusterId']
          @PolicyName = params['PolicyName']
          @FromPolicyRule = params['FromPolicyRule']
          @ToPolicyRule = params['ToPolicyRule']
          @PodSelector = params['PodSelector']
          @Namespace = params['Namespace']
          @Description = params['Description']
          unless params['CustomPolicy'].nil?
            @CustomPolicy = []
            params['CustomPolicy'].each do |i|
              networkcustompolicy_tmp = NetworkCustomPolicy.new
              networkcustompolicy_tmp.deserialize(i)
              @CustomPolicy << networkcustompolicy_tmp
            end
          end
        end
      end

      # AddAndPublishNetworkFirewallPolicyDetail返回参数结构体
      class AddAndPublishNetworkFirewallPolicyDetailResponse < TencentCloud::Common::AbstractModel
        # @param TaskId: 返回创建的任务的ID，为0表示创建失败。
        # @type TaskId: Integer
        # @param Result: 创建任务的结果，"Succ"为成功，"Failed"为失败
        # @type Result: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TaskId, :Result, :RequestId

        def initialize(taskid=nil, result=nil, requestid=nil)
          @TaskId = taskid
          @Result = result
          @RequestId = requestid
        end

        def deserialize(params)
          @TaskId = params['TaskId']
          @Result = params['Result']
          @RequestId = params['RequestId']
        end
      end

      # AddAndPublishNetworkFirewallPolicyYamlDetail请求参数结构体
      class AddAndPublishNetworkFirewallPolicyYamlDetailRequest < TencentCloud::Common::AbstractModel
        # @param ClusterId: 集群Id
        # @type ClusterId: String
        # @param PolicyName: 策略名
        # @type PolicyName: String
        # @param Yaml: base64编码的networkpolicy yaml字符串
        # @type Yaml: String
        # @param Description: 策略描述
        # @type Description: String

        attr_accessor :ClusterId, :PolicyName, :Yaml, :Description

        def initialize(clusterid=nil, policyname=nil, yaml=nil, description=nil)
          @ClusterId = clusterid
          @PolicyName = policyname
          @Yaml = yaml
          @Description = description
        end

        def deserialize(params)
          @ClusterId = params['ClusterId']
          @PolicyName = params['PolicyName']
          @Yaml = params['Yaml']
          @Description = params['Description']
        end
      end

      # AddAndPublishNetworkFirewallPolicyYamlDetail返回参数结构体
      class AddAndPublishNetworkFirewallPolicyYamlDetailResponse < TencentCloud::Common::AbstractModel
        # @param TaskId: 返回创建的任务的ID，为0表示创建失败。
        # @type TaskId: Integer
        # @param Result: 创建任务的结果，"Succ"为成功，"Failed"为失败
        # @type Result: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TaskId, :Result, :RequestId

        def initialize(taskid=nil, result=nil, requestid=nil)
          @TaskId = taskid
          @Result = result
          @RequestId = requestid
        end

        def deserialize(params)
          @TaskId = params['TaskId']
          @Result = params['Result']
          @RequestId = params['RequestId']
        end
      end

      # AddAssetImageRegistryRegistryDetail请求参数结构体
      class AddAssetImageRegistryRegistryDetailRequest < TencentCloud::Common::AbstractModel
        # @param Name: 仓库名
        # @type Name: String
        # @param Username: 用户名
        # @type Username: String
        # @param Password: 密码
        # @type Password: String
        # @param Url: 仓库url
        # @type Url: String
        # @param RegistryType: 仓库类型，列表：harbor
        # @type RegistryType: String
        # @param NetType: 网络类型，列表：public（公网）
        # @type NetType: String
        # @param RegistryVersion: 仓库版本
        # @type RegistryVersion: String
        # @param RegistryRegion: 区域，列表：default（默认）
        # @type RegistryRegion: String
        # @param SpeedLimit: 限速
        # @type SpeedLimit: Integer
        # @param Insecure: 安全模式（证书校验）：0（默认） 非安全模式（跳过证书校验）：1
        # @type Insecure: Integer
        # @param ConnDetectConfig: 联通性检测的记录ID
        # @type ConnDetectConfig: Array
        # @param NeedScan: ”授权&扫描"开关
        # @type NeedScan: Boolean

        attr_accessor :Name, :Username, :Password, :Url, :RegistryType, :NetType, :RegistryVersion, :RegistryRegion, :SpeedLimit, :Insecure, :ConnDetectConfig, :NeedScan

        def initialize(name=nil, username=nil, password=nil, url=nil, registrytype=nil, nettype=nil, registryversion=nil, registryregion=nil, speedlimit=nil, insecure=nil, conndetectconfig=nil, needscan=nil)
          @Name = name
          @Username = username
          @Password = password
          @Url = url
          @RegistryType = registrytype
          @NetType = nettype
          @RegistryVersion = registryversion
          @RegistryRegion = registryregion
          @SpeedLimit = speedlimit
          @Insecure = insecure
          @ConnDetectConfig = conndetectconfig
          @NeedScan = needscan
        end

        def deserialize(params)
          @Name = params['Name']
          @Username = params['Username']
          @Password = params['Password']
          @Url = params['Url']
          @RegistryType = params['RegistryType']
          @NetType = params['NetType']
          @RegistryVersion = params['RegistryVersion']
          @RegistryRegion = params['RegistryRegion']
          @SpeedLimit = params['SpeedLimit']
          @Insecure = params['Insecure']
          unless params['ConnDetectConfig'].nil?
            @ConnDetectConfig = []
            params['ConnDetectConfig'].each do |i|
              conndetectconfig_tmp = ConnDetectConfig.new
              conndetectconfig_tmp.deserialize(i)
              @ConnDetectConfig << conndetectconfig_tmp
            end
          end
          @NeedScan = params['NeedScan']
        end
      end

      # AddAssetImageRegistryRegistryDetail返回参数结构体
      class AddAssetImageRegistryRegistryDetailResponse < TencentCloud::Common::AbstractModel
        # @param HealthCheckErr: 连接错误信息
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type HealthCheckErr: String
        # @param NameRepeatErr: 名称错误信息
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type NameRepeatErr: String
        # @param RegistryId: 仓库唯一id
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type RegistryId: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :HealthCheckErr, :NameRepeatErr, :RegistryId, :RequestId

        def initialize(healthcheckerr=nil, namerepeaterr=nil, registryid=nil, requestid=nil)
          @HealthCheckErr = healthcheckerr
          @NameRepeatErr = namerepeaterr
          @RegistryId = registryid
          @RequestId = requestid
        end

        def deserialize(params)
          @HealthCheckErr = params['HealthCheckErr']
          @NameRepeatErr = params['NameRepeatErr']
          @RegistryId = params['RegistryId']
          @RequestId = params['RequestId']
        end
      end

      # AddComplianceAssetPolicySetToWhitelist请求参数结构体
      class AddComplianceAssetPolicySetToWhitelistRequest < TencentCloud::Common::AbstractModel
        # @param AssetPolicySetList: 资产ID+检查项IDs. 列表
        # @type AssetPolicySetList: Array
        # @param AssetType: 扫描资产类型 <li>ASSET_CONTAINER Docker容器</li> <li>ASSET_IMAGE Docker镜像</li> <li>ASSET_HOST Docker主机</li> <li>ASSET_K8S Kubernetes</li> <li>ASSET_CONTAINERD Containerd主机</li> <li>ASSET_CONTAINERD_CONTAINER Containerd容器</li>
        # @type AssetType: String

        attr_accessor :AssetPolicySetList, :AssetType

        def initialize(assetpolicysetlist=nil, assettype=nil)
          @AssetPolicySetList = assetpolicysetlist
          @AssetType = assettype
        end

        def deserialize(params)
          unless params['AssetPolicySetList'].nil?
            @AssetPolicySetList = []
            params['AssetPolicySetList'].each do |i|
              complianceassetpolicysetitem_tmp = ComplianceAssetPolicySetItem.new
              complianceassetpolicysetitem_tmp.deserialize(i)
              @AssetPolicySetList << complianceassetpolicysetitem_tmp
            end
          end
          @AssetType = params['AssetType']
        end
      end

      # AddComplianceAssetPolicySetToWhitelist返回参数结构体
      class AddComplianceAssetPolicySetToWhitelistResponse < TencentCloud::Common::AbstractModel
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RequestId

        def initialize(requestid=nil)
          @RequestId = requestid
        end

        def deserialize(params)
          @RequestId = params['RequestId']
        end
      end

      # AddCompliancePolicyAssetSetToWhitelist请求参数结构体
      class AddCompliancePolicyAssetSetToWhitelistRequest < TencentCloud::Common::AbstractModel
        # @param CustomerPolicyItemId: 检查项ID
        # @type CustomerPolicyItemId: Integer
        # @param CustomerAssetItemIdSet: 需要忽略指定检查项内的资产ID列表
        # @type CustomerAssetItemIdSet: Array

        attr_accessor :CustomerPolicyItemId, :CustomerAssetItemIdSet

        def initialize(customerpolicyitemid=nil, customerassetitemidset=nil)
          @CustomerPolicyItemId = customerpolicyitemid
          @CustomerAssetItemIdSet = customerassetitemidset
        end

        def deserialize(params)
          @CustomerPolicyItemId = params['CustomerPolicyItemId']
          @CustomerAssetItemIdSet = params['CustomerAssetItemIdSet']
        end
      end

      # AddCompliancePolicyAssetSetToWhitelist返回参数结构体
      class AddCompliancePolicyAssetSetToWhitelistResponse < TencentCloud::Common::AbstractModel
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RequestId

        def initialize(requestid=nil)
          @RequestId = requestid
        end

        def deserialize(params)
          @RequestId = params['RequestId']
        end
      end

      # AddCompliancePolicyItemToWhitelist请求参数结构体
      class AddCompliancePolicyItemToWhitelistRequest < TencentCloud::Common::AbstractModel
        # @param CustomerPolicyItemIdSet: 要忽略的检测项的ID的列表
        # @type CustomerPolicyItemIdSet: Array

        attr_accessor :CustomerPolicyItemIdSet

        def initialize(customerpolicyitemidset=nil)
          @CustomerPolicyItemIdSet = customerpolicyitemidset
        end

        def deserialize(params)
          @CustomerPolicyItemIdSet = params['CustomerPolicyItemIdSet']
        end
      end

      # AddCompliancePolicyItemToWhitelist返回参数结构体
      class AddCompliancePolicyItemToWhitelistResponse < TencentCloud::Common::AbstractModel
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RequestId

        def initialize(requestid=nil)
          @RequestId = requestid
        end

        def deserialize(params)
          @RequestId = params['RequestId']
        end
      end

      # AddEditAbnormalProcessRule请求参数结构体
      class AddEditAbnormalProcessRuleRequest < TencentCloud::Common::AbstractModel
        # @param RuleInfo: 增加策略信息，策略id为空，编辑策略是id不能为空
        # @type RuleInfo: :class:`Tencentcloud::Tcss.v20201101.models.AbnormalProcessRuleInfo`
        # @param EventId: 仅在加白的时候带上
        # @type EventId: String

        attr_accessor :RuleInfo, :EventId

        def initialize(ruleinfo=nil, eventid=nil)
          @RuleInfo = ruleinfo
          @EventId = eventid
        end

        def deserialize(params)
          unless params['RuleInfo'].nil?
            @RuleInfo = AbnormalProcessRuleInfo.new
            @RuleInfo.deserialize(params['RuleInfo'])
          end
          @EventId = params['EventId']
        end
      end

      # AddEditAbnormalProcessRule返回参数结构体
      class AddEditAbnormalProcessRuleResponse < TencentCloud::Common::AbstractModel
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RequestId

        def initialize(requestid=nil)
          @RequestId = requestid
        end

        def deserialize(params)
          @RequestId = params['RequestId']
        end
      end

      # AddEditAccessControlRule请求参数结构体
      class AddEditAccessControlRuleRequest < TencentCloud::Common::AbstractModel
        # @param RuleInfo: 增加策略信息，策略id为空，编辑策略是id不能为空
        # @type RuleInfo: :class:`Tencentcloud::Tcss.v20201101.models.AccessControlRuleInfo`
        # @param EventId: 仅在白名单时候使用
        # @type EventId: String

        attr_accessor :RuleInfo, :EventId

        def initialize(ruleinfo=nil, eventid=nil)
          @RuleInfo = ruleinfo
          @EventId = eventid
        end

        def deserialize(params)
          unless params['RuleInfo'].nil?
            @RuleInfo = AccessControlRuleInfo.new
            @RuleInfo.deserialize(params['RuleInfo'])
          end
          @EventId = params['EventId']
        end
      end

      # AddEditAccessControlRule返回参数结构体
      class AddEditAccessControlRuleResponse < TencentCloud::Common::AbstractModel
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RequestId

        def initialize(requestid=nil)
          @RequestId = requestid
        end

        def deserialize(params)
          @RequestId = params['RequestId']
        end
      end

      # AddEditImageAutoAuthorizedRule请求参数结构体
      class AddEditImageAutoAuthorizedRuleRequest < TencentCloud::Common::AbstractModel
        # @param RangeType: 授权范围类别，MANUAL:自选主机节点，ALL:全部镜像
        # @type RangeType: String
        # @param MaxDailyCount: 每天最大的镜像授权数限制, 0表示无限制
        # @type MaxDailyCount: Integer
        # @param IsEnabled: 规则是否生效，0:不生效，1:已生效
        # @type IsEnabled: Integer
        # @param HostIdSet: 自选主机id，当授权范围为MANUAL:自选主机时且HostIdFilters为空时，必填
        # @type HostIdSet: Array
        # @param RuleId: 规则id，在编辑时，必填
        # @type RuleId: Integer
        # @param HostIdFilters: 根据条件过滤，当授权范围为MANUAL:自选主机时且HostIdSet为空时，必填
        # @type HostIdFilters: Array
        # @param ExcludeHostIdSet: 根据条件过滤而且排除指定主机id
        # @type ExcludeHostIdSet: Array
        # @param AutoScanEnabled: 自动扫描开关
        # @type AutoScanEnabled: Integer
        # @param ScanType: 自动扫描范围
        # @type ScanType: Array

        attr_accessor :RangeType, :MaxDailyCount, :IsEnabled, :HostIdSet, :RuleId, :HostIdFilters, :ExcludeHostIdSet, :AutoScanEnabled, :ScanType

        def initialize(rangetype=nil, maxdailycount=nil, isenabled=nil, hostidset=nil, ruleid=nil, hostidfilters=nil, excludehostidset=nil, autoscanenabled=nil, scantype=nil)
          @RangeType = rangetype
          @MaxDailyCount = maxdailycount
          @IsEnabled = isenabled
          @HostIdSet = hostidset
          @RuleId = ruleid
          @HostIdFilters = hostidfilters
          @ExcludeHostIdSet = excludehostidset
          @AutoScanEnabled = autoscanenabled
          @ScanType = scantype
        end

        def deserialize(params)
          @RangeType = params['RangeType']
          @MaxDailyCount = params['MaxDailyCount']
          @IsEnabled = params['IsEnabled']
          @HostIdSet = params['HostIdSet']
          @RuleId = params['RuleId']
          unless params['HostIdFilters'].nil?
            @HostIdFilters = []
            params['HostIdFilters'].each do |i|
              assetfilters_tmp = AssetFilters.new
              assetfilters_tmp.deserialize(i)
              @HostIdFilters << assetfilters_tmp
            end
          end
          @ExcludeHostIdSet = params['ExcludeHostIdSet']
          @AutoScanEnabled = params['AutoScanEnabled']
          @ScanType = params['ScanType']
        end
      end

      # AddEditImageAutoAuthorizedRule返回参数结构体
      class AddEditImageAutoAuthorizedRuleResponse < TencentCloud::Common::AbstractModel
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RequestId

        def initialize(requestid=nil)
          @RequestId = requestid
        end

        def deserialize(params)
          @RequestId = params['RequestId']
        end
      end

      # AddEditReverseShellWhiteList请求参数结构体
      class AddEditReverseShellWhiteListRequest < TencentCloud::Common::AbstractModel
        # @param WhiteListInfo: 增加或编辑白名单信息。新增白名单时WhiteListInfo.id为空，编辑白名单WhiteListInfo.id不能为空。
        # @type WhiteListInfo: :class:`Tencentcloud::Tcss.v20201101.models.ReverseShellWhiteListInfo`
        # @param EventId: 仅在添加事件白名单时候使用
        # @type EventId: String

        attr_accessor :WhiteListInfo, :EventId

        def initialize(whitelistinfo=nil, eventid=nil)
          @WhiteListInfo = whitelistinfo
          @EventId = eventid
        end

        def deserialize(params)
          unless params['WhiteListInfo'].nil?
            @WhiteListInfo = ReverseShellWhiteListInfo.new
            @WhiteListInfo.deserialize(params['WhiteListInfo'])
          end
          @EventId = params['EventId']
        end
      end

      # AddEditReverseShellWhiteList返回参数结构体
      class AddEditReverseShellWhiteListResponse < TencentCloud::Common::AbstractModel
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RequestId

        def initialize(requestid=nil)
          @RequestId = requestid
        end

        def deserialize(params)
          @RequestId = params['RequestId']
        end
      end

      # AddEditRiskSyscallWhiteList请求参数结构体
      class AddEditRiskSyscallWhiteListRequest < TencentCloud::Common::AbstractModel
        # @param EventId: 仅在添加事件白名单时候使用
        # @type EventId: String
        # @param WhiteListInfo: 增加或编辑白名单信。新增白名单时WhiteListInfo.id为空，编辑白名单WhiteListInfo.id不能为空.
        # @type WhiteListInfo: :class:`Tencentcloud::Tcss.v20201101.models.RiskSyscallWhiteListInfo`

        attr_accessor :EventId, :WhiteListInfo

        def initialize(eventid=nil, whitelistinfo=nil)
          @EventId = eventid
          @WhiteListInfo = whitelistinfo
        end

        def deserialize(params)
          @EventId = params['EventId']
          unless params['WhiteListInfo'].nil?
            @WhiteListInfo = RiskSyscallWhiteListInfo.new
            @WhiteListInfo.deserialize(params['WhiteListInfo'])
          end
        end
      end

      # AddEditRiskSyscallWhiteList返回参数结构体
      class AddEditRiskSyscallWhiteListResponse < TencentCloud::Common::AbstractModel
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RequestId

        def initialize(requestid=nil)
          @RequestId = requestid
        end

        def deserialize(params)
          @RequestId = params['RequestId']
        end
      end

      # AddEditWarningRules请求参数结构体
      class AddEditWarningRulesRequest < TencentCloud::Common::AbstractModel
        # @param WarningRules: 告警开关策略
        # @type WarningRules: Array

        attr_accessor :WarningRules

        def initialize(warningrules=nil)
          @WarningRules = warningrules
        end

        def deserialize(params)
          unless params['WarningRules'].nil?
            @WarningRules = []
            params['WarningRules'].each do |i|
              warningrule_tmp = WarningRule.new
              warningrule_tmp.deserialize(i)
              @WarningRules << warningrule_tmp
            end
          end
        end
      end

      # AddEditWarningRules返回参数结构体
      class AddEditWarningRulesResponse < TencentCloud::Common::AbstractModel
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RequestId

        def initialize(requestid=nil)
          @RequestId = requestid
        end

        def deserialize(params)
          @RequestId = params['RequestId']
        end
      end

      # AddEscapeWhiteList请求参数结构体
      class AddEscapeWhiteListRequest < TencentCloud::Common::AbstractModel
        # @param EventType: 加白名单事件类型
        #    ESCAPE_CGROUPS：利用cgroup机制逃逸
        #    ESCAPE_TAMPER_SENSITIVE_FILE：篡改敏感文件逃逸
        #    ESCAPE_DOCKER_API：访问Docker API接口逃逸
        #    ESCAPE_VUL_OCCURRED：逃逸漏洞利用
        #    MOUNT_SENSITIVE_PTAH：敏感路径挂载
        #    PRIVILEGE_CONTAINER_START：特权容器
        #    PRIVILEGE：程序提权逃逸
        # @type EventType: Array
        # @param ImageIDs: 加白名单镜像ID数组
        # @type ImageIDs: Array

        attr_accessor :EventType, :ImageIDs

        def initialize(eventtype=nil, imageids=nil)
          @EventType = eventtype
          @ImageIDs = imageids
        end

        def deserialize(params)
          @EventType = params['EventType']
          @ImageIDs = params['ImageIDs']
        end
      end

      # AddEscapeWhiteList返回参数结构体
      class AddEscapeWhiteListResponse < TencentCloud::Common::AbstractModel
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RequestId

        def initialize(requestid=nil)
          @RequestId = requestid
        end

        def deserialize(params)
          @RequestId = params['RequestId']
        end
      end

      # AddIgnoreVul请求参数结构体
      class AddIgnoreVulRequest < TencentCloud::Common::AbstractModel
        # @param List: 漏洞PocID信息列表
        # @type List: Array

        attr_accessor :List

        def initialize(list=nil)
          @List = list
        end

        def deserialize(params)
          unless params['List'].nil?
            @List = []
            params['List'].each do |i|
              modifyignorevul_tmp = ModifyIgnoreVul.new
              modifyignorevul_tmp.deserialize(i)
              @List << modifyignorevul_tmp
            end
          end
        end
      end

      # AddIgnoreVul返回参数结构体
      class AddIgnoreVulResponse < TencentCloud::Common::AbstractModel
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RequestId

        def initialize(requestid=nil)
          @RequestId = requestid
        end

        def deserialize(params)
          @RequestId = params['RequestId']
        end
      end

      # AddNetworkFirewallPolicyDetail请求参数结构体
      class AddNetworkFirewallPolicyDetailRequest < TencentCloud::Common::AbstractModel
        # @param ClusterId: 集群Id
        # @type ClusterId: String
        # @param PolicyName: 策略名
        # @type PolicyName: String
        # @param FromPolicyRule: 入站规则

        # 全部允许：1

        # 全部拒绝 ：2

        # 自定义：3
        # @type FromPolicyRule: Integer
        # @param ToPolicyRule: 出站规则

        # 全部允许：1

        # 全部拒绝 ：2

        # 自定义：3
        # @type ToPolicyRule: Integer
        # @param PodSelector: pod选择器
        # @type PodSelector: String
        # @param Namespace: 命名空间
        # @type Namespace: String
        # @param Description: 策略描述
        # @type Description: String
        # @param CustomPolicy: 自定义规则
        # @type CustomPolicy: Array

        attr_accessor :ClusterId, :PolicyName, :FromPolicyRule, :ToPolicyRule, :PodSelector, :Namespace, :Description, :CustomPolicy

        def initialize(clusterid=nil, policyname=nil, frompolicyrule=nil, topolicyrule=nil, podselector=nil, namespace=nil, description=nil, custompolicy=nil)
          @ClusterId = clusterid
          @PolicyName = policyname
          @FromPolicyRule = frompolicyrule
          @ToPolicyRule = topolicyrule
          @PodSelector = podselector
          @Namespace = namespace
          @Description = description
          @CustomPolicy = custompolicy
        end

        def deserialize(params)
          @ClusterId = params['ClusterId']
          @PolicyName = params['PolicyName']
          @FromPolicyRule = params['FromPolicyRule']
          @ToPolicyRule = params['ToPolicyRule']
          @PodSelector = params['PodSelector']
          @Namespace = params['Namespace']
          @Description = params['Description']
          unless params['CustomPolicy'].nil?
            @CustomPolicy = []
            params['CustomPolicy'].each do |i|
              networkcustompolicy_tmp = NetworkCustomPolicy.new
              networkcustompolicy_tmp.deserialize(i)
              @CustomPolicy << networkcustompolicy_tmp
            end
          end
        end
      end

      # AddNetworkFirewallPolicyDetail返回参数结构体
      class AddNetworkFirewallPolicyDetailResponse < TencentCloud::Common::AbstractModel
        # @param TaskId: 返回创建的任务的ID，为0表示创建失败。
        # @type TaskId: Integer
        # @param Result: 创建任务的结果，"Succ"为成功，"Failed"为失败
        # @type Result: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TaskId, :Result, :RequestId

        def initialize(taskid=nil, result=nil, requestid=nil)
          @TaskId = taskid
          @Result = result
          @RequestId = requestid
        end

        def deserialize(params)
          @TaskId = params['TaskId']
          @Result = params['Result']
          @RequestId = params['RequestId']
        end
      end

      # AddNetworkFirewallPolicyYamlDetail请求参数结构体
      class AddNetworkFirewallPolicyYamlDetailRequest < TencentCloud::Common::AbstractModel
        # @param ClusterId: 集群Id
        # @type ClusterId: String
        # @param PolicyName: 策略名
        # @type PolicyName: String
        # @param Yaml: base64编码的networkpolicy yaml字符串
        # @type Yaml: String
        # @param Description: 策略描述
        # @type Description: String

        attr_accessor :ClusterId, :PolicyName, :Yaml, :Description

        def initialize(clusterid=nil, policyname=nil, yaml=nil, description=nil)
          @ClusterId = clusterid
          @PolicyName = policyname
          @Yaml = yaml
          @Description = description
        end

        def deserialize(params)
          @ClusterId = params['ClusterId']
          @PolicyName = params['PolicyName']
          @Yaml = params['Yaml']
          @Description = params['Description']
        end
      end

      # AddNetworkFirewallPolicyYamlDetail返回参数结构体
      class AddNetworkFirewallPolicyYamlDetailResponse < TencentCloud::Common::AbstractModel
        # @param TaskId: 返回创建的任务的ID，为0表示创建失败。
        # @type TaskId: Integer
        # @param Result: 创建任务的结果，"Succ"为成功，"Failed"为失败
        # @type Result: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TaskId, :Result, :RequestId

        def initialize(taskid=nil, result=nil, requestid=nil)
          @TaskId = taskid
          @Result = result
          @RequestId = requestid
        end

        def deserialize(params)
          @TaskId = params['TaskId']
          @Result = params['Result']
          @RequestId = params['RequestId']
        end
      end

      # 受影响的节点类型结构体
      class AffectedNodeItem < TencentCloud::Common::AbstractModel
        # @param ClusterId: 集群ID
        # @type ClusterId: String
        # @param ClusterName: 集群名字
        # @type ClusterName: String
        # @param InstanceId: 实例id
        # @type InstanceId: String
        # @param PrivateIpAddresses: 内网ip地址
        # @type PrivateIpAddresses: String
        # @param InstanceRole: 节点的角色，Master、Work等
        # @type InstanceRole: String
        # @param ClusterVersion: k8s版本
        # @type ClusterVersion: String
        # @param ContainerRuntime: 运行时组件,docker或者containerd
        # @type ContainerRuntime: String
        # @param Region: 区域
        # @type Region: String
        # @param VerifyInfo: 检查结果的验证信息
        # @type VerifyInfo: String
        # @param NodeName: 节点名称
        # @type NodeName: String

        attr_accessor :ClusterId, :ClusterName, :InstanceId, :PrivateIpAddresses, :InstanceRole, :ClusterVersion, :ContainerRuntime, :Region, :VerifyInfo, :NodeName

        def initialize(clusterid=nil, clustername=nil, instanceid=nil, privateipaddresses=nil, instancerole=nil, clusterversion=nil, containerruntime=nil, region=nil, verifyinfo=nil, nodename=nil)
          @ClusterId = clusterid
          @ClusterName = clustername
          @InstanceId = instanceid
          @PrivateIpAddresses = privateipaddresses
          @InstanceRole = instancerole
          @ClusterVersion = clusterversion
          @ContainerRuntime = containerruntime
          @Region = region
          @VerifyInfo = verifyinfo
          @NodeName = nodename
        end

        def deserialize(params)
          @ClusterId = params['ClusterId']
          @ClusterName = params['ClusterName']
          @InstanceId = params['InstanceId']
          @PrivateIpAddresses = params['PrivateIpAddresses']
          @InstanceRole = params['InstanceRole']
          @ClusterVersion = params['ClusterVersion']
          @ContainerRuntime = params['ContainerRuntime']
          @Region = params['Region']
          @VerifyInfo = params['VerifyInfo']
          @NodeName = params['NodeName']
        end
      end

      # 集群安全检查受影响的工作负载Item
      class AffectedWorkloadItem < TencentCloud::Common::AbstractModel
        # @param ClusterId: 集群Id
        # @type ClusterId: String
        # @param ClusterName: 集群名字
        # @type ClusterName: String
        # @param WorkloadName: 工作负载名称
        # @type WorkloadName: String
        # @param WorkloadType: 工作负载类型
        # @type WorkloadType: String
        # @param Region: 区域
        # @type Region: String
        # @param VerifyInfo: 检测结果的验证信息
        # @type VerifyInfo: String

        attr_accessor :ClusterId, :ClusterName, :WorkloadName, :WorkloadType, :Region, :VerifyInfo

        def initialize(clusterid=nil, clustername=nil, workloadname=nil, workloadtype=nil, region=nil, verifyinfo=nil)
          @ClusterId = clusterid
          @ClusterName = clustername
          @WorkloadName = workloadname
          @WorkloadType = workloadtype
          @Region = region
          @VerifyInfo = verifyinfo
        end

        def deserialize(params)
          @ClusterId = params['ClusterId']
          @ClusterName = params['ClusterName']
          @WorkloadName = params['WorkloadName']
          @WorkloadType = params['WorkloadType']
          @Region = params['Region']
          @VerifyInfo = params['VerifyInfo']
        end
      end

      # 集群列表Item
      class AssetClusterListItem < TencentCloud::Common::AbstractModel
        # @param ClusterID: 集群ID
        # @type ClusterID: String
        # @param ClusterName: 集群名称
        # @type ClusterName: String
        # @param Status: 集群状态
        # CSR_RUNNING: 运行中
        # CSR_EXCEPTION:异常
        # CSR_DEL:已经删除
        # @type Status: String
        # @param BindRuleName: 绑定规则名称
        # @type BindRuleName: String
        # @param ClusterType: 集群类型:
        # CT_TKE:TKE集群;
        # CT_USER_CREATE:用户自建集群;
        # CT_TKE_SERVERLESS:TKE Serverless集群;
        # @type ClusterType: String
        # @param ClusterVersion: 集群版本
        # @type ClusterVersion: String
        # @param MemLimit: 内存量
        # @type MemLimit: Integer
        # @param CpuLimit: cpu
        # @type CpuLimit: Integer

        attr_accessor :ClusterID, :ClusterName, :Status, :BindRuleName, :ClusterType, :ClusterVersion, :MemLimit, :CpuLimit

        def initialize(clusterid=nil, clustername=nil, status=nil, bindrulename=nil, clustertype=nil, clusterversion=nil, memlimit=nil, cpulimit=nil)
          @ClusterID = clusterid
          @ClusterName = clustername
          @Status = status
          @BindRuleName = bindrulename
          @ClusterType = clustertype
          @ClusterVersion = clusterversion
          @MemLimit = memlimit
          @CpuLimit = cpulimit
        end

        def deserialize(params)
          @ClusterID = params['ClusterID']
          @ClusterName = params['ClusterName']
          @Status = params['Status']
          @BindRuleName = params['BindRuleName']
          @ClusterType = params['ClusterType']
          @ClusterVersion = params['ClusterVersion']
          @MemLimit = params['MemLimit']
          @CpuLimit = params['CpuLimit']
        end
      end

      # 容器安全
      # 描述键值对过滤器，用于条件过滤查询。例如过滤ID、名称、状态等
      # 若存在多个Filter时，Filter间的关系为逻辑与（AND）关系。
      # 若同一个Filter存在多个Values，同一Filter下Values间的关系为逻辑或（OR）关系。
      class AssetFilters < TencentCloud::Common::AbstractModel
        # @param Name: 过滤键的名称
        # @type Name: String
        # @param Values: 一个或者多个过滤值。
        # @type Values: Array
        # @param ExactMatch: 是否模糊查询
        # @type ExactMatch: Boolean

        attr_accessor :Name, :Values, :ExactMatch

        def initialize(name=nil, values=nil, exactmatch=nil)
          @Name = name
          @Values = values
          @ExactMatch = exactmatch
        end

        def deserialize(params)
          @Name = params['Name']
          @Values = params['Values']
          @ExactMatch = params['ExactMatch']
        end
      end

      # 容器安全资产镜像简略信息
      class AssetSimpleImageInfo < TencentCloud::Common::AbstractModel
        # @param ImageID: 镜像ID
        # @type ImageID: String
        # @param ImageName: 镜像名称
        # @type ImageName: String
        # @param ContainerCnt: 关联容器个数
        # @type ContainerCnt: Integer
        # @param ScanTime: 最后扫描时间
        # @type ScanTime: String
        # @param Size: 镜像大小
        # @type Size: Integer

        attr_accessor :ImageID, :ImageName, :ContainerCnt, :ScanTime, :Size

        def initialize(imageid=nil, imagename=nil, containercnt=nil, scantime=nil, size=nil)
          @ImageID = imageid
          @ImageName = imagename
          @ContainerCnt = containercnt
          @ScanTime = scantime
          @Size = size
        end

        def deserialize(params)
          @ImageID = params['ImageID']
          @ImageName = params['ImageName']
          @ContainerCnt = params['ContainerCnt']
          @ScanTime = params['ScanTime']
          @Size = params['Size']
        end
      end

      # 镜像自动授权结果信息
      class AutoAuthorizedImageInfo < TencentCloud::Common::AbstractModel
        # @param ImageId: 镜像id
        # @type ImageId: String
        # @param ImageName: 镜像名称
        # @type ImageName: String
        # @param AuthorizedTime: 授权时间
        # @type AuthorizedTime: String
        # @param Status: 授权结果，SUCCESS:成功，REACH_LIMIT:达到授权上限，LICENSE_INSUFFICIENT:授权数不足'
        # @type Status: String
        # @param IsAuthorized: 是否授权，1：是，0：否
        # @type IsAuthorized: Integer

        attr_accessor :ImageId, :ImageName, :AuthorizedTime, :Status, :IsAuthorized

        def initialize(imageid=nil, imagename=nil, authorizedtime=nil, status=nil, isauthorized=nil)
          @ImageId = imageid
          @ImageName = imagename
          @AuthorizedTime = authorizedtime
          @Status = status
          @IsAuthorized = isauthorized
        end

        def deserialize(params)
          @ImageId = params['ImageId']
          @ImageName = params['ImageName']
          @AuthorizedTime = params['AuthorizedTime']
          @Status = params['Status']
          @IsAuthorized = params['IsAuthorized']
        end
      end

      # 自动授权镜像规则授权范围主机列表
      class AutoAuthorizedRuleHostInfo < TencentCloud::Common::AbstractModel
        # @param HostID: 主机id
        # @type HostID: String
        # @param HostIP: 主机ip即内网ip
        # @type HostIP: String
        # @param HostName: 主机名称
        # @type HostName: String
        # @param ImageCnt: 镜像个数
        # @type ImageCnt: Integer
        # @param ContainerCnt: 容器个数
        # @type ContainerCnt: Integer
        # @param PublicIp: 外网ip
        # @type PublicIp: String
        # @param InstanceID: 主机实例ID
        # @type InstanceID: String
        # @param MachineType: 主机来源：["CVM", "ECM", "LH", "BM"]  中的之一为腾讯云服务器；["Other"]之一非腾讯云服务器；
        # @type MachineType: String
        # @param DockerVersion: docker 版本
        # @type DockerVersion: String
        # @param Status: agent运行状态
        # @type Status: String

        attr_accessor :HostID, :HostIP, :HostName, :ImageCnt, :ContainerCnt, :PublicIp, :InstanceID, :MachineType, :DockerVersion, :Status

        def initialize(hostid=nil, hostip=nil, hostname=nil, imagecnt=nil, containercnt=nil, publicip=nil, instanceid=nil, machinetype=nil, dockerversion=nil, status=nil)
          @HostID = hostid
          @HostIP = hostip
          @HostName = hostname
          @ImageCnt = imagecnt
          @ContainerCnt = containercnt
          @PublicIp = publicip
          @InstanceID = instanceid
          @MachineType = machinetype
          @DockerVersion = dockerversion
          @Status = status
        end

        def deserialize(params)
          @HostID = params['HostID']
          @HostIP = params['HostIP']
          @HostName = params['HostName']
          @ImageCnt = params['ImageCnt']
          @ContainerCnt = params['ContainerCnt']
          @PublicIp = params['PublicIp']
          @InstanceID = params['InstanceID']
          @MachineType = params['MachineType']
          @DockerVersion = params['DockerVersion']
          @Status = params['Status']
        end
      end

      # 安全日志kafka可选信息
      class CKafkaInstanceInfo < TencentCloud::Common::AbstractModel
        # @param InstanceID: 实例ID
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type InstanceID: String
        # @param InstanceName: 实例名称
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type InstanceName: String
        # @param TopicList: 主题列表
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type TopicList: Array
        # @param RouteList: 路由列表
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type RouteList: Array
        # @param KafkaVersion: kafka版本号
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type KafkaVersion: String

        attr_accessor :InstanceID, :InstanceName, :TopicList, :RouteList, :KafkaVersion

        def initialize(instanceid=nil, instancename=nil, topiclist=nil, routelist=nil, kafkaversion=nil)
          @InstanceID = instanceid
          @InstanceName = instancename
          @TopicList = topiclist
          @RouteList = routelist
          @KafkaVersion = kafkaversion
        end

        def deserialize(params)
          @InstanceID = params['InstanceID']
          @InstanceName = params['InstanceName']
          unless params['TopicList'].nil?
            @TopicList = []
            params['TopicList'].each do |i|
              ckafkatopicinfo_tmp = CKafkaTopicInfo.new
              ckafkatopicinfo_tmp.deserialize(i)
              @TopicList << ckafkatopicinfo_tmp
            end
          end
          unless params['RouteList'].nil?
            @RouteList = []
            params['RouteList'].each do |i|
              ckafkarouteinfo_tmp = CkafkaRouteInfo.new
              ckafkarouteinfo_tmp.deserialize(i)
              @RouteList << ckafkarouteinfo_tmp
            end
          end
          @KafkaVersion = params['KafkaVersion']
        end
      end

      # Ckafka topic信息
      class CKafkaTopicInfo < TencentCloud::Common::AbstractModel
        # @param TopicID: 主题ID
        # @type TopicID: String
        # @param TopicName: 主题名称
        # @type TopicName: String

        attr_accessor :TopicID, :TopicName

        def initialize(topicid=nil, topicname=nil)
          @TopicID = topicid
          @TopicName = topicname
        end

        def deserialize(params)
          @TopicID = params['TopicID']
          @TopicName = params['TopicName']
        end
      end

      # CheckNetworkFirewallPolicyYaml请求参数结构体
      class CheckNetworkFirewallPolicyYamlRequest < TencentCloud::Common::AbstractModel
        # @param ClusterId: 集群Id
        # @type ClusterId: String
        # @param PolicyName: 策略名
        # @type PolicyName: String
        # @param Yaml: base64编码的networkpolicy yaml字符串
        # @type Yaml: String
        # @param Description: 策略描述
        # @type Description: String

        attr_accessor :ClusterId, :PolicyName, :Yaml, :Description

        def initialize(clusterid=nil, policyname=nil, yaml=nil, description=nil)
          @ClusterId = clusterid
          @PolicyName = policyname
          @Yaml = yaml
          @Description = description
        end

        def deserialize(params)
          @ClusterId = params['ClusterId']
          @PolicyName = params['PolicyName']
          @Yaml = params['Yaml']
          @Description = params['Description']
        end
      end

      # CheckNetworkFirewallPolicyYaml返回参数结构体
      class CheckNetworkFirewallPolicyYamlResponse < TencentCloud::Common::AbstractModel
        # @param TaskId: 返回创建的任务的ID，为0表示创建失败。
        # @type TaskId: Integer
        # @param Result: 创建任务的结果，"Succ"为成功，"Failed"为失败
        # @type Result: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TaskId, :Result, :RequestId

        def initialize(taskid=nil, result=nil, requestid=nil)
          @TaskId = taskid
          @Result = result
          @RequestId = requestid
        end

        def deserialize(params)
          @TaskId = params['TaskId']
          @Result = params['Result']
          @RequestId = params['RequestId']
        end
      end

      # CheckRepeatAssetImageRegistry请求参数结构体
      class CheckRepeatAssetImageRegistryRequest < TencentCloud::Common::AbstractModel
        # @param Name: 仓库名
        # @type Name: String

        attr_accessor :Name

        def initialize(name=nil)
          @Name = name
        end

        def deserialize(params)
          @Name = params['Name']
        end
      end

      # CheckRepeatAssetImageRegistry返回参数结构体
      class CheckRepeatAssetImageRegistryResponse < TencentCloud::Common::AbstractModel
        # @param IsRepeat: 是否重复
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type IsRepeat: Boolean
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :IsRepeat, :RequestId

        def initialize(isrepeat=nil, requestid=nil)
          @IsRepeat = isrepeat
          @RequestId = requestid
        end

        def deserialize(params)
          @IsRepeat = params['IsRepeat']
          @RequestId = params['RequestId']
        end
      end

      # ckafkal路由详情
      class CkafkaRouteInfo < TencentCloud::Common::AbstractModel
        # @param RouteID: 路由ID
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type RouteID: Integer
        # @param Domain: 域名名称
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Domain: String
        # @param DomainPort: 域名端口
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type DomainPort: Integer
        # @param Vip: 虚拟ip
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Vip: String
        # @param VipType: 虚拟ip类型
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type VipType: Integer
        # @param AccessType: 接入类型
        # // 0：PLAINTEXT (明文方式，没有带用户信息老版本及社区版本都支持)
        # 	// 1：SASL_PLAINTEXT（明文方式，不过在数据开始时，会通过SASL方式登录鉴权，仅社区版本支持）
        # 	// 2：SSL（SSL加密通信，没有带用户信息，老版本及社区版本都支持）
        # 	// 3：SASL_SSL（SSL加密通信，在数据开始时，会通过SASL方式登录鉴权，仅社区版本支持）
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type AccessType: Integer

        attr_accessor :RouteID, :Domain, :DomainPort, :Vip, :VipType, :AccessType

        def initialize(routeid=nil, domain=nil, domainport=nil, vip=nil, viptype=nil, accesstype=nil)
          @RouteID = routeid
          @Domain = domain
          @DomainPort = domainport
          @Vip = vip
          @VipType = viptype
          @AccessType = accesstype
        end

        def deserialize(params)
          @RouteID = params['RouteID']
          @Domain = params['Domain']
          @DomainPort = params['DomainPort']
          @Vip = params['Vip']
          @VipType = params['VipType']
          @AccessType = params['AccessType']
        end
      end

      # cls日志集信息
      class ClsLogsetInfo < TencentCloud::Common::AbstractModel
        # @param LogsetID: 日志集ID
        # @type LogsetID: String
        # @param LogsetName: 日志集名称
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type LogsetName: String
        # @param TopicList: cls主题列表
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type TopicList: Array

        attr_accessor :LogsetID, :LogsetName, :TopicList

        def initialize(logsetid=nil, logsetname=nil, topiclist=nil)
          @LogsetID = logsetid
          @LogsetName = logsetname
          @TopicList = topiclist
        end

        def deserialize(params)
          @LogsetID = params['LogsetID']
          @LogsetName = params['LogsetName']
          unless params['TopicList'].nil?
            @TopicList = []
            params['TopicList'].each do |i|
              clstopicinfo_tmp = ClsTopicInfo.new
              clstopicinfo_tmp.deserialize(i)
              @TopicList << clstopicinfo_tmp
            end
          end
        end
      end

      # cls主题信息
      class ClsTopicInfo < TencentCloud::Common::AbstractModel
        # @param TopicID: 主题ID
        # @type TopicID: String
        # @param TopicName: 主题名称
        # @type TopicName: String

        attr_accessor :TopicID, :TopicName

        def initialize(topicid=nil, topicname=nil)
          @TopicID = topicid
          @TopicName = topicname
        end

        def deserialize(params)
          @TopicID = params['TopicID']
          @TopicName = params['TopicName']
        end
      end

      # 表示一条集群安全检测项的详细信息
      class ClusterCheckItem < TencentCloud::Common::AbstractModel
        # @param CheckItemId: 唯一的检测项的ID
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type CheckItemId: Integer
        # @param Name: 风险项的名称
        # @type Name: String
        # @param ItemDetail: 检测项详细描述。
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ItemDetail: String
        # @param RiskLevel: 威胁等级。严重Serious,高危High,中危Middle,提示Hint
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type RiskLevel: String
        # @param RiskTarget: 检查对象、风险对象.Runc,Kubelet,Containerd,Pods
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type RiskTarget: String
        # @param RiskType: 风险类别,漏洞风险CVERisk,配置风险ConfigRisk
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type RiskType: String
        # @param RiskAttribute: 检测项所属的风险类型,权限提升:PrivilegePromotion,拒绝服务:RefuseService,目录穿越:DirectoryEscape,未授权访问:UnauthorizedAccess,权限许可和访问控制问题:PrivilegeAndAccessControl,敏感信息泄露:SensitiveInfoLeak
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type RiskAttribute: String
        # @param RiskProperty: 风险特征,Tag.存在EXP:ExistEXP,存在POD:ExistPOC,无需重启:NoNeedReboot, 服务重启:ServerRestart,远程信息泄露:RemoteInfoLeak,远程拒绝服务:RemoteRefuseService,远程利用:RemoteExploit,远程执行:RemoteExecute
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type RiskProperty: String
        # @param CVENumber: CVE编号
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type CVENumber: String
        # @param DiscoverTime: 披露时间
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type DiscoverTime: String
        # @param Solution: 解决方案
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Solution: String
        # @param CVSS: CVSS信息,用于画图
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type CVSS: String
        # @param CVSSScore: CVSS分数
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type CVSSScore: String
        # @param RelateLink: 参考连接
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type RelateLink: String
        # @param AffectedType: 影响类型，为Node或者Workload
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type AffectedType: String
        # @param AffectedVersion: 受影响的版本信息
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type AffectedVersion: String
        # @param IgnoredAssetNum: 忽略的资产数量
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type IgnoredAssetNum: Integer
        # @param IsIgnored: 是否忽略该检测项
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type IsIgnored: Boolean
        # @param RiskAssessment: 受影响评估
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type RiskAssessment: String

        attr_accessor :CheckItemId, :Name, :ItemDetail, :RiskLevel, :RiskTarget, :RiskType, :RiskAttribute, :RiskProperty, :CVENumber, :DiscoverTime, :Solution, :CVSS, :CVSSScore, :RelateLink, :AffectedType, :AffectedVersion, :IgnoredAssetNum, :IsIgnored, :RiskAssessment

        def initialize(checkitemid=nil, name=nil, itemdetail=nil, risklevel=nil, risktarget=nil, risktype=nil, riskattribute=nil, riskproperty=nil, cvenumber=nil, discovertime=nil, solution=nil, cvss=nil, cvssscore=nil, relatelink=nil, affectedtype=nil, affectedversion=nil, ignoredassetnum=nil, isignored=nil, riskassessment=nil)
          @CheckItemId = checkitemid
          @Name = name
          @ItemDetail = itemdetail
          @RiskLevel = risklevel
          @RiskTarget = risktarget
          @RiskType = risktype
          @RiskAttribute = riskattribute
          @RiskProperty = riskproperty
          @CVENumber = cvenumber
          @DiscoverTime = discovertime
          @Solution = solution
          @CVSS = cvss
          @CVSSScore = cvssscore
          @RelateLink = relatelink
          @AffectedType = affectedtype
          @AffectedVersion = affectedversion
          @IgnoredAssetNum = ignoredassetnum
          @IsIgnored = isignored
          @RiskAssessment = riskassessment
        end

        def deserialize(params)
          @CheckItemId = params['CheckItemId']
          @Name = params['Name']
          @ItemDetail = params['ItemDetail']
          @RiskLevel = params['RiskLevel']
          @RiskTarget = params['RiskTarget']
          @RiskType = params['RiskType']
          @RiskAttribute = params['RiskAttribute']
          @RiskProperty = params['RiskProperty']
          @CVENumber = params['CVENumber']
          @DiscoverTime = params['DiscoverTime']
          @Solution = params['Solution']
          @CVSS = params['CVSS']
          @CVSSScore = params['CVSSScore']
          @RelateLink = params['RelateLink']
          @AffectedType = params['AffectedType']
          @AffectedVersion = params['AffectedVersion']
          @IgnoredAssetNum = params['IgnoredAssetNum']
          @IsIgnored = params['IsIgnored']
          @RiskAssessment = params['RiskAssessment']
        end
      end

      # 集群检查任务入参
      class ClusterCheckTaskItem < TencentCloud::Common::AbstractModel
        # @param ClusterId: 指定要扫描的集群ID
        # @type ClusterId: String
        # @param ClusterRegion: 集群所属地域
        # @type ClusterRegion: String
        # @param NodeIp: 指定要扫描的节点IP
        # @type NodeIp: String
        # @param WorkloadName: 按照要扫描的workload名字
        # @type WorkloadName: String

        attr_accessor :ClusterId, :ClusterRegion, :NodeIp, :WorkloadName

        def initialize(clusterid=nil, clusterregion=nil, nodeip=nil, workloadname=nil)
          @ClusterId = clusterid
          @ClusterRegion = clusterregion
          @NodeIp = nodeip
          @WorkloadName = workloadname
        end

        def deserialize(params)
          @ClusterId = params['ClusterId']
          @ClusterRegion = params['ClusterRegion']
          @NodeIp = params['NodeIp']
          @WorkloadName = params['WorkloadName']
        end
      end

      # CreateCheckComponent的入口参数,用于批量安装防御容器
      class ClusterCreateComponentItem < TencentCloud::Common::AbstractModel
        # @param ClusterId: 要安装组件的集群ID。
        # @type ClusterId: String
        # @param ClusterRegion: 该集群对应的地域
        # @type ClusterRegion: String

        attr_accessor :ClusterId, :ClusterRegion

        def initialize(clusterid=nil, clusterregion=nil)
          @ClusterId = clusterid
          @ClusterRegion = clusterregion
        end

        def deserialize(params)
          @ClusterId = params['ClusterId']
          @ClusterRegion = params['ClusterRegion']
        end
      end

      # 集群自定义参数
      class ClusterCustomParameters < TencentCloud::Common::AbstractModel
        # @param Name: 参数名
        # @type Name: String
        # @param Values: 参数值
        # @type Values: Array

        attr_accessor :Name, :Values

        def initialize(name=nil, values=nil)
          @Name = name
          @Values = values
        end

        def deserialize(params)
          @Name = params['Name']
          @Values = params['Values']
        end
      end

      # 集群资产返回的结构体
      class ClusterInfoItem < TencentCloud::Common::AbstractModel
        # @param ClusterId: 集群id
        # @type ClusterId: String
        # @param ClusterName: 集群名字
        # @type ClusterName: String
        # @param ClusterVersion: 集群版本
        # @type ClusterVersion: String
        # @param ClusterOs: 集群操作系统
        # @type ClusterOs: String
        # @param ClusterType: 集群类型
        # @type ClusterType: String
        # @param ClusterNodeNum: 集群节点数
        # @type ClusterNodeNum: Integer
        # @param Region: 集群区域
        # @type Region: String
        # @param DefenderStatus: 防护状态: 已防护: Defended 未防护: UnDefended
        # @type DefenderStatus: String
        # @param ClusterStatus: 集群状态
        # @type ClusterStatus: String
        # @param ClusterCheckMode: 集群的检测模式，为Cluster_Normal或者Cluster_Actived.
        # @type ClusterCheckMode: String
        # @param ClusterAutoCheck: 是否自动定期检测
        # @type ClusterAutoCheck: Boolean
        # @param DefenderErrorReason: 防护容器部署失败原因，为UserDaemonSetNotReady时,和UnreadyNodeNum转成"N个节点防御容器为就绪"，其他错误直接展示
        # @type DefenderErrorReason: String
        # @param UnreadyNodeNum: 防御容器没有ready状态的节点数量
        # @type UnreadyNodeNum: Integer
        # @param SeriousRiskCount: 严重风险检查项的数量
        # @type SeriousRiskCount: Integer
        # @param HighRiskCount: 高风险检查项的数量
        # @type HighRiskCount: Integer
        # @param MiddleRiskCount: 中风险检查项的数量
        # @type MiddleRiskCount: Integer
        # @param HintRiskCount: 提示风险检查项的数量
        # @type HintRiskCount: Integer
        # @param CheckFailReason: 检查失败原因
        # @type CheckFailReason: String
        # @param CheckStatus: 检查状态,为Task_Running, NoRisk, HasRisk, Uncheck, Task_Error
        # @type CheckStatus: String
        # @param TaskCreateTime: 任务创建时间,检查时间
        # @type TaskCreateTime: String
        # @param AccessedStatus: 接入状态:
        # 未接入: AccessedNone
        # 已防护: AccessedDefended
        # 未防护: AccessedInstalled
        # 部分防护: AccessedPartialDefence
        # 接入异常: AccessedException
        # 卸载异常: AccessedUninstallException
        # 接入中: AccessedInstalling
        # 卸载中: AccessedUninstalling
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type AccessedStatus: String
        # @param AccessedSubStatus: 接入失败原因
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type AccessedSubStatus: String
        # @param NodeCount: 节点总数
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type NodeCount: Integer
        # @param OffLineNodeCount: 离线节点数
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type OffLineNodeCount: Integer
        # @param UnInstallAgentNodeCount: 未安装agent节点数
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type UnInstallAgentNodeCount: Integer
        # @param ChargeCoresCnt: 计费核数(弹性计费核数+普通计费核数)
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ChargeCoresCnt: Integer
        # @param MasterAddresses: master 地址列表
        # @type MasterAddresses: Array
        # @param CoresCnt: 核数
        # @type CoresCnt: Integer

        attr_accessor :ClusterId, :ClusterName, :ClusterVersion, :ClusterOs, :ClusterType, :ClusterNodeNum, :Region, :DefenderStatus, :ClusterStatus, :ClusterCheckMode, :ClusterAutoCheck, :DefenderErrorReason, :UnreadyNodeNum, :SeriousRiskCount, :HighRiskCount, :MiddleRiskCount, :HintRiskCount, :CheckFailReason, :CheckStatus, :TaskCreateTime, :AccessedStatus, :AccessedSubStatus, :NodeCount, :OffLineNodeCount, :UnInstallAgentNodeCount, :ChargeCoresCnt, :MasterAddresses, :CoresCnt

        def initialize(clusterid=nil, clustername=nil, clusterversion=nil, clusteros=nil, clustertype=nil, clusternodenum=nil, region=nil, defenderstatus=nil, clusterstatus=nil, clustercheckmode=nil, clusterautocheck=nil, defendererrorreason=nil, unreadynodenum=nil, seriousriskcount=nil, highriskcount=nil, middleriskcount=nil, hintriskcount=nil, checkfailreason=nil, checkstatus=nil, taskcreatetime=nil, accessedstatus=nil, accessedsubstatus=nil, nodecount=nil, offlinenodecount=nil, uninstallagentnodecount=nil, chargecorescnt=nil, masteraddresses=nil, corescnt=nil)
          @ClusterId = clusterid
          @ClusterName = clustername
          @ClusterVersion = clusterversion
          @ClusterOs = clusteros
          @ClusterType = clustertype
          @ClusterNodeNum = clusternodenum
          @Region = region
          @DefenderStatus = defenderstatus
          @ClusterStatus = clusterstatus
          @ClusterCheckMode = clustercheckmode
          @ClusterAutoCheck = clusterautocheck
          @DefenderErrorReason = defendererrorreason
          @UnreadyNodeNum = unreadynodenum
          @SeriousRiskCount = seriousriskcount
          @HighRiskCount = highriskcount
          @MiddleRiskCount = middleriskcount
          @HintRiskCount = hintriskcount
          @CheckFailReason = checkfailreason
          @CheckStatus = checkstatus
          @TaskCreateTime = taskcreatetime
          @AccessedStatus = accessedstatus
          @AccessedSubStatus = accessedsubstatus
          @NodeCount = nodecount
          @OffLineNodeCount = offlinenodecount
          @UnInstallAgentNodeCount = uninstallagentnodecount
          @ChargeCoresCnt = chargecorescnt
          @MasterAddresses = masteraddresses
          @CoresCnt = corescnt
        end

        def deserialize(params)
          @ClusterId = params['ClusterId']
          @ClusterName = params['ClusterName']
          @ClusterVersion = params['ClusterVersion']
          @ClusterOs = params['ClusterOs']
          @ClusterType = params['ClusterType']
          @ClusterNodeNum = params['ClusterNodeNum']
          @Region = params['Region']
          @DefenderStatus = params['DefenderStatus']
          @ClusterStatus = params['ClusterStatus']
          @ClusterCheckMode = params['ClusterCheckMode']
          @ClusterAutoCheck = params['ClusterAutoCheck']
          @DefenderErrorReason = params['DefenderErrorReason']
          @UnreadyNodeNum = params['UnreadyNodeNum']
          @SeriousRiskCount = params['SeriousRiskCount']
          @HighRiskCount = params['HighRiskCount']
          @MiddleRiskCount = params['MiddleRiskCount']
          @HintRiskCount = params['HintRiskCount']
          @CheckFailReason = params['CheckFailReason']
          @CheckStatus = params['CheckStatus']
          @TaskCreateTime = params['TaskCreateTime']
          @AccessedStatus = params['AccessedStatus']
          @AccessedSubStatus = params['AccessedSubStatus']
          @NodeCount = params['NodeCount']
          @OffLineNodeCount = params['OffLineNodeCount']
          @UnInstallAgentNodeCount = params['UnInstallAgentNodeCount']
          @ChargeCoresCnt = params['ChargeCoresCnt']
          @MasterAddresses = params['MasterAddresses']
          @CoresCnt = params['CoresCnt']
        end
      end

      # 集群的节点信息
      class ClusterNodeInfo < TencentCloud::Common::AbstractModel
        # @param InstanceId: 实例id
        # @type InstanceId: String
        # @param PrivateIpAddresses: 内网ip地址
        # @type PrivateIpAddresses: String
        # @param InstanceRole: 节点的角色，Master、Work等
        # @type InstanceRole: String
        # @param InstanceState: 实例的状态（running 运行中，initializing 初始化中，failed 异常）
        # @type InstanceState: String
        # @param NodeName: 节点名称
        # @type NodeName: String
        # @param AgentStatus: agent安装状态
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type AgentStatus: String
        # @param PublicIP: 公网ip
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type PublicIP: String
        # @param HostID: 节点ID
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type HostID: String
        # @param MachineType: 主机类型(普通节点情况)
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type MachineType: String
        # @param NodeType: 节点类型(
        # NORMAL: 普通节点
        # SUPER:超级节点
        # )
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type NodeType: String
        # @param UUID: uuid
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type UUID: String
        # @param ChargeCoresCnt: 计费核数
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ChargeCoresCnt: Integer
        # @param DefendStatus: 防护状态:
        # 已防护: Defended
        # 未防护: UnDefended
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type DefendStatus: String

        attr_accessor :InstanceId, :PrivateIpAddresses, :InstanceRole, :InstanceState, :NodeName, :AgentStatus, :PublicIP, :HostID, :MachineType, :NodeType, :UUID, :ChargeCoresCnt, :DefendStatus

        def initialize(instanceid=nil, privateipaddresses=nil, instancerole=nil, instancestate=nil, nodename=nil, agentstatus=nil, publicip=nil, hostid=nil, machinetype=nil, nodetype=nil, uuid=nil, chargecorescnt=nil, defendstatus=nil)
          @InstanceId = instanceid
          @PrivateIpAddresses = privateipaddresses
          @InstanceRole = instancerole
          @InstanceState = instancestate
          @NodeName = nodename
          @AgentStatus = agentstatus
          @PublicIP = publicip
          @HostID = hostid
          @MachineType = machinetype
          @NodeType = nodetype
          @UUID = uuid
          @ChargeCoresCnt = chargecorescnt
          @DefendStatus = defendstatus
        end

        def deserialize(params)
          @InstanceId = params['InstanceId']
          @PrivateIpAddresses = params['PrivateIpAddresses']
          @InstanceRole = params['InstanceRole']
          @InstanceState = params['InstanceState']
          @NodeName = params['NodeName']
          @AgentStatus = params['AgentStatus']
          @PublicIP = params['PublicIP']
          @HostID = params['HostID']
          @MachineType = params['MachineType']
          @NodeType = params['NodeType']
          @UUID = params['UUID']
          @ChargeCoresCnt = params['ChargeCoresCnt']
          @DefendStatus = params['DefendStatus']
        end
      end

      # 集群的pod详细信息
      class ClusterPodInfo < TencentCloud::Common::AbstractModel
        # @param PodName: Pod名称.
        # @type PodName: String
        # @param Status: Pod状态
        # @type Status: String
        # @param PodIP: Pod IP
        # @type PodIP: String
        # @param NodeLanIP: 节点内网Ip
        # @type NodeLanIP: String
        # @param WorkloadName: 所属的工作负载名字
        # @type WorkloadName: String
        # @param WorkloadKind: 所属工作负载类型
        # @type WorkloadKind: String
        # @param ClusterName: 所属集群名字
        # @type ClusterName: String
        # @param ClusterId: 所属集群ID
        # @type ClusterId: String
        # @param Namespace: 所属命名空间
        # @type Namespace: String
        # @param Region: 所属地域
        # @type Region: String
        # @param Age: 运行时间
        # @type Age: String
        # @param StartTime: 创建时间
        # @type StartTime: String
        # @param Restarts: 重启次数
        # @type Restarts: Integer
        # @param ServiceName: 关联的service名字
        # @type ServiceName: String
        # @param ServiceCount: 关联的service数量
        # @type ServiceCount: Integer
        # @param ContainerName: 关联的容器名字
        # @type ContainerName: String
        # @param ContainerCount: 关联的容器数量
        # @type ContainerCount: Integer
        # @param CPU: CPU占用率
        # @type CPU: Integer
        # @param Memory: 内存占用量
        # @type Memory: Integer
        # @param Labels: Pod标签
        # @type Labels: String
        # @param ClusterStatus: 集群状态
        # @type ClusterStatus: String
        # @param WorkloadLabels: 工作负载标签
        # @type WorkloadLabels: String
        # @param ContainerId: 容器Id
        # @type ContainerId: String
        # @param HostName: 主机名称
        # @type HostName: String
        # @param HostId: 主机Id
        # @type HostId: String
        # @param ClusterType: 集群类型
        # @type ClusterType: String
        # @param NodeName: abc
        # @type NodeName: String
        # @param NodeType: NORMAL：普通节点 SUPER：超级节点
        # @type NodeType: String
        # @param ChargeCoresCnt: 计费核数
        # @type ChargeCoresCnt: Integer

        attr_accessor :PodName, :Status, :PodIP, :NodeLanIP, :WorkloadName, :WorkloadKind, :ClusterName, :ClusterId, :Namespace, :Region, :Age, :StartTime, :Restarts, :ServiceName, :ServiceCount, :ContainerName, :ContainerCount, :CPU, :Memory, :Labels, :ClusterStatus, :WorkloadLabels, :ContainerId, :HostName, :HostId, :ClusterType, :NodeName, :NodeType, :ChargeCoresCnt

        def initialize(podname=nil, status=nil, podip=nil, nodelanip=nil, workloadname=nil, workloadkind=nil, clustername=nil, clusterid=nil, namespace=nil, region=nil, age=nil, starttime=nil, restarts=nil, servicename=nil, servicecount=nil, containername=nil, containercount=nil, cpu=nil, memory=nil, labels=nil, clusterstatus=nil, workloadlabels=nil, containerid=nil, hostname=nil, hostid=nil, clustertype=nil, nodename=nil, nodetype=nil, chargecorescnt=nil)
          @PodName = podname
          @Status = status
          @PodIP = podip
          @NodeLanIP = nodelanip
          @WorkloadName = workloadname
          @WorkloadKind = workloadkind
          @ClusterName = clustername
          @ClusterId = clusterid
          @Namespace = namespace
          @Region = region
          @Age = age
          @StartTime = starttime
          @Restarts = restarts
          @ServiceName = servicename
          @ServiceCount = servicecount
          @ContainerName = containername
          @ContainerCount = containercount
          @CPU = cpu
          @Memory = memory
          @Labels = labels
          @ClusterStatus = clusterstatus
          @WorkloadLabels = workloadlabels
          @ContainerId = containerid
          @HostName = hostname
          @HostId = hostid
          @ClusterType = clustertype
          @NodeName = nodename
          @NodeType = nodetype
          @ChargeCoresCnt = chargecorescnt
        end

        def deserialize(params)
          @PodName = params['PodName']
          @Status = params['Status']
          @PodIP = params['PodIP']
          @NodeLanIP = params['NodeLanIP']
          @WorkloadName = params['WorkloadName']
          @WorkloadKind = params['WorkloadKind']
          @ClusterName = params['ClusterName']
          @ClusterId = params['ClusterId']
          @Namespace = params['Namespace']
          @Region = params['Region']
          @Age = params['Age']
          @StartTime = params['StartTime']
          @Restarts = params['Restarts']
          @ServiceName = params['ServiceName']
          @ServiceCount = params['ServiceCount']
          @ContainerName = params['ContainerName']
          @ContainerCount = params['ContainerCount']
          @CPU = params['CPU']
          @Memory = params['Memory']
          @Labels = params['Labels']
          @ClusterStatus = params['ClusterStatus']
          @WorkloadLabels = params['WorkloadLabels']
          @ContainerId = params['ContainerId']
          @HostName = params['HostName']
          @HostId = params['HostId']
          @ClusterType = params['ClusterType']
          @NodeName = params['NodeName']
          @NodeType = params['NodeType']
          @ChargeCoresCnt = params['ChargeCoresCnt']
        end
      end

      # 风险项是检查完之后，有问题的检测项，并且加了一些检查结果信息。
      class ClusterRiskItem < TencentCloud::Common::AbstractModel
        # @param CheckItem: 检测项相关信息
        # @type CheckItem: :class:`Tencentcloud::Tcss.v20201101.models.ClusterCheckItem`
        # @param VerifyInfo: 验证信息
        # @type VerifyInfo: String
        # @param ErrorMessage: 事件描述,检查的错误信息
        # @type ErrorMessage: String
        # @param AffectedClusterCount: 受影响的集群数量
        # @type AffectedClusterCount: Integer
        # @param AffectedNodeCount: 受影响的节点数量
        # @type AffectedNodeCount: Integer

        attr_accessor :CheckItem, :VerifyInfo, :ErrorMessage, :AffectedClusterCount, :AffectedNodeCount

        def initialize(checkitem=nil, verifyinfo=nil, errormessage=nil, affectedclustercount=nil, affectednodecount=nil)
          @CheckItem = checkitem
          @VerifyInfo = verifyinfo
          @ErrorMessage = errormessage
          @AffectedClusterCount = affectedclustercount
          @AffectedNodeCount = affectednodecount
        end

        def deserialize(params)
          unless params['CheckItem'].nil?
            @CheckItem = ClusterCheckItem.new
            @CheckItem.deserialize(params['CheckItem'])
          end
          @VerifyInfo = params['VerifyInfo']
          @ErrorMessage = params['ErrorMessage']
          @AffectedClusterCount = params['AffectedClusterCount']
          @AffectedNodeCount = params['AffectedNodeCount']
        end
      end

      # 表示检测项所影响的资产的信息。
      class ComplianceAffectedAsset < TencentCloud::Common::AbstractModel
        # @param CustomerAssetId: 为客户分配的唯一的资产项的ID。
        # @type CustomerAssetId: Integer
        # @param AssetName: 资产项的名称。
        # @type AssetName: String
        # @param AssetType: 资产项的类型
        # @type AssetType: String
        # @param CheckStatus: 检测状态

        # CHECK_INIT, 待检测

        # CHECK_RUNNING, 检测中

        # CHECK_FINISHED, 检测完成

        # CHECK_FAILED, 检测失败
        # @type CheckStatus: String
        # @param NodeName: 节点名称。
        # @type NodeName: String
        # @param LastCheckTime: 上次检测的时间，格式为”YYYY-MM-DD HH:m::SS“。

        # 如果没有检测过，此处为”0000-00-00 00:00:00“。
        # @type LastCheckTime: String
        # @param CheckResult: 检测结果。取值为：

        # RESULT_FAILED: 未通过

        # RESULT_PASSED: 通过
        # @type CheckResult: String
        # @param HostIP: 主机IP
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type HostIP: String
        # @param ImageTag: 镜像的tag
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ImageTag: String
        # @param VerifyInfo: 检查项验证信息
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type VerifyInfo: String
        # @param InstanceId: 主机实例id
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type InstanceId: String

        attr_accessor :CustomerAssetId, :AssetName, :AssetType, :CheckStatus, :NodeName, :LastCheckTime, :CheckResult, :HostIP, :ImageTag, :VerifyInfo, :InstanceId

        def initialize(customerassetid=nil, assetname=nil, assettype=nil, checkstatus=nil, nodename=nil, lastchecktime=nil, checkresult=nil, hostip=nil, imagetag=nil, verifyinfo=nil, instanceid=nil)
          @CustomerAssetId = customerassetid
          @AssetName = assetname
          @AssetType = assettype
          @CheckStatus = checkstatus
          @NodeName = nodename
          @LastCheckTime = lastchecktime
          @CheckResult = checkresult
          @HostIP = hostip
          @ImageTag = imagetag
          @VerifyInfo = verifyinfo
          @InstanceId = instanceid
        end

        def deserialize(params)
          @CustomerAssetId = params['CustomerAssetId']
          @AssetName = params['AssetName']
          @AssetType = params['AssetType']
          @CheckStatus = params['CheckStatus']
          @NodeName = params['NodeName']
          @LastCheckTime = params['LastCheckTime']
          @CheckResult = params['CheckResult']
          @HostIP = params['HostIP']
          @ImageTag = params['ImageTag']
          @VerifyInfo = params['VerifyInfo']
          @InstanceId = params['InstanceId']
        end
      end

      # 表示一项资产的详情。
      class ComplianceAssetDetailInfo < TencentCloud::Common::AbstractModel
        # @param CustomerAssetId: 客户资产的ID。
        # @type CustomerAssetId: Integer
        # @param AssetType: 资产类别。
        # @type AssetType: String
        # @param AssetName: 资产的名称。
        # @type AssetName: String
        # @param NodeName: 资产所属的节点的名称。
        # @type NodeName: String
        # @param HostName: 资产所在的主机的名称。
        # @type HostName: String
        # @param HostIP: 资产所在的主机的IP。
        # @type HostIP: String
        # @param CheckStatus: 检测状态
        # CHECK_INIT, 待检测
        # CHECK_RUNNING, 检测中
        # CHECK_FINISHED, 检测完成
        # CHECK_FAILED, 检测失败
        # @type CheckStatus: String
        # @param PassedPolicyItemCount: 此类资产通过的检测项的数目。
        # @type PassedPolicyItemCount: Integer
        # @param FailedPolicyItemCount: 此类资产未通过的检测的数目。
        # @type FailedPolicyItemCount: Integer
        # @param LastCheckTime: 上次检测的时间。
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type LastCheckTime: String
        # @param CheckResult: 检测结果：
        # RESULT_FAILED: 未通过。
        # RESULT_PASSED: 通过。
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type CheckResult: String
        # @param AssetStatus: 资产的运行状态。
        # @type AssetStatus: String
        # @param AssetCreateTime: 创建资产的时间。
        # ASSET_NORMAL: 正常运行，
        # ASSET_PAUSED: 暂停运行，
        # ASSET_STOPPED: 停止运行，
        # ASSET_ABNORMAL: 异常
        # @type AssetCreateTime: String

        attr_accessor :CustomerAssetId, :AssetType, :AssetName, :NodeName, :HostName, :HostIP, :CheckStatus, :PassedPolicyItemCount, :FailedPolicyItemCount, :LastCheckTime, :CheckResult, :AssetStatus, :AssetCreateTime

        def initialize(customerassetid=nil, assettype=nil, assetname=nil, nodename=nil, hostname=nil, hostip=nil, checkstatus=nil, passedpolicyitemcount=nil, failedpolicyitemcount=nil, lastchecktime=nil, checkresult=nil, assetstatus=nil, assetcreatetime=nil)
          @CustomerAssetId = customerassetid
          @AssetType = assettype
          @AssetName = assetname
          @NodeName = nodename
          @HostName = hostname
          @HostIP = hostip
          @CheckStatus = checkstatus
          @PassedPolicyItemCount = passedpolicyitemcount
          @FailedPolicyItemCount = failedpolicyitemcount
          @LastCheckTime = lastchecktime
          @CheckResult = checkresult
          @AssetStatus = assetstatus
          @AssetCreateTime = assetcreatetime
        end

        def deserialize(params)
          @CustomerAssetId = params['CustomerAssetId']
          @AssetType = params['AssetType']
          @AssetName = params['AssetName']
          @NodeName = params['NodeName']
          @HostName = params['HostName']
          @HostIP = params['HostIP']
          @CheckStatus = params['CheckStatus']
          @PassedPolicyItemCount = params['PassedPolicyItemCount']
          @FailedPolicyItemCount = params['FailedPolicyItemCount']
          @LastCheckTime = params['LastCheckTime']
          @CheckResult = params['CheckResult']
          @AssetStatus = params['AssetStatus']
          @AssetCreateTime = params['AssetCreateTime']
        end
      end

      # 表示一项资产的信息。
      class ComplianceAssetInfo < TencentCloud::Common::AbstractModel
        # @param CustomerAssetId: 客户资产的ID。
        # @type CustomerAssetId: Integer
        # @param AssetType: 资产类别。
        # @type AssetType: String
        # @param AssetName: 资产的名称。
        # @type AssetName: String
        # @param ImageTag: 当资产为镜像时，这个字段为镜像Tag。
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ImageTag: String
        # @param HostIP: 资产所在的主机IP。
        # @type HostIP: String
        # @param NodeName: 资产所属的节点的名称
        # @type NodeName: String
        # @param CheckStatus: 检测状态

        # CHECK_INIT, 待检测

        # CHECK_RUNNING, 检测中

        # CHECK_FINISHED, 检测完成

        # CHECK_FAILED, 检测失败
        # @type CheckStatus: String
        # @param PassedPolicyItemCount: 此类资产通过的检测项的数目。
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type PassedPolicyItemCount: Integer
        # @param FailedPolicyItemCount: 此类资产未通过的检测的数目。
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type FailedPolicyItemCount: Integer
        # @param LastCheckTime: 上次检测的时间。
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type LastCheckTime: String
        # @param CheckResult: 检测结果：
        # RESULT_FAILED: 未通过。
        # RESULT_PASSED: 通过。
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type CheckResult: String
        # @param InstanceId: 主机节点的实例id
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type InstanceId: String

        attr_accessor :CustomerAssetId, :AssetType, :AssetName, :ImageTag, :HostIP, :NodeName, :CheckStatus, :PassedPolicyItemCount, :FailedPolicyItemCount, :LastCheckTime, :CheckResult, :InstanceId

        def initialize(customerassetid=nil, assettype=nil, assetname=nil, imagetag=nil, hostip=nil, nodename=nil, checkstatus=nil, passedpolicyitemcount=nil, failedpolicyitemcount=nil, lastchecktime=nil, checkresult=nil, instanceid=nil)
          @CustomerAssetId = customerassetid
          @AssetType = assettype
          @AssetName = assetname
          @ImageTag = imagetag
          @HostIP = hostip
          @NodeName = nodename
          @CheckStatus = checkstatus
          @PassedPolicyItemCount = passedpolicyitemcount
          @FailedPolicyItemCount = failedpolicyitemcount
          @LastCheckTime = lastchecktime
          @CheckResult = checkresult
          @InstanceId = instanceid
        end

        def deserialize(params)
          @CustomerAssetId = params['CustomerAssetId']
          @AssetType = params['AssetType']
          @AssetName = params['AssetName']
          @ImageTag = params['ImageTag']
          @HostIP = params['HostIP']
          @NodeName = params['NodeName']
          @CheckStatus = params['CheckStatus']
          @PassedPolicyItemCount = params['PassedPolicyItemCount']
          @FailedPolicyItemCount = params['FailedPolicyItemCount']
          @LastCheckTime = params['LastCheckTime']
          @CheckResult = params['CheckResult']
          @InstanceId = params['InstanceId']
        end
      end

      # 表示一条检测项的信息。
      class ComplianceAssetPolicyItem < TencentCloud::Common::AbstractModel
        # @param CustomerPolicyItemId: 为客户分配的唯一的检测项的ID。
        # @type CustomerPolicyItemId: Integer
        # @param BasePolicyItemId: 检测项的原始ID
        # @type BasePolicyItemId: Integer
        # @param Name: 检测项的名称。
        # @type Name: String
        # @param Category: 检测项所属的类型的名称
        # @type Category: String
        # @param BenchmarkStandardId: 所属的合规标准的ID
        # @type BenchmarkStandardId: Integer
        # @param BenchmarkStandardName: 所属的合规标准的名称
        # @type BenchmarkStandardName: String
        # @param RiskLevel: 威胁等级
        # @type RiskLevel: String
        # @param CheckStatus: 检测状态
        # CHECK_INIT, 待检测
        # CHECK_RUNNING, 检测中
        # CHECK_FINISHED, 检测完成
        # CHECK_FAILED, 检测失败
        # @type CheckStatus: String
        # @param CheckResult: 检测结果
        # RESULT_PASSED: 通过
        # RESULT_FAILED: 未通过
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type CheckResult: String
        # @param WhitelistId: 检测项对应的白名单项的ID。如果存在且非0，表示检测项被用户忽略。
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type WhitelistId: Integer
        # @param FixSuggestion: 处理建议。
        # @type FixSuggestion: String
        # @param LastCheckTime: 最近检测的时间。
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type LastCheckTime: String
        # @param VerifyInfo: 验证信息
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type VerifyInfo: String

        attr_accessor :CustomerPolicyItemId, :BasePolicyItemId, :Name, :Category, :BenchmarkStandardId, :BenchmarkStandardName, :RiskLevel, :CheckStatus, :CheckResult, :WhitelistId, :FixSuggestion, :LastCheckTime, :VerifyInfo

        def initialize(customerpolicyitemid=nil, basepolicyitemid=nil, name=nil, category=nil, benchmarkstandardid=nil, benchmarkstandardname=nil, risklevel=nil, checkstatus=nil, checkresult=nil, whitelistid=nil, fixsuggestion=nil, lastchecktime=nil, verifyinfo=nil)
          @CustomerPolicyItemId = customerpolicyitemid
          @BasePolicyItemId = basepolicyitemid
          @Name = name
          @Category = category
          @BenchmarkStandardId = benchmarkstandardid
          @BenchmarkStandardName = benchmarkstandardname
          @RiskLevel = risklevel
          @CheckStatus = checkstatus
          @CheckResult = checkresult
          @WhitelistId = whitelistid
          @FixSuggestion = fixsuggestion
          @LastCheckTime = lastchecktime
          @VerifyInfo = verifyinfo
        end

        def deserialize(params)
          @CustomerPolicyItemId = params['CustomerPolicyItemId']
          @BasePolicyItemId = params['BasePolicyItemId']
          @Name = params['Name']
          @Category = params['Category']
          @BenchmarkStandardId = params['BenchmarkStandardId']
          @BenchmarkStandardName = params['BenchmarkStandardName']
          @RiskLevel = params['RiskLevel']
          @CheckStatus = params['CheckStatus']
          @CheckResult = params['CheckResult']
          @WhitelistId = params['WhitelistId']
          @FixSuggestion = params['FixSuggestion']
          @LastCheckTime = params['LastCheckTime']
          @VerifyInfo = params['VerifyInfo']
        end
      end

      # 资产+检查项ids 集合单元
      class ComplianceAssetPolicySetItem < TencentCloud::Common::AbstractModel
        # @param CustomerAssetItemId: 资产ID
        # @type CustomerAssetItemId: Integer
        # @param CustomerPolicyItemIdSet: 需要忽略指定资产内的检查项ID列表，为空表示所有
        # @type CustomerPolicyItemIdSet: Array

        attr_accessor :CustomerAssetItemId, :CustomerPolicyItemIdSet

        def initialize(customerassetitemid=nil, customerpolicyitemidset=nil)
          @CustomerAssetItemId = customerassetitemid
          @CustomerPolicyItemIdSet = customerpolicyitemidset
        end

        def deserialize(params)
          @CustomerAssetItemId = params['CustomerAssetItemId']
          @CustomerPolicyItemIdSet = params['CustomerPolicyItemIdSet']
        end
      end

      # 表示一类资产的总览信息。
      class ComplianceAssetSummary < TencentCloud::Common::AbstractModel
        # @param AssetType: 资产类别。
        # @type AssetType: String
        # @param IsCustomerFirstCheck: 是否为客户的首次检测。与CheckStatus配合使用。
        # @type IsCustomerFirstCheck: Boolean
        # @param CheckStatus: 检测状态

        # CHECK_UNINIT, 用户未启用此功能

        # CHECK_INIT, 待检测

        # CHECK_RUNNING, 检测中

        # CHECK_FINISHED, 检测完成

        # CHECK_FAILED, 检测失败
        # @type CheckStatus: String
        # @param CheckProgress: 此类别的检测进度，为 0~100 的数。若未在检测中，无此字段。
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type CheckProgress: Float
        # @param PassedPolicyItemCount: 此类资产通过的检测项的数目。
        # @type PassedPolicyItemCount: Integer
        # @param FailedPolicyItemCount: 此类资产未通过的检测的数目。
        # @type FailedPolicyItemCount: Integer
        # @param FailedCriticalPolicyItemCount: 此类资产下未通过的严重级别的检测项的数目。
        # @type FailedCriticalPolicyItemCount: Integer
        # @param FailedHighRiskPolicyItemCount: 此类资产下未通过的高危检测项的数目。
        # @type FailedHighRiskPolicyItemCount: Integer
        # @param FailedMediumRiskPolicyItemCount: 此类资产下未通过的中危检测项的数目。
        # @type FailedMediumRiskPolicyItemCount: Integer
        # @param FailedLowRiskPolicyItemCount: 此类资产下未通过的低危检测项的数目。
        # @type FailedLowRiskPolicyItemCount: Integer
        # @param NoticePolicyItemCount: 此类资产下提示级别的检测项的数目。
        # @type NoticePolicyItemCount: Integer
        # @param PassedAssetCount: 通过检测的资产的数目。
        # @type PassedAssetCount: Integer
        # @param FailedAssetCount: 未通过检测的资产的数目。
        # @type FailedAssetCount: Integer
        # @param AssetPassedRate: 此类资产的合规率，0~100的数。
        # @type AssetPassedRate: Float
        # @param ScanFailedAssetCount: 检测失败的资产的数目。
        # @type ScanFailedAssetCount: Integer
        # @param CheckCostTime: 上次检测的耗时，单位为秒。
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type CheckCostTime: Float
        # @param LastCheckTime: 上次检测的时间。
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type LastCheckTime: String
        # @param PeriodRule: 定时检测规则。
        # @type PeriodRule: :class:`Tencentcloud::Tcss.v20201101.models.CompliancePeriodTaskRule`
        # @param OpenPolicyItemCount: 已开启的检查项总数
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type OpenPolicyItemCount: Integer
        # @param IgnoredPolicyItemCount: 已忽略的检查项总数
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type IgnoredPolicyItemCount: Integer
        # @param TotalPolicyItemCount: 总检测项数
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type TotalPolicyItemCount: Integer
        # @param DetectHostCount: 检测主机数
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type DetectHostCount: Integer
        # @param LeftTime: 当前任务剩余时间，单位秒
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type LeftTime: Integer

        attr_accessor :AssetType, :IsCustomerFirstCheck, :CheckStatus, :CheckProgress, :PassedPolicyItemCount, :FailedPolicyItemCount, :FailedCriticalPolicyItemCount, :FailedHighRiskPolicyItemCount, :FailedMediumRiskPolicyItemCount, :FailedLowRiskPolicyItemCount, :NoticePolicyItemCount, :PassedAssetCount, :FailedAssetCount, :AssetPassedRate, :ScanFailedAssetCount, :CheckCostTime, :LastCheckTime, :PeriodRule, :OpenPolicyItemCount, :IgnoredPolicyItemCount, :TotalPolicyItemCount, :DetectHostCount, :LeftTime

        def initialize(assettype=nil, iscustomerfirstcheck=nil, checkstatus=nil, checkprogress=nil, passedpolicyitemcount=nil, failedpolicyitemcount=nil, failedcriticalpolicyitemcount=nil, failedhighriskpolicyitemcount=nil, failedmediumriskpolicyitemcount=nil, failedlowriskpolicyitemcount=nil, noticepolicyitemcount=nil, passedassetcount=nil, failedassetcount=nil, assetpassedrate=nil, scanfailedassetcount=nil, checkcosttime=nil, lastchecktime=nil, periodrule=nil, openpolicyitemcount=nil, ignoredpolicyitemcount=nil, totalpolicyitemcount=nil, detecthostcount=nil, lefttime=nil)
          @AssetType = assettype
          @IsCustomerFirstCheck = iscustomerfirstcheck
          @CheckStatus = checkstatus
          @CheckProgress = checkprogress
          @PassedPolicyItemCount = passedpolicyitemcount
          @FailedPolicyItemCount = failedpolicyitemcount
          @FailedCriticalPolicyItemCount = failedcriticalpolicyitemcount
          @FailedHighRiskPolicyItemCount = failedhighriskpolicyitemcount
          @FailedMediumRiskPolicyItemCount = failedmediumriskpolicyitemcount
          @FailedLowRiskPolicyItemCount = failedlowriskpolicyitemcount
          @NoticePolicyItemCount = noticepolicyitemcount
          @PassedAssetCount = passedassetcount
          @FailedAssetCount = failedassetcount
          @AssetPassedRate = assetpassedrate
          @ScanFailedAssetCount = scanfailedassetcount
          @CheckCostTime = checkcosttime
          @LastCheckTime = lastchecktime
          @PeriodRule = periodrule
          @OpenPolicyItemCount = openpolicyitemcount
          @IgnoredPolicyItemCount = ignoredpolicyitemcount
          @TotalPolicyItemCount = totalpolicyitemcount
          @DetectHostCount = detecthostcount
          @LeftTime = lefttime
        end

        def deserialize(params)
          @AssetType = params['AssetType']
          @IsCustomerFirstCheck = params['IsCustomerFirstCheck']
          @CheckStatus = params['CheckStatus']
          @CheckProgress = params['CheckProgress']
          @PassedPolicyItemCount = params['PassedPolicyItemCount']
          @FailedPolicyItemCount = params['FailedPolicyItemCount']
          @FailedCriticalPolicyItemCount = params['FailedCriticalPolicyItemCount']
          @FailedHighRiskPolicyItemCount = params['FailedHighRiskPolicyItemCount']
          @FailedMediumRiskPolicyItemCount = params['FailedMediumRiskPolicyItemCount']
          @FailedLowRiskPolicyItemCount = params['FailedLowRiskPolicyItemCount']
          @NoticePolicyItemCount = params['NoticePolicyItemCount']
          @PassedAssetCount = params['PassedAssetCount']
          @FailedAssetCount = params['FailedAssetCount']
          @AssetPassedRate = params['AssetPassedRate']
          @ScanFailedAssetCount = params['ScanFailedAssetCount']
          @CheckCostTime = params['CheckCostTime']
          @LastCheckTime = params['LastCheckTime']
          unless params['PeriodRule'].nil?
            @PeriodRule = CompliancePeriodTaskRule.new
            @PeriodRule.deserialize(params['PeriodRule'])
          end
          @OpenPolicyItemCount = params['OpenPolicyItemCount']
          @IgnoredPolicyItemCount = params['IgnoredPolicyItemCount']
          @TotalPolicyItemCount = params['TotalPolicyItemCount']
          @DetectHostCount = params['DetectHostCount']
          @LeftTime = params['LeftTime']
        end
      end

      # 表示一个合规标准的信息。
      class ComplianceBenchmarkStandard < TencentCloud::Common::AbstractModel
        # @param StandardId: 合规标准的ID
        # @type StandardId: Integer
        # @param Name: 合规标准的名称
        # @type Name: String
        # @param PolicyItemCount: 合规标准包含的数目
        # @type PolicyItemCount: Integer
        # @param Enabled: 是否启用此标准
        # @type Enabled: Boolean
        # @param Description: 标准的描述
        # @type Description: String

        attr_accessor :StandardId, :Name, :PolicyItemCount, :Enabled, :Description

        def initialize(standardid=nil, name=nil, policyitemcount=nil, enabled=nil, description=nil)
          @StandardId = standardid
          @Name = name
          @PolicyItemCount = policyitemcount
          @Enabled = enabled
          @Description = description
        end

        def deserialize(params)
          @StandardId = params['StandardId']
          @Name = params['Name']
          @PolicyItemCount = params['PolicyItemCount']
          @Enabled = params['Enabled']
          @Description = params['Description']
        end
      end

      # 表示是否启用合规标准。
      class ComplianceBenchmarkStandardEnable < TencentCloud::Common::AbstractModel
        # @param StandardId: 合规标准的ID。
        # @type StandardId: Integer
        # @param Enable: 是否启用合规标准
        # @type Enable: Boolean

        attr_accessor :StandardId, :Enable

        def initialize(standardid=nil, enable=nil)
          @StandardId = standardid
          @Enable = enable
        end

        def deserialize(params)
          @StandardId = params['StandardId']
          @Enable = params['Enable']
        end
      end

      # 表示容器资产专属的详情。
      class ComplianceContainerDetailInfo < TencentCloud::Common::AbstractModel
        # @param ContainerId: 容器在主机上的ID。
        # @type ContainerId: String
        # @param PodName: 容器所属的Pod的名称。
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type PodName: String

        attr_accessor :ContainerId, :PodName

        def initialize(containerid=nil, podname=nil)
          @ContainerId = containerid
          @PodName = podname
        end

        def deserialize(params)
          @ContainerId = params['ContainerId']
          @PodName = params['PodName']
        end
      end

      # 键值对过滤器，用于条件过滤查询。例如过滤ID、名称、状态等 若存在多个Filter时，Filter间的关系为逻辑与（AND）关系。 若同一个Filter存在多个Values，同一Filter下Values间的关系为逻辑或（OR）关系。
      class ComplianceFilters < TencentCloud::Common::AbstractModel
        # @param Name: 过滤键的名称
        # @type Name: String
        # @param Values: 一个或者多个过滤值。
        # @type Values: Array
        # @param ExactMatch: 是否模糊查询。默认为是。
        # @type ExactMatch: Boolean

        attr_accessor :Name, :Values, :ExactMatch

        def initialize(name=nil, values=nil, exactmatch=nil)
          @Name = name
          @Values = values
          @ExactMatch = exactmatch
        end

        def deserialize(params)
          @Name = params['Name']
          @Values = params['Values']
          @ExactMatch = params['ExactMatch']
        end
      end

      # 表示主机资产专属的详情。
      class ComplianceHostDetailInfo < TencentCloud::Common::AbstractModel
        # @param DockerVersion: 主机上的Docker版本。
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type DockerVersion: String
        # @param K8SVersion: 主机上的K8S的版本。
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type K8SVersion: String
        # @param ContainerdVersion: 主机上Containerd版本
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ContainerdVersion: String

        attr_accessor :DockerVersion, :K8SVersion, :ContainerdVersion

        def initialize(dockerversion=nil, k8sversion=nil, containerdversion=nil)
          @DockerVersion = dockerversion
          @K8SVersion = k8sversion
          @ContainerdVersion = containerdversion
        end

        def deserialize(params)
          @DockerVersion = params['DockerVersion']
          @K8SVersion = params['K8SVersion']
          @ContainerdVersion = params['ContainerdVersion']
        end
      end

      # 表示镜像资产专属的详情。
      class ComplianceImageDetailInfo < TencentCloud::Common::AbstractModel
        # @param ImageId: 镜像在主机上的ID。
        # @type ImageId: String
        # @param ImageName: 镜像的名称。
        # @type ImageName: String
        # @param ImageTag: 镜像的Tag。
        # @type ImageTag: String
        # @param Repository: 镜像所在远程仓库的路径。
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Repository: String

        attr_accessor :ImageId, :ImageName, :ImageTag, :Repository

        def initialize(imageid=nil, imagename=nil, imagetag=nil, repository=nil)
          @ImageId = imageid
          @ImageName = imagename
          @ImageTag = imagetag
          @Repository = repository
        end

        def deserialize(params)
          @ImageId = params['ImageId']
          @ImageName = params['ImageName']
          @ImageTag = params['ImageTag']
          @Repository = params['Repository']
        end
      end

      # 表示K8S资产专属的详情。
      class ComplianceK8SDetailInfo < TencentCloud::Common::AbstractModel
        # @param ClusterName: K8S集群的名称。
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ClusterName: String
        # @param ClusterVersion: K8S集群的版本。
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ClusterVersion: String

        attr_accessor :ClusterName, :ClusterVersion

        def initialize(clustername=nil, clusterversion=nil)
          @ClusterName = clustername
          @ClusterVersion = clusterversion
        end

        def deserialize(params)
          @ClusterName = params['ClusterName']
          @ClusterVersion = params['ClusterVersion']
        end
      end

      # 表示一个合规基线检测定时任务的信息。
      class CompliancePeriodTask < TencentCloud::Common::AbstractModel
        # @param PeriodTaskId: 周期任务的ID
        # @type PeriodTaskId: Integer
        # @param AssetType: 资产类型。
        # ASSET_CONTAINER, 容器
        # ASSET_IMAGE, 镜像
        # ASSET_HOST, 主机
        # ASSET_K8S, K8S资产
        # @type AssetType: String
        # @param LastTriggerTime: 最近一次触发的时间
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type LastTriggerTime: String
        # @param TotalPolicyItemCount: 总的检查项数目
        # @type TotalPolicyItemCount: Integer
        # @param PeriodRule: 周期设置
        # @type PeriodRule: :class:`Tencentcloud::Tcss.v20201101.models.CompliancePeriodTaskRule`
        # @param BenchmarkStandardSet: 合规标准列表
        # @type BenchmarkStandardSet: Array

        attr_accessor :PeriodTaskId, :AssetType, :LastTriggerTime, :TotalPolicyItemCount, :PeriodRule, :BenchmarkStandardSet

        def initialize(periodtaskid=nil, assettype=nil, lasttriggertime=nil, totalpolicyitemcount=nil, periodrule=nil, benchmarkstandardset=nil)
          @PeriodTaskId = periodtaskid
          @AssetType = assettype
          @LastTriggerTime = lasttriggertime
          @TotalPolicyItemCount = totalpolicyitemcount
          @PeriodRule = periodrule
          @BenchmarkStandardSet = benchmarkstandardset
        end

        def deserialize(params)
          @PeriodTaskId = params['PeriodTaskId']
          @AssetType = params['AssetType']
          @LastTriggerTime = params['LastTriggerTime']
          @TotalPolicyItemCount = params['TotalPolicyItemCount']
          unless params['PeriodRule'].nil?
            @PeriodRule = CompliancePeriodTaskRule.new
            @PeriodRule.deserialize(params['PeriodRule'])
          end
          unless params['BenchmarkStandardSet'].nil?
            @BenchmarkStandardSet = []
            params['BenchmarkStandardSet'].each do |i|
              compliancebenchmarkstandard_tmp = ComplianceBenchmarkStandard.new
              compliancebenchmarkstandard_tmp.deserialize(i)
              @BenchmarkStandardSet << compliancebenchmarkstandard_tmp
            end
          end
        end
      end

      # 表示一个定时任务的周期设置
      class CompliancePeriodTaskRule < TencentCloud::Common::AbstractModel
        # @param Frequency: 执行的频率（几天一次），取值为：1,3,7。
        # @type Frequency: Integer
        # @param ExecutionTime: 在这天的什么时间执行，格式为：HH:mm:SS。
        # @type ExecutionTime: String
        # @param Enable: 是否开启
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Enable: Boolean

        attr_accessor :Frequency, :ExecutionTime, :Enable

        def initialize(frequency=nil, executiontime=nil, enable=nil)
          @Frequency = frequency
          @ExecutionTime = executiontime
          @Enable = enable
        end

        def deserialize(params)
          @Frequency = params['Frequency']
          @ExecutionTime = params['ExecutionTime']
          @Enable = params['Enable']
        end
      end

      # 检查项+资产ids 的集合单元
      class CompliancePolicyAssetSetItem < TencentCloud::Common::AbstractModel
        # @param CustomerPolicyItemId: 检查项ID
        # @type CustomerPolicyItemId: Integer
        # @param CustomerAssetItemIdSet: 需要忽略指定检查项内的资产ID列表，为空表示所有
        # @type CustomerAssetItemIdSet: Array

        attr_accessor :CustomerPolicyItemId, :CustomerAssetItemIdSet

        def initialize(customerpolicyitemid=nil, customerassetitemidset=nil)
          @CustomerPolicyItemId = customerpolicyitemid
          @CustomerAssetItemIdSet = customerassetitemidset
        end

        def deserialize(params)
          @CustomerPolicyItemId = params['CustomerPolicyItemId']
          @CustomerAssetItemIdSet = params['CustomerAssetItemIdSet']
        end
      end

      # 表示一条检测项对应的汇总信息。
      class CompliancePolicyItemSummary < TencentCloud::Common::AbstractModel
        # @param CustomerPolicyItemId: 为客户分配的唯一的检测项的ID。
        # @type CustomerPolicyItemId: Integer
        # @param BasePolicyItemId: 检测项的原始ID。
        # @type BasePolicyItemId: Integer
        # @param Name: 检测项的名称。
        # @type Name: String
        # @param Category: 检测项所属的类型，枚举字符串。
        # @type Category: String
        # @param BenchmarkStandardName: 所属的合规标准
        # @type BenchmarkStandardName: String
        # @param RiskLevel: 威胁等级。RISK_CRITICAL, RISK_HIGH, RISK_MEDIUM, RISK_LOW, RISK_NOTICE。
        # @type RiskLevel: String
        # @param AssetType: 检测项所属的资产类型
        # @type AssetType: String
        # @param LastCheckTime: 最近检测的时间
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type LastCheckTime: String
        # @param CheckStatus: 检测状态

        # CHECK_INIT, 待检测

        # CHECK_RUNNING, 检测中

        # CHECK_FINISHED, 检测完成

        # CHECK_FAILED, 检测失败
        # @type CheckStatus: String
        # @param CheckResult: 检测结果。RESULT_PASSED: 通过

        # RESULT_FAILED: 未通过
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type CheckResult: String
        # @param PassedAssetCount: 通过检测的资产的数目
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type PassedAssetCount: Integer
        # @param FailedAssetCount: 未通过检测的资产的数目
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type FailedAssetCount: Integer
        # @param WhitelistId: 检测项对应的白名单项的ID。如果存在且非0，表示检测项被用户忽略。
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type WhitelistId: Integer
        # @param FixSuggestion: 处理建议。
        # @type FixSuggestion: String
        # @param BenchmarkStandardId: 所属的合规标准的ID
        # @type BenchmarkStandardId: Integer
        # @param ApplicableVersion: 检测项适用的版本
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ApplicableVersion: String
        # @param Description: 检查项描述
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Description: String
        # @param AuditProcedure: 检查项审计方法
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type AuditProcedure: String
        # @param IsEnable: 是否开启
        # <li>0 关闭</li>
        # <li>1 开启</li>
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type IsEnable: Integer

        attr_accessor :CustomerPolicyItemId, :BasePolicyItemId, :Name, :Category, :BenchmarkStandardName, :RiskLevel, :AssetType, :LastCheckTime, :CheckStatus, :CheckResult, :PassedAssetCount, :FailedAssetCount, :WhitelistId, :FixSuggestion, :BenchmarkStandardId, :ApplicableVersion, :Description, :AuditProcedure, :IsEnable

        def initialize(customerpolicyitemid=nil, basepolicyitemid=nil, name=nil, category=nil, benchmarkstandardname=nil, risklevel=nil, assettype=nil, lastchecktime=nil, checkstatus=nil, checkresult=nil, passedassetcount=nil, failedassetcount=nil, whitelistid=nil, fixsuggestion=nil, benchmarkstandardid=nil, applicableversion=nil, description=nil, auditprocedure=nil, isenable=nil)
          @CustomerPolicyItemId = customerpolicyitemid
          @BasePolicyItemId = basepolicyitemid
          @Name = name
          @Category = category
          @BenchmarkStandardName = benchmarkstandardname
          @RiskLevel = risklevel
          @AssetType = assettype
          @LastCheckTime = lastchecktime
          @CheckStatus = checkstatus
          @CheckResult = checkresult
          @PassedAssetCount = passedassetcount
          @FailedAssetCount = failedassetcount
          @WhitelistId = whitelistid
          @FixSuggestion = fixsuggestion
          @BenchmarkStandardId = benchmarkstandardid
          @ApplicableVersion = applicableversion
          @Description = description
          @AuditProcedure = auditprocedure
          @IsEnable = isenable
        end

        def deserialize(params)
          @CustomerPolicyItemId = params['CustomerPolicyItemId']
          @BasePolicyItemId = params['BasePolicyItemId']
          @Name = params['Name']
          @Category = params['Category']
          @BenchmarkStandardName = params['BenchmarkStandardName']
          @RiskLevel = params['RiskLevel']
          @AssetType = params['AssetType']
          @LastCheckTime = params['LastCheckTime']
          @CheckStatus = params['CheckStatus']
          @CheckResult = params['CheckResult']
          @PassedAssetCount = params['PassedAssetCount']
          @FailedAssetCount = params['FailedAssetCount']
          @WhitelistId = params['WhitelistId']
          @FixSuggestion = params['FixSuggestion']
          @BenchmarkStandardId = params['BenchmarkStandardId']
          @ApplicableVersion = params['ApplicableVersion']
          @Description = params['Description']
          @AuditProcedure = params['AuditProcedure']
          @IsEnable = params['IsEnable']
        end
      end

      # 表示检测失败的资产的信息。
      class ComplianceScanFailedAsset < TencentCloud::Common::AbstractModel
        # @param CustomerAssetId: 客户资产的ID。
        # @type CustomerAssetId: Integer
        # @param AssetType: 资产类别。
        # @type AssetType: String
        # @param CheckStatus: 检测状态
        # CHECK_INIT, 待检测
        # CHECK_RUNNING, 检测中
        # CHECK_FINISHED, 检测完成
        # CHECK_FAILED, 检测失败
        # @type CheckStatus: String
        # @param AssetName: 资产的名称。
        # @type AssetName: String
        # @param FailureReason: 资产检测失败的原因。
        # @type FailureReason: String
        # @param Suggestion: 检测失败的处理建议。
        # @type Suggestion: String
        # @param CheckTime: 检测的时间。
        # @type CheckTime: String

        attr_accessor :CustomerAssetId, :AssetType, :CheckStatus, :AssetName, :FailureReason, :Suggestion, :CheckTime

        def initialize(customerassetid=nil, assettype=nil, checkstatus=nil, assetname=nil, failurereason=nil, suggestion=nil, checktime=nil)
          @CustomerAssetId = customerassetid
          @AssetType = assettype
          @CheckStatus = checkstatus
          @AssetName = assetname
          @FailureReason = failurereason
          @Suggestion = suggestion
          @CheckTime = checktime
        end

        def deserialize(params)
          @CustomerAssetId = params['CustomerAssetId']
          @AssetType = params['AssetType']
          @CheckStatus = params['CheckStatus']
          @AssetName = params['AssetName']
          @FailureReason = params['FailureReason']
          @Suggestion = params['Suggestion']
          @CheckTime = params['CheckTime']
        end
      end

      # 表示一条白名单记录。
      class ComplianceWhitelistItem < TencentCloud::Common::AbstractModel
        # @param WhitelistItemId: 白名单项的ID。
        # @type WhitelistItemId: Integer
        # @param CustomerPolicyItemId: 客户检测项的ID。
        # @type CustomerPolicyItemId: Integer
        # @param Name: 检测项的名称。
        # @type Name: String
        # @param StandardName: 合规标准的名称。
        # @type StandardName: String
        # @param StandardId: 合规标准的ID。
        # @type StandardId: Integer
        # @param AffectedAssetCount: 检测项影响的资产的数目。
        # @type AffectedAssetCount: Integer
        # @param LastUpdateTime: 最后更新的时间
        # @type LastUpdateTime: String
        # @param InsertTime: 加入到白名单的时间
        # @type InsertTime: String

        attr_accessor :WhitelistItemId, :CustomerPolicyItemId, :Name, :StandardName, :StandardId, :AffectedAssetCount, :LastUpdateTime, :InsertTime

        def initialize(whitelistitemid=nil, customerpolicyitemid=nil, name=nil, standardname=nil, standardid=nil, affectedassetcount=nil, lastupdatetime=nil, inserttime=nil)
          @WhitelistItemId = whitelistitemid
          @CustomerPolicyItemId = customerpolicyitemid
          @Name = name
          @StandardName = standardname
          @StandardId = standardid
          @AffectedAssetCount = affectedassetcount
          @LastUpdateTime = lastupdatetime
          @InsertTime = inserttime
        end

        def deserialize(params)
          @WhitelistItemId = params['WhitelistItemId']
          @CustomerPolicyItemId = params['CustomerPolicyItemId']
          @Name = params['Name']
          @StandardName = params['StandardName']
          @StandardId = params['StandardId']
          @AffectedAssetCount = params['AffectedAssetCount']
          @LastUpdateTime = params['LastUpdateTime']
          @InsertTime = params['InsertTime']
        end
      end

      # 容器组件信息
      class ComponentInfo < TencentCloud::Common::AbstractModel
        # @param Name: 名称
        # @type Name: String
        # @param Version: 版本
        # @type Version: String

        attr_accessor :Name, :Version

        def initialize(name=nil, version=nil)
          @Name = name
          @Version = version
        end

        def deserialize(params)
          @Name = params['Name']
          @Version = params['Version']
        end
      end

      # 组件信息
      class ComponentsInfo < TencentCloud::Common::AbstractModel
        # @param Component: 组件名称
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Component: String
        # @param Version: 组件版本信息
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Version: String
        # @param FixedVersion: 可修复版本
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type FixedVersion: String
        # @param Path: 路径
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Path: String
        # @param Type: 类型
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Type: String
        # @param Name: 组件名称
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Name: String

        attr_accessor :Component, :Version, :FixedVersion, :Path, :Type, :Name
        extend Gem::Deprecate
        deprecate :Component, :none, 2024, 9
        deprecate :Component=, :none, 2024, 9

        def initialize(component=nil, version=nil, fixedversion=nil, path=nil, type=nil, name=nil)
          @Component = component
          @Version = version
          @FixedVersion = fixedversion
          @Path = path
          @Type = type
          @Name = name
        end

        def deserialize(params)
          @Component = params['Component']
          @Version = params['Version']
          @FixedVersion = params['FixedVersion']
          @Path = params['Path']
          @Type = params['Type']
          @Name = params['Name']
        end
      end

      # ConfirmNetworkFirewallPolicy请求参数结构体
      class ConfirmNetworkFirewallPolicyRequest < TencentCloud::Common::AbstractModel
        # @param ClusterId: 集群Id
        # @type ClusterId: String
        # @param Id: 策略Id数组
        # @type Id: Array

        attr_accessor :ClusterId, :Id

        def initialize(clusterid=nil, id=nil)
          @ClusterId = clusterid
          @Id = id
        end

        def deserialize(params)
          @ClusterId = params['ClusterId']
          @Id = params['Id']
        end
      end

      # ConfirmNetworkFirewallPolicy返回参数结构体
      class ConfirmNetworkFirewallPolicyResponse < TencentCloud::Common::AbstractModel
        # @param TaskId: 返回创建的任务的ID，为0表示创建失败。
        # @type TaskId: Integer
        # @param Result: 创建确认任务的结果，"Succ"为成功，"Failed"为失败
        # @type Result: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TaskId, :Result, :RequestId

        def initialize(taskid=nil, result=nil, requestid=nil)
          @TaskId = taskid
          @Result = result
          @RequestId = requestid
        end

        def deserialize(params)
          @TaskId = params['TaskId']
          @Result = params['Result']
          @RequestId = params['RequestId']
        end
      end

      # 联通性检测配置
      class ConnDetectConfig < TencentCloud::Common::AbstractModel
        # @param Quuid: 主机quuid
        # @type Quuid: String
        # @param Uuid: 主机uuid
        # @type Uuid: String

        attr_accessor :Quuid, :Uuid

        def initialize(quuid=nil, uuid=nil)
          @Quuid = quuid
          @Uuid = uuid
        end

        def deserialize(params)
          @Quuid = params['Quuid']
          @Uuid = params['Uuid']
        end
      end

      # 容器列表集合
      class ContainerInfo < TencentCloud::Common::AbstractModel
        # @param ContainerID: 容器id
        # @type ContainerID: String
        # @param ContainerName: 容器名称
        # @type ContainerName: String
        # @param Status: 容器运行状态
        # @type Status: String
        # @param CreateTime: 创建时间
        # @type CreateTime: String
        # @param RunAs: 运行用户
        # @type RunAs: String
        # @param Cmd: 命令行
        # @type Cmd: String
        # @param CPUUsage: CPU使用率 *1000
        # @type CPUUsage: Integer
        # @param RamUsage: 内存使用 kb
        # @type RamUsage: Integer
        # @param ImageName: 镜像名称
        # @type ImageName: String
        # @param ImageID: 镜像id
        # @type ImageID: String
        # @param POD: 镜像id
        # @type POD: String
        # @param HostID: 主机id
        # @type HostID: String
        # @param HostIP: 主机ip
        # @type HostIP: String
        # @param UpdateTime: 更新时间
        # @type UpdateTime: String
        # @param HostName: 主机名称
        # @type HostName: String
        # @param PublicIp: 外网ip
        # @type PublicIp: String
        # @param NetStatus: 网络状态
        # 未隔离  	NORMAL
        # 已隔离		ISOLATED
        # 隔离中		ISOLATING
        # 隔离失败	ISOLATE_FAILED
        # 解除隔离中  RESTORING
        # 解除隔离失败 RESTORE_FAILED
        # @type NetStatus: String
        # @param NetSubStatus: 网络子状态
        # @type NetSubStatus: String
        # @param IsolateSource: 隔离来源
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type IsolateSource: String
        # @param IsolateTime: 隔离时间
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type IsolateTime: String
        # @param NodeID: 超级节点id
        # @type NodeID: String
        # @param PodIP: podip
        # @type PodIP: String
        # @param PodName: pod名称
        # @type PodName: String
        # @param NodeType: 节点类型:节点类型：NORMAL普通节点、SUPER超级节点
        # @type NodeType: String
        # @param NodeUniqueID: 超级节点唯一id
        # @type NodeUniqueID: String
        # @param PodCpu: 所属Pod的CPU
        # @type PodCpu: Integer
        # @param PodMem: 所属Pod的内存
        # @type PodMem: Integer
        # @param ClusterName: 集群名称
        # @type ClusterName: String
        # @param ClusterID: 集群ID
        # @type ClusterID: String
        # @param PodUid: pod uid
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type PodUid: String

        attr_accessor :ContainerID, :ContainerName, :Status, :CreateTime, :RunAs, :Cmd, :CPUUsage, :RamUsage, :ImageName, :ImageID, :POD, :HostID, :HostIP, :UpdateTime, :HostName, :PublicIp, :NetStatus, :NetSubStatus, :IsolateSource, :IsolateTime, :NodeID, :PodIP, :PodName, :NodeType, :NodeUniqueID, :PodCpu, :PodMem, :ClusterName, :ClusterID, :PodUid

        def initialize(containerid=nil, containername=nil, status=nil, createtime=nil, runas=nil, cmd=nil, cpuusage=nil, ramusage=nil, imagename=nil, imageid=nil, pod=nil, hostid=nil, hostip=nil, updatetime=nil, hostname=nil, publicip=nil, netstatus=nil, netsubstatus=nil, isolatesource=nil, isolatetime=nil, nodeid=nil, podip=nil, podname=nil, nodetype=nil, nodeuniqueid=nil, podcpu=nil, podmem=nil, clustername=nil, clusterid=nil, poduid=nil)
          @ContainerID = containerid
          @ContainerName = containername
          @Status = status
          @CreateTime = createtime
          @RunAs = runas
          @Cmd = cmd
          @CPUUsage = cpuusage
          @RamUsage = ramusage
          @ImageName = imagename
          @ImageID = imageid
          @POD = pod
          @HostID = hostid
          @HostIP = hostip
          @UpdateTime = updatetime
          @HostName = hostname
          @PublicIp = publicip
          @NetStatus = netstatus
          @NetSubStatus = netsubstatus
          @IsolateSource = isolatesource
          @IsolateTime = isolatetime
          @NodeID = nodeid
          @PodIP = podip
          @PodName = podname
          @NodeType = nodetype
          @NodeUniqueID = nodeuniqueid
          @PodCpu = podcpu
          @PodMem = podmem
          @ClusterName = clustername
          @ClusterID = clusterid
          @PodUid = poduid
        end

        def deserialize(params)
          @ContainerID = params['ContainerID']
          @ContainerName = params['ContainerName']
          @Status = params['Status']
          @CreateTime = params['CreateTime']
          @RunAs = params['RunAs']
          @Cmd = params['Cmd']
          @CPUUsage = params['CPUUsage']
          @RamUsage = params['RamUsage']
          @ImageName = params['ImageName']
          @ImageID = params['ImageID']
          @POD = params['POD']
          @HostID = params['HostID']
          @HostIP = params['HostIP']
          @UpdateTime = params['UpdateTime']
          @HostName = params['HostName']
          @PublicIp = params['PublicIp']
          @NetStatus = params['NetStatus']
          @NetSubStatus = params['NetSubStatus']
          @IsolateSource = params['IsolateSource']
          @IsolateTime = params['IsolateTime']
          @NodeID = params['NodeID']
          @PodIP = params['PodIP']
          @PodName = params['PodName']
          @NodeType = params['NodeType']
          @NodeUniqueID = params['NodeUniqueID']
          @PodCpu = params['PodCpu']
          @PodMem = params['PodMem']
          @ClusterName = params['ClusterName']
          @ClusterID = params['ClusterID']
          @PodUid = params['PodUid']
        end
      end

      # 容器挂载信息
      class ContainerMount < TencentCloud::Common::AbstractModel
        # @param Type: 挂载类型 bind
        # @type Type: String
        # @param Source: 宿主机路径
        # @type Source: String
        # @param Destination: 容器内路径
        # @type Destination: String
        # @param Mode: 模式
        # @type Mode: String
        # @param RW: 读写权限
        # @type RW: Boolean
        # @param Propagation: 传播类型
        # @type Propagation: String
        # @param Name: 名称
        # @type Name: String
        # @param Driver: 驱动
        # @type Driver: String

        attr_accessor :Type, :Source, :Destination, :Mode, :RW, :Propagation, :Name, :Driver

        def initialize(type=nil, source=nil, destination=nil, mode=nil, rw=nil, propagation=nil, name=nil, driver=nil)
          @Type = type
          @Source = source
          @Destination = destination
          @Mode = mode
          @RW = rw
          @Propagation = propagation
          @Name = name
          @Driver = driver
        end

        def deserialize(params)
          @Type = params['Type']
          @Source = params['Source']
          @Destination = params['Destination']
          @Mode = params['Mode']
          @RW = params['RW']
          @Propagation = params['Propagation']
          @Name = params['Name']
          @Driver = params['Driver']
        end
      end

      # 容器网络信息
      class ContainerNetwork < TencentCloud::Common::AbstractModel
        # @param EndpointID: endpoint id
        # @type EndpointID: String
        # @param Mode: 模式:bridge
        # @type Mode: String
        # @param Name: 网络名称
        # @type Name: String
        # @param NetworkID: 网络ID
        # @type NetworkID: String
        # @param Gateway: 网关
        # @type Gateway: String
        # @param Ipv4: IPV4地址
        # @type Ipv4: String
        # @param Ipv6: IPV6地址
        # @type Ipv6: String
        # @param MAC: MAC 地址
        # @type MAC: String

        attr_accessor :EndpointID, :Mode, :Name, :NetworkID, :Gateway, :Ipv4, :Ipv6, :MAC

        def initialize(endpointid=nil, mode=nil, name=nil, networkid=nil, gateway=nil, ipv4=nil, ipv6=nil, mac=nil)
          @EndpointID = endpointid
          @Mode = mode
          @Name = name
          @NetworkID = networkid
          @Gateway = gateway
          @Ipv4 = ipv4
          @Ipv6 = ipv6
          @MAC = mac
        end

        def deserialize(params)
          @EndpointID = params['EndpointID']
          @Mode = params['Mode']
          @Name = params['Name']
          @NetworkID = params['NetworkID']
          @Gateway = params['Gateway']
          @Ipv4 = params['Ipv4']
          @Ipv6 = params['Ipv6']
          @MAC = params['MAC']
        end
      end

      # CreateAbnormalProcessRulesExportJob请求参数结构体
      class CreateAbnormalProcessRulesExportJobRequest < TencentCloud::Common::AbstractModel
        # @param Filters: 过滤条件。
        # <li>RuleType - string  - 是否必填: 否 -规则类型</li>
        # <li>Status - string  - 是否必填: 否 -状态</li>
        # @type Filters: Array
        # @param Order: 排序方式
        # @type Order: String
        # @param By: 排序字段
        # @type By: String
        # @param ExportField: 导出字段
        # @type ExportField: Array

        attr_accessor :Filters, :Order, :By, :ExportField

        def initialize(filters=nil, order=nil, by=nil, exportfield=nil)
          @Filters = filters
          @Order = order
          @By = by
          @ExportField = exportfield
        end

        def deserialize(params)
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              runtimefilters_tmp = RunTimeFilters.new
              runtimefilters_tmp.deserialize(i)
              @Filters << runtimefilters_tmp
            end
          end
          @Order = params['Order']
          @By = params['By']
          @ExportField = params['ExportField']
        end
      end

      # CreateAbnormalProcessRulesExportJob返回参数结构体
      class CreateAbnormalProcessRulesExportJobResponse < TencentCloud::Common::AbstractModel
        # @param JobId: 导出任务ID，前端拿着任务ID查询任务进度
        # @type JobId: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :JobId, :RequestId

        def initialize(jobid=nil, requestid=nil)
          @JobId = jobid
          @RequestId = requestid
        end

        def deserialize(params)
          @JobId = params['JobId']
          @RequestId = params['RequestId']
        end
      end

      # CreateAccessControlsRuleExportJob请求参数结构体
      class CreateAccessControlsRuleExportJobRequest < TencentCloud::Common::AbstractModel
        # @param Filters: 过滤条件。
        # <li>RuleType - string  - 是否必填: 否 -规则类型</li>
        # <li>Status - string  - 是否必填: 否 -状态</li>
        # @type Filters: Array
        # @param Order: 排序方式
        # @type Order: String
        # @param By: 排序字段
        # @type By: Array
        # @param ExportField: 导出字段
        # @type ExportField: Array

        attr_accessor :Filters, :Order, :By, :ExportField

        def initialize(filters=nil, order=nil, by=nil, exportfield=nil)
          @Filters = filters
          @Order = order
          @By = by
          @ExportField = exportfield
        end

        def deserialize(params)
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              runtimefilters_tmp = RunTimeFilters.new
              runtimefilters_tmp.deserialize(i)
              @Filters << runtimefilters_tmp
            end
          end
          @Order = params['Order']
          @By = params['By']
          @ExportField = params['ExportField']
        end
      end

      # CreateAccessControlsRuleExportJob返回参数结构体
      class CreateAccessControlsRuleExportJobResponse < TencentCloud::Common::AbstractModel
        # @param JobId: 导出任务ID，前端拿着任务ID查询任务进度
        # @type JobId: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :JobId, :RequestId

        def initialize(jobid=nil, requestid=nil)
          @JobId = jobid
          @RequestId = requestid
        end

        def deserialize(params)
          @JobId = params['JobId']
          @RequestId = params['RequestId']
        end
      end

      # CreateAssetImageRegistryScanTaskOneKey请求参数结构体
      class CreateAssetImageRegistryScanTaskOneKeyRequest < TencentCloud::Common::AbstractModel
        # @param All: 是否扫描全部镜像(废弃)
        # @type All: Boolean
        # @param Images: 扫描的镜像列表
        # @type Images: Array
        # @param ScanType: 扫描类型数组
        # @type ScanType: Array
        # @param Id: 扫描的镜像列表Id
        # @type Id: Array
        # @param IsLatest: 是否最新镜像
        # @type IsLatest: Boolean
        # @param ScanScope: 扫描范围 0全部镜像，1自选镜像，2推荐扫描镜像
        # @type ScanScope: Integer
        # @param RegistryType: 仓库类型
        # @type RegistryType: Array
        # @param Namespace: 命名空间
        # @type Namespace: Array
        # @param ContainerRunning: 是否存在运行中的容器
        # @type ContainerRunning: Boolean
        # @param Timeout: 任务超时时长单位s
        # @type Timeout: Integer

        attr_accessor :All, :Images, :ScanType, :Id, :IsLatest, :ScanScope, :RegistryType, :Namespace, :ContainerRunning, :Timeout
        extend Gem::Deprecate
        deprecate :All, :none, 2024, 9
        deprecate :All=, :none, 2024, 9

        def initialize(all=nil, images=nil, scantype=nil, id=nil, islatest=nil, scanscope=nil, registrytype=nil, namespace=nil, containerrunning=nil, timeout=nil)
          @All = all
          @Images = images
          @ScanType = scantype
          @Id = id
          @IsLatest = islatest
          @ScanScope = scanscope
          @RegistryType = registrytype
          @Namespace = namespace
          @ContainerRunning = containerrunning
          @Timeout = timeout
        end

        def deserialize(params)
          @All = params['All']
          unless params['Images'].nil?
            @Images = []
            params['Images'].each do |i|
              imageinfo_tmp = ImageInfo.new
              imageinfo_tmp.deserialize(i)
              @Images << imageinfo_tmp
            end
          end
          @ScanType = params['ScanType']
          @Id = params['Id']
          @IsLatest = params['IsLatest']
          @ScanScope = params['ScanScope']
          @RegistryType = params['RegistryType']
          @Namespace = params['Namespace']
          @ContainerRunning = params['ContainerRunning']
          @Timeout = params['Timeout']
        end
      end

      # CreateAssetImageRegistryScanTaskOneKey返回参数结构体
      class CreateAssetImageRegistryScanTaskOneKeyResponse < TencentCloud::Common::AbstractModel
        # @param TaskID: 扫描任务id
        # @type TaskID: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TaskID, :RequestId

        def initialize(taskid=nil, requestid=nil)
          @TaskID = taskid
          @RequestId = requestid
        end

        def deserialize(params)
          @TaskID = params['TaskID']
          @RequestId = params['RequestId']
        end
      end

      # CreateAssetImageRegistryScanTask请求参数结构体
      class CreateAssetImageRegistryScanTaskRequest < TencentCloud::Common::AbstractModel
        # @param All: 是否扫描全部镜像
        # @type All: Boolean
        # @param Images: 扫描的镜像列表
        # @type Images: Array
        # @param ScanType: 扫描类型数组
        # @type ScanType: Array
        # @param Id: 扫描的镜像列表
        # @type Id: Array
        # @param Filters: 过滤条件
        # @type Filters: Array
        # @param ExcludeImageList: 不需要扫描的镜像列表, 与Filters配合使用
        # @type ExcludeImageList: Array
        # @param OnlyScanLatest: 是否仅扫描各repository最新版的镜像, 与Filters配合使用
        # @type OnlyScanLatest: Boolean

        attr_accessor :All, :Images, :ScanType, :Id, :Filters, :ExcludeImageList, :OnlyScanLatest

        def initialize(all=nil, images=nil, scantype=nil, id=nil, filters=nil, excludeimagelist=nil, onlyscanlatest=nil)
          @All = all
          @Images = images
          @ScanType = scantype
          @Id = id
          @Filters = filters
          @ExcludeImageList = excludeimagelist
          @OnlyScanLatest = onlyscanlatest
        end

        def deserialize(params)
          @All = params['All']
          unless params['Images'].nil?
            @Images = []
            params['Images'].each do |i|
              imageinfo_tmp = ImageInfo.new
              imageinfo_tmp.deserialize(i)
              @Images << imageinfo_tmp
            end
          end
          @ScanType = params['ScanType']
          @Id = params['Id']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              assetfilters_tmp = AssetFilters.new
              assetfilters_tmp.deserialize(i)
              @Filters << assetfilters_tmp
            end
          end
          @ExcludeImageList = params['ExcludeImageList']
          @OnlyScanLatest = params['OnlyScanLatest']
        end
      end

      # CreateAssetImageRegistryScanTask返回参数结构体
      class CreateAssetImageRegistryScanTaskResponse < TencentCloud::Common::AbstractModel
        # @param TaskID: 返回的任务ID
        # @type TaskID: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TaskID, :RequestId

        def initialize(taskid=nil, requestid=nil)
          @TaskID = taskid
          @RequestId = requestid
        end

        def deserialize(params)
          @TaskID = params['TaskID']
          @RequestId = params['RequestId']
        end
      end

      # CreateAssetImageScanSetting请求参数结构体
      class CreateAssetImageScanSettingRequest < TencentCloud::Common::AbstractModel
        # @param Enable: 开关
        # @type Enable: Boolean
        # @param ScanTime: 扫描开始时间
        # 01:00 时分
        # @type ScanTime: String
        # @param ScanPeriod: 扫描周期
        # @type ScanPeriod: Integer
        # @param ScanVirus: 扫描木马
        # @type ScanVirus: Boolean
        # @param ScanRisk: 扫描敏感信息
        # @type ScanRisk: Boolean
        # @param ScanVul: 扫描漏洞
        # @type ScanVul: Boolean
        # @param All: 全部镜像
        # @type All: Boolean
        # @param Images: 自定义镜像
        # @type Images: Array
        # @param ContainerRunning: 镜像是否存在运行中的容器
        # @type ContainerRunning: Boolean
        # @param ScanScope: 扫描范围 0 全部授权镜像，1自选镜像，2 推荐扫描
        # @type ScanScope: Integer
        # @param ScanEndTime: 扫描结束时间
        # 02:00 时分
        # @type ScanEndTime: String
        # @param ExcludeImages: 排除扫描的镜像
        # @type ExcludeImages: Array

        attr_accessor :Enable, :ScanTime, :ScanPeriod, :ScanVirus, :ScanRisk, :ScanVul, :All, :Images, :ContainerRunning, :ScanScope, :ScanEndTime, :ExcludeImages
        extend Gem::Deprecate
        deprecate :All, :none, 2024, 9
        deprecate :All=, :none, 2024, 9

        def initialize(enable=nil, scantime=nil, scanperiod=nil, scanvirus=nil, scanrisk=nil, scanvul=nil, all=nil, images=nil, containerrunning=nil, scanscope=nil, scanendtime=nil, excludeimages=nil)
          @Enable = enable
          @ScanTime = scantime
          @ScanPeriod = scanperiod
          @ScanVirus = scanvirus
          @ScanRisk = scanrisk
          @ScanVul = scanvul
          @All = all
          @Images = images
          @ContainerRunning = containerrunning
          @ScanScope = scanscope
          @ScanEndTime = scanendtime
          @ExcludeImages = excludeimages
        end

        def deserialize(params)
          @Enable = params['Enable']
          @ScanTime = params['ScanTime']
          @ScanPeriod = params['ScanPeriod']
          @ScanVirus = params['ScanVirus']
          @ScanRisk = params['ScanRisk']
          @ScanVul = params['ScanVul']
          @All = params['All']
          @Images = params['Images']
          @ContainerRunning = params['ContainerRunning']
          @ScanScope = params['ScanScope']
          @ScanEndTime = params['ScanEndTime']
          @ExcludeImages = params['ExcludeImages']
        end
      end

      # CreateAssetImageScanSetting返回参数结构体
      class CreateAssetImageScanSettingResponse < TencentCloud::Common::AbstractModel
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RequestId

        def initialize(requestid=nil)
          @RequestId = requestid
        end

        def deserialize(params)
          @RequestId = params['RequestId']
        end
      end

      # CreateAssetImageScanTask请求参数结构体
      class CreateAssetImageScanTaskRequest < TencentCloud::Common::AbstractModel
        # @param All: 是否扫描全部镜像；全部镜像，镜像列表和根据过滤条件筛选三选一。
        # @type All: Boolean
        # @param Images: 需要扫描的镜像列表；全部镜像，镜像列表和根据过滤条件筛选三选一。
        # @type Images: Array
        # @param ScanVul: 扫描漏洞；漏洞，木马和风险需选其一
        # @type ScanVul: Boolean
        # @param ScanVirus: 扫描木马；漏洞，木马和风险需选其一
        # @type ScanVirus: Boolean
        # @param ScanRisk: 扫描风险；漏洞，木马和风险需选其一
        # @type ScanRisk: Boolean
        # @param Filters: 根据过滤条件筛选出镜像；全部镜像，镜像列表和根据过滤条件筛选三选一。
        # @type Filters: Array
        # @param ExcludeImageIds: 根据过滤条件筛选出镜像，再排除个别镜像
        # @type ExcludeImageIds: Array
        # @param ContainerRunning: 镜像是否存在运行中的容器
        # @type ContainerRunning: Boolean
        # @param ScanScope: 扫描范围 0 全部授权镜像，1自选镜像，2 推荐扫描
        # @type ScanScope: Integer
        # @param Timeout: 任务超时时长单位秒，默认1小时
        # @type Timeout: Integer

        attr_accessor :All, :Images, :ScanVul, :ScanVirus, :ScanRisk, :Filters, :ExcludeImageIds, :ContainerRunning, :ScanScope, :Timeout
        extend Gem::Deprecate
        deprecate :All, :none, 2024, 9
        deprecate :All=, :none, 2024, 9

        def initialize(all=nil, images=nil, scanvul=nil, scanvirus=nil, scanrisk=nil, filters=nil, excludeimageids=nil, containerrunning=nil, scanscope=nil, timeout=nil)
          @All = all
          @Images = images
          @ScanVul = scanvul
          @ScanVirus = scanvirus
          @ScanRisk = scanrisk
          @Filters = filters
          @ExcludeImageIds = excludeimageids
          @ContainerRunning = containerrunning
          @ScanScope = scanscope
          @Timeout = timeout
        end

        def deserialize(params)
          @All = params['All']
          @Images = params['Images']
          @ScanVul = params['ScanVul']
          @ScanVirus = params['ScanVirus']
          @ScanRisk = params['ScanRisk']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              assetfilters_tmp = AssetFilters.new
              assetfilters_tmp.deserialize(i)
              @Filters << assetfilters_tmp
            end
          end
          @ExcludeImageIds = params['ExcludeImageIds']
          @ContainerRunning = params['ContainerRunning']
          @ScanScope = params['ScanScope']
          @Timeout = params['Timeout']
        end
      end

      # CreateAssetImageScanTask返回参数结构体
      class CreateAssetImageScanTaskResponse < TencentCloud::Common::AbstractModel
        # @param TaskID: 任务id
        # @type TaskID: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TaskID, :RequestId

        def initialize(taskid=nil, requestid=nil)
          @TaskID = taskid
          @RequestId = requestid
        end

        def deserialize(params)
          @TaskID = params['TaskID']
          @RequestId = params['RequestId']
        end
      end

      # CreateAssetImageVirusExportJob请求参数结构体
      class CreateAssetImageVirusExportJobRequest < TencentCloud::Common::AbstractModel
        # @param ExportField: 导出字段
        # @type ExportField: Array
        # @param ImageID: 镜像id
        # @type ImageID: String
        # @param Filters: 需要返回的数量，默认为10，最大值为10000
        # @type Filters: Array
        # @param Limit: 偏移量，默认为0。
        # @type Limit: Integer
        # @param Offset: 过滤参数,"Filters":[{"Name":"Status","Values":["2"]}]
        # @type Offset: Integer
        # @param By: 排序字段
        # @type By: String
        # @param Order: 升序降序,asc desc
        # @type Order: String

        attr_accessor :ExportField, :ImageID, :Filters, :Limit, :Offset, :By, :Order

        def initialize(exportfield=nil, imageid=nil, filters=nil, limit=nil, offset=nil, by=nil, order=nil)
          @ExportField = exportfield
          @ImageID = imageid
          @Filters = filters
          @Limit = limit
          @Offset = offset
          @By = by
          @Order = order
        end

        def deserialize(params)
          @ExportField = params['ExportField']
          @ImageID = params['ImageID']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              assetfilters_tmp = AssetFilters.new
              assetfilters_tmp.deserialize(i)
              @Filters << assetfilters_tmp
            end
          end
          @Limit = params['Limit']
          @Offset = params['Offset']
          @By = params['By']
          @Order = params['Order']
        end
      end

      # CreateAssetImageVirusExportJob返回参数结构体
      class CreateAssetImageVirusExportJobResponse < TencentCloud::Common::AbstractModel
        # @param JobId: 导出任务ID，前端拿着任务ID查询任务进度
        # @type JobId: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :JobId, :RequestId

        def initialize(jobid=nil, requestid=nil)
          @JobId = jobid
          @RequestId = requestid
        end

        def deserialize(params)
          @JobId = params['JobId']
          @RequestId = params['RequestId']
        end
      end

      # CreateCheckComponent请求参数结构体
      class CreateCheckComponentRequest < TencentCloud::Common::AbstractModel
        # @param ClusterInfoList: 要安装的集群列表信息
        # @type ClusterInfoList: Array

        attr_accessor :ClusterInfoList

        def initialize(clusterinfolist=nil)
          @ClusterInfoList = clusterinfolist
        end

        def deserialize(params)
          unless params['ClusterInfoList'].nil?
            @ClusterInfoList = []
            params['ClusterInfoList'].each do |i|
              clustercreatecomponentitem_tmp = ClusterCreateComponentItem.new
              clustercreatecomponentitem_tmp.deserialize(i)
              @ClusterInfoList << clustercreatecomponentitem_tmp
            end
          end
        end
      end

      # CreateCheckComponent返回参数结构体
      class CreateCheckComponentResponse < TencentCloud::Common::AbstractModel
        # @param InstallResult: "InstallSucc"表示安装成功，"InstallFailed"表示安装失败
        # @type InstallResult: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :InstallResult, :RequestId

        def initialize(installresult=nil, requestid=nil)
          @InstallResult = installresult
          @RequestId = requestid
        end

        def deserialize(params)
          @InstallResult = params['InstallResult']
          @RequestId = params['RequestId']
        end
      end

      # CreateClusterCheckTask请求参数结构体
      class CreateClusterCheckTaskRequest < TencentCloud::Common::AbstractModel
        # @param ClusterCheckTaskList: 指定要扫描的集群信息
        # @type ClusterCheckTaskList: Array

        attr_accessor :ClusterCheckTaskList

        def initialize(clusterchecktasklist=nil)
          @ClusterCheckTaskList = clusterchecktasklist
        end

        def deserialize(params)
          unless params['ClusterCheckTaskList'].nil?
            @ClusterCheckTaskList = []
            params['ClusterCheckTaskList'].each do |i|
              clusterchecktaskitem_tmp = ClusterCheckTaskItem.new
              clusterchecktaskitem_tmp.deserialize(i)
              @ClusterCheckTaskList << clusterchecktaskitem_tmp
            end
          end
        end
      end

      # CreateClusterCheckTask返回参数结构体
      class CreateClusterCheckTaskResponse < TencentCloud::Common::AbstractModel
        # @param TaskId: 返回创建的集群检查任务的ID，为0表示创建失败。
        # @type TaskId: Integer
        # @param CreateResult: 创建检查任务的结果，"Succ"为成功，其他的为失败原因
        # @type CreateResult: String
        # @param NewTaskID: 返回创建的集群新任务ID
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type NewTaskID: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TaskId, :CreateResult, :NewTaskID, :RequestId

        def initialize(taskid=nil, createresult=nil, newtaskid=nil, requestid=nil)
          @TaskId = taskid
          @CreateResult = createresult
          @NewTaskID = newtaskid
          @RequestId = requestid
        end

        def deserialize(params)
          @TaskId = params['TaskId']
          @CreateResult = params['CreateResult']
          @NewTaskID = params['NewTaskID']
          @RequestId = params['RequestId']
        end
      end

      # CreateComplianceTask请求参数结构体
      class CreateComplianceTaskRequest < TencentCloud::Common::AbstractModel
        # @param AssetTypeSet: 指定要扫描的资产类型列表。
        # ASSET_CONTAINER, 容器
        # ASSET_IMAGE, 镜像
        # ASSET_HOST, 主机
        # ASSET_K8S, K8S资产
        # AssetTypeSet, PolicySetId, PeriodTaskId三个参数，必须要给其中一个参数填写有效的值。
        # @type AssetTypeSet: Array
        # @param PolicySetId: 按照策略集ID指定的策略执行合规检查。
        # @type PolicySetId: Integer
        # @param PeriodTaskId: 按照定时任务ID指定的策略执行合规检查。
        # @type PeriodTaskId: Integer

        attr_accessor :AssetTypeSet, :PolicySetId, :PeriodTaskId

        def initialize(assettypeset=nil, policysetid=nil, periodtaskid=nil)
          @AssetTypeSet = assettypeset
          @PolicySetId = policysetid
          @PeriodTaskId = periodtaskid
        end

        def deserialize(params)
          @AssetTypeSet = params['AssetTypeSet']
          @PolicySetId = params['PolicySetId']
          @PeriodTaskId = params['PeriodTaskId']
        end
      end

      # CreateComplianceTask返回参数结构体
      class CreateComplianceTaskResponse < TencentCloud::Common::AbstractModel
        # @param TaskId: 返回创建的合规检查任务的ID。
        # @type TaskId: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TaskId, :RequestId

        def initialize(taskid=nil, requestid=nil)
          @TaskId = taskid
          @RequestId = requestid
        end

        def deserialize(params)
          @TaskId = params['TaskId']
          @RequestId = params['RequestId']
        end
      end

      # CreateComponentExportJob请求参数结构体
      class CreateComponentExportJobRequest < TencentCloud::Common::AbstractModel
        # @param ImageID: 镜像ID
        # @type ImageID: String
        # @param ExportField: 导出字段
        # @type ExportField: Array
        # @param Limit: 需要返回的数量，默认为10000，最大值为10000
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Filters: 过滤条件。
        # <li>ComponentName- String - 是否必填：否 - 镜像组件名称</li><li>ComponentVersion- String - 是否必填：否 - 镜像组件版本</li><li>ComponentType- String - 是否必填：否 - 镜像组件类型</li><li>VulLevel- String - 是否必填：否 - 漏洞威胁等级</li><li>HasVul- String - 是否必填：否 -是否有漏洞；true：是，false，否；不传或ALL ：全部</li>
        # @type Filters: Array
        # @param By: 排序字段
        # @type By: String
        # @param Order: 排序方式desc ，asc
        # @type Order: String

        attr_accessor :ImageID, :ExportField, :Limit, :Offset, :Filters, :By, :Order

        def initialize(imageid=nil, exportfield=nil, limit=nil, offset=nil, filters=nil, by=nil, order=nil)
          @ImageID = imageid
          @ExportField = exportfield
          @Limit = limit
          @Offset = offset
          @Filters = filters
          @By = by
          @Order = order
        end

        def deserialize(params)
          @ImageID = params['ImageID']
          @ExportField = params['ExportField']
          @Limit = params['Limit']
          @Offset = params['Offset']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              assetfilters_tmp = AssetFilters.new
              assetfilters_tmp.deserialize(i)
              @Filters << assetfilters_tmp
            end
          end
          @By = params['By']
          @Order = params['Order']
        end
      end

      # CreateComponentExportJob返回参数结构体
      class CreateComponentExportJobResponse < TencentCloud::Common::AbstractModel
        # @param JobId: 导出任务ID，前端拿着任务ID查询任务进度
        # @type JobId: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :JobId, :RequestId

        def initialize(jobid=nil, requestid=nil)
          @JobId = jobid
          @RequestId = requestid
        end

        def deserialize(params)
          @JobId = params['JobId']
          @RequestId = params['RequestId']
        end
      end

      # CreateDefenceVulExportJob请求参数结构体
      class CreateDefenceVulExportJobRequest < TencentCloud::Common::AbstractModel
        # @param Limit: 需要返回的数量，默认为10000，最大值为10000
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Filters: 过滤条件。
        # <li>Level- String - 是否必填：否 - 威胁等级，CRITICAL:严重 HIGH:高/MIDDLE:中/LOW:低</li>
        # <li>CVEID- string - 是否必填：否 - CVE编号</li>
        # <li>Name- string -是否必填: 否 - 漏洞名称</li>
        # @type Filters: Array
        # @param Order: 排序方式
        # @type Order: String
        # @param By: 排序字段
        # @type By: String

        attr_accessor :Limit, :Offset, :Filters, :Order, :By

        def initialize(limit=nil, offset=nil, filters=nil, order=nil, by=nil)
          @Limit = limit
          @Offset = offset
          @Filters = filters
          @Order = order
          @By = by
        end

        def deserialize(params)
          @Limit = params['Limit']
          @Offset = params['Offset']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              runtimefilters_tmp = RunTimeFilters.new
              runtimefilters_tmp.deserialize(i)
              @Filters << runtimefilters_tmp
            end
          end
          @Order = params['Order']
          @By = params['By']
        end
      end

      # CreateDefenceVulExportJob返回参数结构体
      class CreateDefenceVulExportJobResponse < TencentCloud::Common::AbstractModel
        # @param JobId: 导出任务ID，前端拿着任务ID查询任务进度
        # @type JobId: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :JobId, :RequestId

        def initialize(jobid=nil, requestid=nil)
          @JobId = jobid
          @RequestId = requestid
        end

        def deserialize(params)
          @JobId = params['JobId']
          @RequestId = params['RequestId']
        end
      end

      # CreateEmergencyVulExportJob请求参数结构体
      class CreateEmergencyVulExportJobRequest < TencentCloud::Common::AbstractModel
        # @param Limit: 需要返回的数量，默认为50000，最大值为50000
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Filters: 过滤条件。
        # <li>Level- String - 是否必填：否 - 威胁等级，CRITICAL:严重 HIGH:高/MIDDLE:中/LOW:低</li>
        # <li>Tags- string - 是否必填：否 - 漏洞标签，POC，EXP。</li>
        # <li>CanBeFixed- string - 是否必填：否 - 是否可修复true,false。</li>
        # <li>CVEID- string - 是否必填：否 - CVE编号</li>
        # <li>ImageID- string - 是否必填：否 - 镜像ID</li>
        # <li>ImageName- String -是否必填: 否 - 镜像名称</li>
        # <li>ContainerID- string -是否必填: 否 - 容器ID</li>
        # <li>ContainerName- string -是否必填: 否 - 容器名称</li>
        # <li>ComponentName- string -是否必填: 否 - 组件名称</li>
        # <li>ComponentVersion- string -是否必填: 否 - 组件版本</li>
        # <li>Name- string -是否必填: 否 - 漏洞名称</li>
        # @type Filters: Array
        # @param Order: 排序方式
        # @type Order: String
        # @param By: 排序字段
        # @type By: String

        attr_accessor :Limit, :Offset, :Filters, :Order, :By

        def initialize(limit=nil, offset=nil, filters=nil, order=nil, by=nil)
          @Limit = limit
          @Offset = offset
          @Filters = filters
          @Order = order
          @By = by
        end

        def deserialize(params)
          @Limit = params['Limit']
          @Offset = params['Offset']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              runtimefilters_tmp = RunTimeFilters.new
              runtimefilters_tmp.deserialize(i)
              @Filters << runtimefilters_tmp
            end
          end
          @Order = params['Order']
          @By = params['By']
        end
      end

      # CreateEmergencyVulExportJob返回参数结构体
      class CreateEmergencyVulExportJobResponse < TencentCloud::Common::AbstractModel
        # @param JobId: 导出任务ID，前端拿着任务ID查询任务进度
        # @type JobId: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :JobId, :RequestId

        def initialize(jobid=nil, requestid=nil)
          @JobId = jobid
          @RequestId = requestid
        end

        def deserialize(params)
          @JobId = params['JobId']
          @RequestId = params['RequestId']
        end
      end

      # CreateEscapeEventsExportJob请求参数结构体
      class CreateEscapeEventsExportJobRequest < TencentCloud::Common::AbstractModel
        # @param Limit: 需要返回的数量，最大值为10000
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Filters: 过滤参数,Status：EVENT_UNDEAL:未处理，EVENT_DEALED:已处理，EVENT_INGNORE:忽略
        # @type Filters: Array
        # @param Order: 升序降序,asc desc
        # @type Order: String
        # @param By: 排序字段：latest_found_time
        # @type By: String
        # @param ExportField: 导出字段
        # @type ExportField: Array

        attr_accessor :Limit, :Offset, :Filters, :Order, :By, :ExportField

        def initialize(limit=nil, offset=nil, filters=nil, order=nil, by=nil, exportfield=nil)
          @Limit = limit
          @Offset = offset
          @Filters = filters
          @Order = order
          @By = by
          @ExportField = exportfield
        end

        def deserialize(params)
          @Limit = params['Limit']
          @Offset = params['Offset']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              runtimefilters_tmp = RunTimeFilters.new
              runtimefilters_tmp.deserialize(i)
              @Filters << runtimefilters_tmp
            end
          end
          @Order = params['Order']
          @By = params['By']
          @ExportField = params['ExportField']
        end
      end

      # CreateEscapeEventsExportJob返回参数结构体
      class CreateEscapeEventsExportJobResponse < TencentCloud::Common::AbstractModel
        # @param JobId: 导出任务ID，前端拿着任务ID查询任务进度
        # @type JobId: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :JobId, :RequestId

        def initialize(jobid=nil, requestid=nil)
          @JobId = jobid
          @RequestId = requestid
        end

        def deserialize(params)
          @JobId = params['JobId']
          @RequestId = params['RequestId']
        end
      end

      # CreateEscapeWhiteListExportJob请求参数结构体
      class CreateEscapeWhiteListExportJobRequest < TencentCloud::Common::AbstractModel
        # @param Filters: 过滤条件。
        # <li>EventType- String - 是否必填：否 - 加白事件类型，ESCAPE_CGROUPS：利用cgroup机制逃逸，ESCAPE_TAMPER_SENSITIVE_FILE：篡改敏感文件逃逸， ESCAPE_DOCKER_API：访问Docker API接口逃逸，ESCAPE_VUL_OCCURRED：逃逸漏洞利用，MOUNT_SENSITIVE_PTAH：敏感路径挂载，PRIVILEGE_CONTAINER_START：特权容器， PRIVILEGE：程序提权逃逸</li>
        # <li>ImageName- string - 是否必填：否 - 镜像名称。</li>
        # <li>ImageID- string - 是否必填：否 - 镜像ID。</li>
        # @type Filters: Array
        # @param Limit: 需要返回的数量，默认为10000，最大值为10000
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Order: 排序方式：asc/desc
        # @type Order: String
        # @param By: 排序字段：主机数量：HostCount，容器数量：ContainerCount，更新时间：UpdateTime
        # @type By: String

        attr_accessor :Filters, :Limit, :Offset, :Order, :By

        def initialize(filters=nil, limit=nil, offset=nil, order=nil, by=nil)
          @Filters = filters
          @Limit = limit
          @Offset = offset
          @Order = order
          @By = by
        end

        def deserialize(params)
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              runtimefilters_tmp = RunTimeFilters.new
              runtimefilters_tmp.deserialize(i)
              @Filters << runtimefilters_tmp
            end
          end
          @Limit = params['Limit']
          @Offset = params['Offset']
          @Order = params['Order']
          @By = params['By']
        end
      end

      # CreateEscapeWhiteListExportJob返回参数结构体
      class CreateEscapeWhiteListExportJobResponse < TencentCloud::Common::AbstractModel
        # @param JobId: 导出任务ID，前端拿着任务ID查询任务进度
        # @type JobId: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :JobId, :RequestId

        def initialize(jobid=nil, requestid=nil)
          @JobId = jobid
          @RequestId = requestid
        end

        def deserialize(params)
          @JobId = params['JobId']
          @RequestId = params['RequestId']
        end
      end

      # CreateExportComplianceStatusListJob请求参数结构体
      class CreateExportComplianceStatusListJobRequest < TencentCloud::Common::AbstractModel
        # @param AssetType: 要导出信息的资产类型
        # @type AssetType: String
        # @param ExportByAsset: 按照检测项导出，还是按照资产导出。true: 按照资产导出；false: 按照检测项导出。
        # @type ExportByAsset: Boolean
        # @param ExportAll: true, 全部导出；false, 根据IdList来导出数据。
        # @type ExportAll: Boolean
        # @param IdList: 要导出的资产ID列表或检测项ID列表，由ExportByAsset的取值决定。
        # @type IdList: Array

        attr_accessor :AssetType, :ExportByAsset, :ExportAll, :IdList

        def initialize(assettype=nil, exportbyasset=nil, exportall=nil, idlist=nil)
          @AssetType = assettype
          @ExportByAsset = exportbyasset
          @ExportAll = exportall
          @IdList = idlist
        end

        def deserialize(params)
          @AssetType = params['AssetType']
          @ExportByAsset = params['ExportByAsset']
          @ExportAll = params['ExportAll']
          @IdList = params['IdList']
        end
      end

      # CreateExportComplianceStatusListJob返回参数结构体
      class CreateExportComplianceStatusListJobResponse < TencentCloud::Common::AbstractModel
        # @param JobId: 返回创建的导出任务的ID
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type JobId: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :JobId, :RequestId

        def initialize(jobid=nil, requestid=nil)
          @JobId = jobid
          @RequestId = requestid
        end

        def deserialize(params)
          @JobId = params['JobId']
          @RequestId = params['RequestId']
        end
      end

      # CreateHostExportJob请求参数结构体
      class CreateHostExportJobRequest < TencentCloud::Common::AbstractModel
        # @param Filters: 过滤条件。
        # <li>Status - String - 是否必填：否 - agent状态筛选，"ALL":"全部"(或不传该字段),"UNINSTALL"："未安装","OFFLINE"："离线", "ONLINE"："防护中"</li>
        # <li>HostName - String - 是否必填：否 - 主机名筛选</li>
        # <li>Group- String - 是否必填：否 - 主机群组搜索</li>
        # <li>HostIP- string - 是否必填：否 - 主机ip搜索</li>
        # <li>HostID- string - 是否必填：否 - 主机id搜索</li>
        # <li>DockerVersion- string - 是否必填：否 - docker版本搜索</li>
        # <li>MachineType- string - 是否必填：否 - 主机来源MachineType搜索，"ALL":"全部"(或不传该字段),主机来源：["CVM", "ECM", "LH", "BM"]  中的之一为腾讯云服务器；["Other"]之一非腾讯云服务器；</li>
        # <li>DockerStatus- string - 是否必填：否 - docker安装状态，"ALL":"全部"(或不传该字段),"INSTALL":"已安装","UNINSTALL":"未安装"</li>
        # <li>ProjectID- string - 是否必填：否 - 所属项目id搜索</li>
        # <li>Tag:xxx(tag:key)- string- 是否必填：否 - 标签键值搜索 示例Filters":[{"Name":"tag:tke-kind","Values":["service"]}]</li>
        # @type Filters: Array
        # @param Limit: 偏移量，默认为0。
        # @type Limit: Integer
        # @param Offset: 需要返回的数量，默认为10，最大值为10000
        # @type Offset: Integer
        # @param By: 排序字段
        # @type By: String
        # @param Order: 升序降序,asc desc
        # @type Order: String
        # @param ExportField: 导出字段
        # @type ExportField: Array

        attr_accessor :Filters, :Limit, :Offset, :By, :Order, :ExportField

        def initialize(filters=nil, limit=nil, offset=nil, by=nil, order=nil, exportfield=nil)
          @Filters = filters
          @Limit = limit
          @Offset = offset
          @By = by
          @Order = order
          @ExportField = exportfield
        end

        def deserialize(params)
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              assetfilters_tmp = AssetFilters.new
              assetfilters_tmp.deserialize(i)
              @Filters << assetfilters_tmp
            end
          end
          @Limit = params['Limit']
          @Offset = params['Offset']
          @By = params['By']
          @Order = params['Order']
          @ExportField = params['ExportField']
        end
      end

      # CreateHostExportJob返回参数结构体
      class CreateHostExportJobResponse < TencentCloud::Common::AbstractModel
        # @param JobId: 导出任务ID，前端拿着任务ID查询任务进度
        # @type JobId: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :JobId, :RequestId

        def initialize(jobid=nil, requestid=nil)
          @JobId = jobid
          @RequestId = requestid
        end

        def deserialize(params)
          @JobId = params['JobId']
          @RequestId = params['RequestId']
        end
      end

      # CreateImageExportJob请求参数结构体
      class CreateImageExportJobRequest < TencentCloud::Common::AbstractModel
        # @param Filters: 过滤条件。
        # <li>ImageName- String - 是否必填：否 - 镜像名称筛选，</li>
        # <li>ScanStatus - String - 是否必填：否 - 镜像扫描状态notScan，scanning，scanned，scanErr</li>
        # <li>ImageID- String - 是否必填：否 - 镜像ID筛选，</li>
        # <li>SecurityRisk- String - 是否必填：否 - 安全风险，VulCnt 、VirusCnt、RiskCnt、IsTrustImage</li>
        # @type Filters: Array
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param By: 排序字段
        # @type By: String
        # @param Order: 排序方式 asc,desc
        # @type Order: String
        # @param ExportField: 导出字段
        # @type ExportField: Array

        attr_accessor :Filters, :Offset, :Limit, :By, :Order, :ExportField

        def initialize(filters=nil, offset=nil, limit=nil, by=nil, order=nil, exportfield=nil)
          @Filters = filters
          @Offset = offset
          @Limit = limit
          @By = by
          @Order = order
          @ExportField = exportfield
        end

        def deserialize(params)
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              runtimefilters_tmp = RunTimeFilters.new
              runtimefilters_tmp.deserialize(i)
              @Filters << runtimefilters_tmp
            end
          end
          @Offset = params['Offset']
          @Limit = params['Limit']
          @By = params['By']
          @Order = params['Order']
          @ExportField = params['ExportField']
        end
      end

      # CreateImageExportJob返回参数结构体
      class CreateImageExportJobResponse < TencentCloud::Common::AbstractModel
        # @param JobId: 导出任务ID，前端拿着任务ID查询任务进度
        # @type JobId: String
        # @param DownloadUrl: excel文件下载地址
        # @type DownloadUrl: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :JobId, :DownloadUrl, :RequestId

        def initialize(jobid=nil, downloadurl=nil, requestid=nil)
          @JobId = jobid
          @DownloadUrl = downloadurl
          @RequestId = requestid
        end

        def deserialize(params)
          @JobId = params['JobId']
          @DownloadUrl = params['DownloadUrl']
          @RequestId = params['RequestId']
        end
      end

      # CreateK8sApiAbnormalEventExportJob请求参数结构体
      class CreateK8sApiAbnormalEventExportJobRequest < TencentCloud::Common::AbstractModel
        # @param Filters: 过滤条件。
        # <li>TimeRange - string -是否必填: 否 - 时间范围筛选 ["2022-03-31 16:55:00", "2022-03-31 17:00:00"]</li>
        # <li>MatchRules - string  - 是否必填: 否 -命中规则筛选</li>
        # <li>RiskLevel - string  - 是否必填: 否 -威胁等级筛选</li>
        # <li>Status - string  - 是否必填: 否 -事件状态筛选</li>
        # <li>MatchRuleType - string  - 是否必填: 否 -命中规则类型筛选</li>
        # <li>ClusterRunningStatus - string  - 是否必填: 否 -集群运行状态</li>
        # <li>ClusterName - string  - 是否必填: 否 -集群名称</li>
        # <li>ClusterID - string  - 是否必填: 否 -集群ID</li>
        # @type Filters: Array
        # @param Order: 排序方式
        # @type Order: String
        # @param By: 排序字段
        # @type By: String
        # @param ExportField: 导出字段
        # @type ExportField: Array

        attr_accessor :Filters, :Order, :By, :ExportField

        def initialize(filters=nil, order=nil, by=nil, exportfield=nil)
          @Filters = filters
          @Order = order
          @By = by
          @ExportField = exportfield
        end

        def deserialize(params)
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              runtimefilters_tmp = RunTimeFilters.new
              runtimefilters_tmp.deserialize(i)
              @Filters << runtimefilters_tmp
            end
          end
          @Order = params['Order']
          @By = params['By']
          @ExportField = params['ExportField']
        end
      end

      # CreateK8sApiAbnormalEventExportJob返回参数结构体
      class CreateK8sApiAbnormalEventExportJobResponse < TencentCloud::Common::AbstractModel
        # @param JobId: 导出任务ID，前端拿着任务ID查询任务进度
        # @type JobId: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :JobId, :RequestId

        def initialize(jobid=nil, requestid=nil)
          @JobId = jobid
          @RequestId = requestid
        end

        def deserialize(params)
          @JobId = params['JobId']
          @RequestId = params['RequestId']
        end
      end

      # CreateK8sApiAbnormalRuleExportJob请求参数结构体
      class CreateK8sApiAbnormalRuleExportJobRequest < TencentCloud::Common::AbstractModel
        # @param Filters: 过滤条件。
        # <li>RuleType - string  - 是否必填: 否 -规则类型</li>
        # <li>Status - string  - 是否必填: 否 -状态</li>
        # @type Filters: Array
        # @param Order: 排序方式
        # @type Order: String
        # @param By: 排序字段
        # @type By: Array
        # @param ExportField: 导出字段
        # @type ExportField: Array

        attr_accessor :Filters, :Order, :By, :ExportField

        def initialize(filters=nil, order=nil, by=nil, exportfield=nil)
          @Filters = filters
          @Order = order
          @By = by
          @ExportField = exportfield
        end

        def deserialize(params)
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              runtimefilters_tmp = RunTimeFilters.new
              runtimefilters_tmp.deserialize(i)
              @Filters << runtimefilters_tmp
            end
          end
          @Order = params['Order']
          @By = params['By']
          @ExportField = params['ExportField']
        end
      end

      # CreateK8sApiAbnormalRuleExportJob返回参数结构体
      class CreateK8sApiAbnormalRuleExportJobResponse < TencentCloud::Common::AbstractModel
        # @param JobId: 导出任务ID，前端拿着任务ID查询任务进度
        # @type JobId: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :JobId, :RequestId

        def initialize(jobid=nil, requestid=nil)
          @JobId = jobid
          @RequestId = requestid
        end

        def deserialize(params)
          @JobId = params['JobId']
          @RequestId = params['RequestId']
        end
      end

      # CreateK8sApiAbnormalRuleInfo请求参数结构体
      class CreateK8sApiAbnormalRuleInfoRequest < TencentCloud::Common::AbstractModel
        # @param RuleInfo: 规则详情
        # @type RuleInfo: :class:`Tencentcloud::Tcss.v20201101.models.K8sApiAbnormalRuleInfo`
        # @param CopySrcRuleID: 拷贝规则ID(适用于复制规则场景)
        # @type CopySrcRuleID: String
        # @param EventID: 事件ID(适用于事件加白场景)
        # @type EventID: Integer

        attr_accessor :RuleInfo, :CopySrcRuleID, :EventID

        def initialize(ruleinfo=nil, copysrcruleid=nil, eventid=nil)
          @RuleInfo = ruleinfo
          @CopySrcRuleID = copysrcruleid
          @EventID = eventid
        end

        def deserialize(params)
          unless params['RuleInfo'].nil?
            @RuleInfo = K8sApiAbnormalRuleInfo.new
            @RuleInfo.deserialize(params['RuleInfo'])
          end
          @CopySrcRuleID = params['CopySrcRuleID']
          @EventID = params['EventID']
        end
      end

      # CreateK8sApiAbnormalRuleInfo返回参数结构体
      class CreateK8sApiAbnormalRuleInfoResponse < TencentCloud::Common::AbstractModel
        # @param RuleID: 规则ID
        # @type RuleID: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RuleID, :RequestId

        def initialize(ruleid=nil, requestid=nil)
          @RuleID = ruleid
          @RequestId = requestid
        end

        def deserialize(params)
          @RuleID = params['RuleID']
          @RequestId = params['RequestId']
        end
      end

      # CreateNetworkFirewallClusterRefresh请求参数结构体
      class CreateNetworkFirewallClusterRefreshRequest < TencentCloud::Common::AbstractModel


        def initialize()
        end

        def deserialize(params)
        end
      end

      # CreateNetworkFirewallClusterRefresh返回参数结构体
      class CreateNetworkFirewallClusterRefreshResponse < TencentCloud::Common::AbstractModel
        # @param TaskId: 返回创建的集群检查任务的ID，为0表示创建失败。
        # @type TaskId: Integer
        # @param Result: 创建检查任务的结果，"Succ"为成功，"Failed"为失败
        # @type Result: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TaskId, :Result, :RequestId

        def initialize(taskid=nil, result=nil, requestid=nil)
          @TaskId = taskid
          @Result = result
          @RequestId = requestid
        end

        def deserialize(params)
          @TaskId = params['TaskId']
          @Result = params['Result']
          @RequestId = params['RequestId']
        end
      end

      # CreateNetworkFirewallPolicyDiscover请求参数结构体
      class CreateNetworkFirewallPolicyDiscoverRequest < TencentCloud::Common::AbstractModel
        # @param ClusterId: 集群Id
        # @type ClusterId: String

        attr_accessor :ClusterId

        def initialize(clusterid=nil)
          @ClusterId = clusterid
        end

        def deserialize(params)
          @ClusterId = params['ClusterId']
        end
      end

      # CreateNetworkFirewallPolicyDiscover返回参数结构体
      class CreateNetworkFirewallPolicyDiscoverResponse < TencentCloud::Common::AbstractModel
        # @param TaskId: 返回创建的集群检查任务的ID，为0表示创建失败。
        # @type TaskId: Integer
        # @param Result: 创建检查任务的结果，"Succ"为成功，"Failed"为失败
        # @type Result: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TaskId, :Result, :RequestId

        def initialize(taskid=nil, result=nil, requestid=nil)
          @TaskId = taskid
          @Result = result
          @RequestId = requestid
        end

        def deserialize(params)
          @TaskId = params['TaskId']
          @Result = params['Result']
          @RequestId = params['RequestId']
        end
      end

      # CreateNetworkFirewallPublish请求参数结构体
      class CreateNetworkFirewallPublishRequest < TencentCloud::Common::AbstractModel
        # @param ClusterId: 集群Id
        # @type ClusterId: String
        # @param Id: 策略Id数组
        # @type Id: Array

        attr_accessor :ClusterId, :Id

        def initialize(clusterid=nil, id=nil)
          @ClusterId = clusterid
          @Id = id
        end

        def deserialize(params)
          @ClusterId = params['ClusterId']
          @Id = params['Id']
        end
      end

      # CreateNetworkFirewallPublish返回参数结构体
      class CreateNetworkFirewallPublishResponse < TencentCloud::Common::AbstractModel
        # @param TaskId: 返回创建的任务的ID，为0表示创建失败。
        # @type TaskId: Integer
        # @param Result: 创建任务的结果，"Succ"为成功，"Failed"为失败
        # @type Result: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TaskId, :Result, :RequestId

        def initialize(taskid=nil, result=nil, requestid=nil)
          @TaskId = taskid
          @Result = result
          @RequestId = requestid
        end

        def deserialize(params)
          @TaskId = params['TaskId']
          @Result = params['Result']
          @RequestId = params['RequestId']
        end
      end

      # CreateNetworkFirewallUndoPublish请求参数结构体
      class CreateNetworkFirewallUndoPublishRequest < TencentCloud::Common::AbstractModel
        # @param ClusterId: 集群Id
        # @type ClusterId: String
        # @param Id: 策略Id数组
        # @type Id: Array

        attr_accessor :ClusterId, :Id

        def initialize(clusterid=nil, id=nil)
          @ClusterId = clusterid
          @Id = id
        end

        def deserialize(params)
          @ClusterId = params['ClusterId']
          @Id = params['Id']
        end
      end

      # CreateNetworkFirewallUndoPublish返回参数结构体
      class CreateNetworkFirewallUndoPublishResponse < TencentCloud::Common::AbstractModel
        # @param TaskId: 返回创建的任务的ID，为0表示创建失败。
        # @type TaskId: Integer
        # @param Result: 创建任务的结果，"Succ"为成功，"Failed"为失败
        # @type Result: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TaskId, :Result, :RequestId

        def initialize(taskid=nil, result=nil, requestid=nil)
          @TaskId = taskid
          @Result = result
          @RequestId = requestid
        end

        def deserialize(params)
          @TaskId = params['TaskId']
          @Result = params['Result']
          @RequestId = params['RequestId']
        end
      end

      # CreateOrModifyPostPayCores请求参数结构体
      class CreateOrModifyPostPayCoresRequest < TencentCloud::Common::AbstractModel
        # @param CoresCnt: 弹性计费上限，最小值500
        # @type CoresCnt: Integer

        attr_accessor :CoresCnt

        def initialize(corescnt=nil)
          @CoresCnt = corescnt
        end

        def deserialize(params)
          @CoresCnt = params['CoresCnt']
        end
      end

      # CreateOrModifyPostPayCores返回参数结构体
      class CreateOrModifyPostPayCoresResponse < TencentCloud::Common::AbstractModel
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RequestId

        def initialize(requestid=nil)
          @RequestId = requestid
        end

        def deserialize(params)
          @RequestId = params['RequestId']
        end
      end

      # CreateProcessEventsExportJob请求参数结构体
      class CreateProcessEventsExportJobRequest < TencentCloud::Common::AbstractModel
        # @param Limit: 需要返回的数量，最大值为10000
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Filters: 过滤参数,Status：EVENT_UNDEAL:未处理，EVENT_DEALED:已处理，EVENT_INGNORE:忽略
        # @type Filters: Array
        # @param Order: 升序降序,asc desc
        # @type Order: String
        # @param By: 排序字段：latest_found_time
        # @type By: String
        # @param ExportField: 导出字段
        # @type ExportField: Array

        attr_accessor :Limit, :Offset, :Filters, :Order, :By, :ExportField

        def initialize(limit=nil, offset=nil, filters=nil, order=nil, by=nil, exportfield=nil)
          @Limit = limit
          @Offset = offset
          @Filters = filters
          @Order = order
          @By = by
          @ExportField = exportfield
        end

        def deserialize(params)
          @Limit = params['Limit']
          @Offset = params['Offset']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              assetfilters_tmp = AssetFilters.new
              assetfilters_tmp.deserialize(i)
              @Filters << assetfilters_tmp
            end
          end
          @Order = params['Order']
          @By = params['By']
          @ExportField = params['ExportField']
        end
      end

      # CreateProcessEventsExportJob返回参数结构体
      class CreateProcessEventsExportJobResponse < TencentCloud::Common::AbstractModel
        # @param JobId: 导出任务ID，前端拿着任务ID查询任务进度
        # @type JobId: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :JobId, :RequestId

        def initialize(jobid=nil, requestid=nil)
          @JobId = jobid
          @RequestId = requestid
        end

        def deserialize(params)
          @JobId = params['JobId']
          @RequestId = params['RequestId']
        end
      end

      # CreateRefreshTask请求参数结构体
      class CreateRefreshTaskRequest < TencentCloud::Common::AbstractModel
        # @param ClusterIDs: 指定集群列表,若为空则标识同步所有集群
        # @type ClusterIDs: Array
        # @param IsSyncListOnly: 是否只同步列表
        # @type IsSyncListOnly: Boolean

        attr_accessor :ClusterIDs, :IsSyncListOnly

        def initialize(clusterids=nil, issynclistonly=nil)
          @ClusterIDs = clusterids
          @IsSyncListOnly = issynclistonly
        end

        def deserialize(params)
          @ClusterIDs = params['ClusterIDs']
          @IsSyncListOnly = params['IsSyncListOnly']
        end
      end

      # CreateRefreshTask返回参数结构体
      class CreateRefreshTaskResponse < TencentCloud::Common::AbstractModel
        # @param TaskId: 返回创建的集群检查任务的ID，为0表示创建失败。
        # @type TaskId: Integer
        # @param CreateResult: 创建检查任务的结果，"Succ"为成功，"Failed"为失败
        # @type CreateResult: String
        # @param NewTaskID: 返回创建的新集群检查任务ID
        # @type NewTaskID: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TaskId, :CreateResult, :NewTaskID, :RequestId

        def initialize(taskid=nil, createresult=nil, newtaskid=nil, requestid=nil)
          @TaskId = taskid
          @CreateResult = createresult
          @NewTaskID = newtaskid
          @RequestId = requestid
        end

        def deserialize(params)
          @TaskId = params['TaskId']
          @CreateResult = params['CreateResult']
          @NewTaskID = params['NewTaskID']
          @RequestId = params['RequestId']
        end
      end

      # CreateRiskDnsEventExportJob请求参数结构体
      class CreateRiskDnsEventExportJobRequest < TencentCloud::Common::AbstractModel
        # @param Filters: 过滤条件。
        # <li>EventStatus- String - 是否必填：否 - 事件状态，待处理：EVENT_UNDEAL，EVENT_DEALED：已处理，已忽略：EVENT_IGNORE， EVENT_ADD_WHITE：已加白</li>
        # <li>ContainerStatus- String - 是否必填：否 - 容器运行状态筛选，已创建：CREATED,正常运行：RUNNING, 暂定运行：PAUSED, 停止运行：	STOPPED，重启中：RESTARTING, 迁移中：REMOVING, 销毁：DESTROYED </li>
        # <li>ContainerNetStatus- String -是否必填: 否 -  容器网络状态筛选 未隔离：NORMAL，已隔离：ISOLATED，隔离失败：ISOLATE_FAILED，解除隔离失败：RESTORE_FAILED，解除隔离中：RESTORING，隔离中：ISOLATING</li>
        # <li>EventType - String -是否必填: 否 -  事件类型，恶意域名请求：DOMAIN，恶意IP请求：IP</li>
        # <li>TimeRange- String -是否必填: 否 -  时间范围，第一个值表示开始时间，第二个值表示结束时间 </li>
        # <li>RiskDns- string - 是否必填：否 - 恶意域名。</li>
        # <li>RiskIP- string - 是否必填：否 - 恶意IP。</li>
        # <li>ContainerName- string - 是否必填：否 - 容器名称。</li>
        # <li>ContainerID- string - 是否必填：否 - 容器ID。</li>
        # <li>ImageName- string - 是否必填：否 - 镜像名称。</li>
        # <li>ImageID- string - 是否必填：否 - 镜像ID。</li>
        # <li>HostName- string - 是否必填：否 - 主机名称。</li>
        # <li>HostIP- string - 是否必填：否 - 内网IP。</li>
        # <li>PublicIP- string - 是否必填：否 - 外网IP。</li>
        # @type Filters: Array
        # @param Limit: 需要返回的数量，最大值为100000
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Order: 排序方式：asc/desc
        # @type Order: String
        # @param By: 排序字段：事件数量：EventCount
        # @type By: String

        attr_accessor :Filters, :Limit, :Offset, :Order, :By

        def initialize(filters=nil, limit=nil, offset=nil, order=nil, by=nil)
          @Filters = filters
          @Limit = limit
          @Offset = offset
          @Order = order
          @By = by
        end

        def deserialize(params)
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              runtimefilters_tmp = RunTimeFilters.new
              runtimefilters_tmp.deserialize(i)
              @Filters << runtimefilters_tmp
            end
          end
          @Limit = params['Limit']
          @Offset = params['Offset']
          @Order = params['Order']
          @By = params['By']
        end
      end

      # CreateRiskDnsEventExportJob返回参数结构体
      class CreateRiskDnsEventExportJobResponse < TencentCloud::Common::AbstractModel
        # @param JobId: 导出任务ID，前端拿着任务ID查询任务进度
        # @type JobId: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :JobId, :RequestId

        def initialize(jobid=nil, requestid=nil)
          @JobId = jobid
          @RequestId = requestid
        end

        def deserialize(params)
          @JobId = params['JobId']
          @RequestId = params['RequestId']
        end
      end

      # CreateSearchTemplate请求参数结构体
      class CreateSearchTemplateRequest < TencentCloud::Common::AbstractModel
        # @param SearchTemplate: 搜索模板
        # @type SearchTemplate: :class:`Tencentcloud::Tcss.v20201101.models.SearchTemplate`

        attr_accessor :SearchTemplate

        def initialize(searchtemplate=nil)
          @SearchTemplate = searchtemplate
        end

        def deserialize(params)
          unless params['SearchTemplate'].nil?
            @SearchTemplate = SearchTemplate.new
            @SearchTemplate.deserialize(params['SearchTemplate'])
          end
        end
      end

      # CreateSearchTemplate返回参数结构体
      class CreateSearchTemplateResponse < TencentCloud::Common::AbstractModel
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RequestId

        def initialize(requestid=nil)
          @RequestId = requestid
        end

        def deserialize(params)
          @RequestId = params['RequestId']
        end
      end

      # CreateSystemVulExportJob请求参数结构体
      class CreateSystemVulExportJobRequest < TencentCloud::Common::AbstractModel
        # @param Limit: 需要返回的数量，默认为50000，最大值为50000
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Filters: 过滤条件。
        # <li>OnlyAffectedContainer- string - 是否必填：否 - 仅展示影响容器的漏洞true,false</li>
        # <li>OnlyAffectedNewestImage-string - 是否必填：否 - 仅展示影响最新版本镜像的漏洞true,false</li>
        # <li>Level- String - 是否必填：否 - 威胁等级，CRITICAL:严重 HIGH:高/MIDDLE:中/LOW:低</li>
        # <li>Tags- string - 是否必填：否 - 漏洞标签，POC，EXP。</li>
        # <li>CanBeFixed- string - 是否必填：否 - 是否可修复true,false。</li>
        # <li>CategoryType- string - 是否必填：否 - 漏洞子类型</li>
        # <li>CVEID- string - 是否必填：否 - CVE编号</li>
        # <li>ImageID- string - 是否必填：否 - 镜像ID</li>
        # <li>ImageName- String -是否必填: 否 - 镜像名称</li>
        # <li>ContainerID- string -是否必填: 否 - 容器ID</li>
        # <li>ContainerName- string -是否必填: 否 - 容器名称</li>
        # <li>ComponentName- string -是否必填: 否 - 组件名称</li>
        # <li>ComponentVersion- string -是否必填: 否 - 组件版本</li>
        # <li>Name- string -是否必填: 否 - 漏洞名称</li>
        # <li>FocusOnType - string - 是否必填：否 -关注紧急度类型 。ALL :全部，SERIOUS_LEVEL： 严重和高危 ，IS_SUGGEST： 重点关注，POC_EXP 有Poc或Exp ，NETWORK_EXP: 远程Exp</li>
        # @type Filters: Array
        # @param Order: 排序方式
        # @type Order: String
        # @param By: 排序字段
        # @type By: String

        attr_accessor :Limit, :Offset, :Filters, :Order, :By

        def initialize(limit=nil, offset=nil, filters=nil, order=nil, by=nil)
          @Limit = limit
          @Offset = offset
          @Filters = filters
          @Order = order
          @By = by
        end

        def deserialize(params)
          @Limit = params['Limit']
          @Offset = params['Offset']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              runtimefilters_tmp = RunTimeFilters.new
              runtimefilters_tmp.deserialize(i)
              @Filters << runtimefilters_tmp
            end
          end
          @Order = params['Order']
          @By = params['By']
        end
      end

      # CreateSystemVulExportJob返回参数结构体
      class CreateSystemVulExportJobResponse < TencentCloud::Common::AbstractModel
        # @param JobId: 导出任务ID，前端拿着任务ID查询任务进度
        # @type JobId: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :JobId, :RequestId

        def initialize(jobid=nil, requestid=nil)
          @JobId = jobid
          @RequestId = requestid
        end

        def deserialize(params)
          @JobId = params['JobId']
          @RequestId = params['RequestId']
        end
      end

      # CreateVirusScanAgain请求参数结构体
      class CreateVirusScanAgainRequest < TencentCloud::Common::AbstractModel
        # @param TaskId: 任务id
        # @type TaskId: String
        # @param ContainerIds: 需要扫描的容器id集合
        # @type ContainerIds: Array
        # @param TimeoutAll: 是否是扫描全部超时的
        # @type TimeoutAll: Boolean
        # @param Timeout: 重新设置的超时时长
        # @type Timeout: Integer

        attr_accessor :TaskId, :ContainerIds, :TimeoutAll, :Timeout

        def initialize(taskid=nil, containerids=nil, timeoutall=nil, timeout=nil)
          @TaskId = taskid
          @ContainerIds = containerids
          @TimeoutAll = timeoutall
          @Timeout = timeout
        end

        def deserialize(params)
          @TaskId = params['TaskId']
          @ContainerIds = params['ContainerIds']
          @TimeoutAll = params['TimeoutAll']
          @Timeout = params['Timeout']
        end
      end

      # CreateVirusScanAgain返回参数结构体
      class CreateVirusScanAgainResponse < TencentCloud::Common::AbstractModel
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RequestId

        def initialize(requestid=nil)
          @RequestId = requestid
        end

        def deserialize(params)
          @RequestId = params['RequestId']
        end
      end

      # CreateVirusScanTask请求参数结构体
      class CreateVirusScanTaskRequest < TencentCloud::Common::AbstractModel
        # @param ScanPathAll: 是否扫描所有路径
        # @type ScanPathAll: Boolean
        # @param ScanRangeType: 扫描范围0容器1主机节点
        # @type ScanRangeType: Integer
        # @param ScanRangeAll: true 全选，false 自选
        # @type ScanRangeAll: Boolean
        # @param Timeout: 超时时长，单位小时
        # @type Timeout: Integer
        # @param ScanPathType: 当ScanPathAll为false生效 0扫描以下路径 1、扫描除以下路径
        # @type ScanPathType: Integer
        # @param ScanIds: 自选扫描范围的容器id或者主机id 根据ScanRangeType决定
        # @type ScanIds: Array
        # @param ScanPath: 自选排除或扫描的地址
        # @type ScanPath: Array
        # @param ScanPathMode: 扫描路径模式：
        # SCAN_PATH_ALL：全部路径
        # SCAN_PATH_DEFAULT：默认路径
        # SCAN_PATH_USER_DEFINE：用户自定义路径
        # @type ScanPathMode: String

        attr_accessor :ScanPathAll, :ScanRangeType, :ScanRangeAll, :Timeout, :ScanPathType, :ScanIds, :ScanPath, :ScanPathMode

        def initialize(scanpathall=nil, scanrangetype=nil, scanrangeall=nil, timeout=nil, scanpathtype=nil, scanids=nil, scanpath=nil, scanpathmode=nil)
          @ScanPathAll = scanpathall
          @ScanRangeType = scanrangetype
          @ScanRangeAll = scanrangeall
          @Timeout = timeout
          @ScanPathType = scanpathtype
          @ScanIds = scanids
          @ScanPath = scanpath
          @ScanPathMode = scanpathmode
        end

        def deserialize(params)
          @ScanPathAll = params['ScanPathAll']
          @ScanRangeType = params['ScanRangeType']
          @ScanRangeAll = params['ScanRangeAll']
          @Timeout = params['Timeout']
          @ScanPathType = params['ScanPathType']
          @ScanIds = params['ScanIds']
          @ScanPath = params['ScanPath']
          @ScanPathMode = params['ScanPathMode']
        end
      end

      # CreateVirusScanTask返回参数结构体
      class CreateVirusScanTaskResponse < TencentCloud::Common::AbstractModel
        # @param TaskID: 任务id
        # @type TaskID: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TaskID, :RequestId

        def initialize(taskid=nil, requestid=nil)
          @TaskID = taskid
          @RequestId = requestid
        end

        def deserialize(params)
          @TaskID = params['TaskID']
          @RequestId = params['RequestId']
        end
      end

      # CreateVulContainerExportJob请求参数结构体
      class CreateVulContainerExportJobRequest < TencentCloud::Common::AbstractModel
        # @param PocID: 漏洞PocID
        # @type PocID: String
        # @param Limit: 需要返回的数量，默认为50000，最大值为50000
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Filters: 过滤条件。
        # <li>OnlyAffectedNewestImage- Bool- 是否必填：否 - 仅展示影响最新版本镜像的漏洞</li>
        # <li>ContainerID- string - 是否必填：否 - 容器ID</li>
        # <li>ContainerName- String -是否必填: 否 - 容器名称</li>
        # @type Filters: Array

        attr_accessor :PocID, :Limit, :Offset, :Filters

        def initialize(pocid=nil, limit=nil, offset=nil, filters=nil)
          @PocID = pocid
          @Limit = limit
          @Offset = offset
          @Filters = filters
        end

        def deserialize(params)
          @PocID = params['PocID']
          @Limit = params['Limit']
          @Offset = params['Offset']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              runtimefilters_tmp = RunTimeFilters.new
              runtimefilters_tmp.deserialize(i)
              @Filters << runtimefilters_tmp
            end
          end
        end
      end

      # CreateVulContainerExportJob返回参数结构体
      class CreateVulContainerExportJobResponse < TencentCloud::Common::AbstractModel
        # @param JobId: 导出任务ID，前端拿着任务ID查询任务进度
        # @type JobId: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :JobId, :RequestId

        def initialize(jobid=nil, requestid=nil)
          @JobId = jobid
          @RequestId = requestid
        end

        def deserialize(params)
          @JobId = params['JobId']
          @RequestId = params['RequestId']
        end
      end

      # CreateVulDefenceEventExportJob请求参数结构体
      class CreateVulDefenceEventExportJobRequest < TencentCloud::Common::AbstractModel
        # @param Filters: 过滤条件。
        # <li>Status- String - 是否必填：否 - 插件状态，待处理：EVENT_UNDEAL，EVENT_DEALED：已处理，已忽略：EVENT_IGNORE， EVENT_DEFENDED：已防御</li>
        # <li>ContainerStatus- String - 是否必填：否 - 容器运行状态筛选，已创建：CREATED,正常运行：RUNNING, 暂定运行：PAUSED, 停止运行：	STOPPED，重启中：RESTARTING, 迁移中：REMOVING, 销毁：DESTROYED </li>
        # <li>ContainerNetStatus- String -是否必填: 否 -  容器网络状态筛选 未隔离：NORMAL，已隔离：ISOLATED，隔离失败：ISOLATE_FAILED，解除隔离失败：RESTORE_FAILED，解除隔离中：RESTORING，隔离中：ISOLATING</li>
        # <li>EventType - String -是否必填: 否 -  入侵状态，防御成功：EVENT_DEFENDED，尝试攻击：EVENT_ATTACK </li>
        # <li>TimeRange- String -是否必填: 否 -  时间范围，第一个值表示开始时间，第二个值表示结束时间 </li>
        # <li>VulName- string - 是否必填：否 - 漏洞名称。</li>
        # <li>CVEID- string - 是否必填：否 - CVE编号。</li>
        # <li>SourceIP- string - 是否必填：否 - 攻击源IP。</li>
        # <li>ContainerName- string - 是否必填：否 - 容器名称。</li>
        # <li>ContainerID- string - 是否必填：否 - 容器ID。</li>
        # <li>ImageName- string - 是否必填：否 - 镜像名称。</li>
        # <li>ImageID- string - 是否必填：否 - 镜像ID。</li>
        # <li>HostName- string - 是否必填：否 - 主机名称。</li>
        # <li>HostIP- string - 是否必填：否 - 内网IP。</li>
        # @type Filters: Array
        # @param Limit: 需要返回的数量，最大值为100000
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Order: 排序方式：asc/desc
        # @type Order: String
        # @param By: 排序字段：事件数量：EventCount
        # @type By: String

        attr_accessor :Filters, :Limit, :Offset, :Order, :By

        def initialize(filters=nil, limit=nil, offset=nil, order=nil, by=nil)
          @Filters = filters
          @Limit = limit
          @Offset = offset
          @Order = order
          @By = by
        end

        def deserialize(params)
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              runtimefilters_tmp = RunTimeFilters.new
              runtimefilters_tmp.deserialize(i)
              @Filters << runtimefilters_tmp
            end
          end
          @Limit = params['Limit']
          @Offset = params['Offset']
          @Order = params['Order']
          @By = params['By']
        end
      end

      # CreateVulDefenceEventExportJob返回参数结构体
      class CreateVulDefenceEventExportJobResponse < TencentCloud::Common::AbstractModel
        # @param JobId: 导出任务ID，前端拿着任务ID查询任务进度
        # @type JobId: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :JobId, :RequestId

        def initialize(jobid=nil, requestid=nil)
          @JobId = jobid
          @RequestId = requestid
        end

        def deserialize(params)
          @JobId = params['JobId']
          @RequestId = params['RequestId']
        end
      end

      # CreateVulDefenceHostExportJob请求参数结构体
      class CreateVulDefenceHostExportJobRequest < TencentCloud::Common::AbstractModel
        # @param Filters: 过滤条件。
        # <li>Status- String - 是否必填：否 - 插件状态，正常：SUCCESS，异常：FAIL， NO_DEFENCE:未防御</li>
        # <li>KeyWords- string - 是否必填：否 - 主机名称/IP。</li>
        # @type Filters: Array
        # @param Limit: 需要返回的数量，最大值为100000
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Order: 排序方式：asc/desc
        # @type Order: String
        # @param By: 排序字段：更新时间：ModifyTime/首次开启时间：CreateTime
        # @type By: String

        attr_accessor :Filters, :Limit, :Offset, :Order, :By

        def initialize(filters=nil, limit=nil, offset=nil, order=nil, by=nil)
          @Filters = filters
          @Limit = limit
          @Offset = offset
          @Order = order
          @By = by
        end

        def deserialize(params)
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              runtimefilters_tmp = RunTimeFilters.new
              runtimefilters_tmp.deserialize(i)
              @Filters << runtimefilters_tmp
            end
          end
          @Limit = params['Limit']
          @Offset = params['Offset']
          @Order = params['Order']
          @By = params['By']
        end
      end

      # CreateVulDefenceHostExportJob返回参数结构体
      class CreateVulDefenceHostExportJobResponse < TencentCloud::Common::AbstractModel
        # @param JobId: 导出任务ID，前端拿着任务ID查询任务进度
        # @type JobId: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :JobId, :RequestId

        def initialize(jobid=nil, requestid=nil)
          @JobId = jobid
          @RequestId = requestid
        end

        def deserialize(params)
          @JobId = params['JobId']
          @RequestId = params['RequestId']
        end
      end

      # CreateVulExportJob请求参数结构体
      class CreateVulExportJobRequest < TencentCloud::Common::AbstractModel
        # @param ImageID: 镜像ID
        # @type ImageID: String
        # @param ExportField: 导出字段
        # @type ExportField: Array
        # @param Limit: 需要返回的数量，默认为10000，最大值为10000
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Filters: 过滤条件。
        # <li>ComponentName- String - 是否必填：否 - 镜像组件名称</li><li>ComponentVersion- String - 是否必填：否 - 镜像组件版本</li><li>ComponentType- String - 是否必填：否 - 镜像组件类型</li><li>VulLevel- String - 是否必填：否 - 漏洞威胁等级</li><li>HasVul- String - 是否必填：否 -是否有漏洞；true：是，false，否；不传或ALL ：全部</li>
        # @type Filters: Array
        # @param By: 排序字段
        # @type By: String
        # @param Order: 排序方式desc ，asc
        # @type Order: String

        attr_accessor :ImageID, :ExportField, :Limit, :Offset, :Filters, :By, :Order

        def initialize(imageid=nil, exportfield=nil, limit=nil, offset=nil, filters=nil, by=nil, order=nil)
          @ImageID = imageid
          @ExportField = exportfield
          @Limit = limit
          @Offset = offset
          @Filters = filters
          @By = by
          @Order = order
        end

        def deserialize(params)
          @ImageID = params['ImageID']
          @ExportField = params['ExportField']
          @Limit = params['Limit']
          @Offset = params['Offset']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              assetfilters_tmp = AssetFilters.new
              assetfilters_tmp.deserialize(i)
              @Filters << assetfilters_tmp
            end
          end
          @By = params['By']
          @Order = params['Order']
        end
      end

      # CreateVulExportJob返回参数结构体
      class CreateVulExportJobResponse < TencentCloud::Common::AbstractModel
        # @param JobId: 导出任务ID，前端拿着任务ID查询任务进度
        # @type JobId: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :JobId, :RequestId

        def initialize(jobid=nil, requestid=nil)
          @JobId = jobid
          @RequestId = requestid
        end

        def deserialize(params)
          @JobId = params['JobId']
          @RequestId = params['RequestId']
        end
      end

      # CreateVulImageExportJob请求参数结构体
      class CreateVulImageExportJobRequest < TencentCloud::Common::AbstractModel
        # @param PocID: 漏洞PocID
        # @type PocID: String
        # @param Limit: 需要返回的数量，默认为50000，最大值为50000
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Filters: 过滤条件。
        # <li>OnlyAffectedNewestImage- Bool- 是否必填：否 - 仅展示影响最新版本镜像的漏洞</li>
        # <li>ImageID- string - 是否必填：否 - 镜像ID</li>
        # <li>ImageName- String -是否必填: 否 - 镜像名称</li>
        # <li>ClientIP- string -是否必填: 否 - 内网IP</li>
        # <li>PublicIP- string -是否必填: 否 - 外网IP</li>
        # <li>ComponentName- string -是否必填: 否 - 组件名称</li>
        # <li>ComponentVersion- string -是否必填: 否 - 组件版本</li>
        # <li>HostName- string -是否必填: 否 - 主机名称</li>
        # @type Filters: Array
        # @param Order: 排序方式
        # @type Order: String
        # @param By: 排序字段
        # @type By: String

        attr_accessor :PocID, :Limit, :Offset, :Filters, :Order, :By

        def initialize(pocid=nil, limit=nil, offset=nil, filters=nil, order=nil, by=nil)
          @PocID = pocid
          @Limit = limit
          @Offset = offset
          @Filters = filters
          @Order = order
          @By = by
        end

        def deserialize(params)
          @PocID = params['PocID']
          @Limit = params['Limit']
          @Offset = params['Offset']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              runtimefilters_tmp = RunTimeFilters.new
              runtimefilters_tmp.deserialize(i)
              @Filters << runtimefilters_tmp
            end
          end
          @Order = params['Order']
          @By = params['By']
        end
      end

      # CreateVulImageExportJob返回参数结构体
      class CreateVulImageExportJobResponse < TencentCloud::Common::AbstractModel
        # @param JobId: 导出任务ID，前端拿着任务ID查询任务进度
        # @type JobId: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :JobId, :RequestId

        def initialize(jobid=nil, requestid=nil)
          @JobId = jobid
          @RequestId = requestid
        end

        def deserialize(params)
          @JobId = params['JobId']
          @RequestId = params['RequestId']
        end
      end

      # CreateVulScanTask请求参数结构体
      class CreateVulScanTaskRequest < TencentCloud::Common::AbstractModel
        # @param LocalImageScanType: 本地镜像扫描范围类型。ALL:全部本地镜像，NOT_SCAN：全部已授权未扫描本地镜像，IMAGEIDS:自选本地镜像ID
        # @type LocalImageScanType: String
        # @param LocalImageIDs: 根据已授权的本地镜像IDs扫描，优先权高于根据满足条件的已授权的本地镜像。
        # @type LocalImageIDs: Array
        # @param RegistryImageScanType: 仓库镜像扫描范围类型。ALL:全部仓库镜像，NOT_SCAN：全部已授权未扫描仓库镜像，IMAGEIDS:自选仓库镜像ID
        # @type RegistryImageScanType: String
        # @param RegistryImageIDs: 根据已授权的仓库镜像IDs扫描，优先权高于根据满足条件的已授权的仓库镜像。
        # @type RegistryImageIDs: Array
        # @param LocalTaskID: 本地镜像重新漏洞扫描时的任务ID
        # @type LocalTaskID: Integer
        # @param RegistryTaskID: 仓库镜像重新漏洞扫描时的任务ID
        # @type RegistryTaskID: Integer

        attr_accessor :LocalImageScanType, :LocalImageIDs, :RegistryImageScanType, :RegistryImageIDs, :LocalTaskID, :RegistryTaskID

        def initialize(localimagescantype=nil, localimageids=nil, registryimagescantype=nil, registryimageids=nil, localtaskid=nil, registrytaskid=nil)
          @LocalImageScanType = localimagescantype
          @LocalImageIDs = localimageids
          @RegistryImageScanType = registryimagescantype
          @RegistryImageIDs = registryimageids
          @LocalTaskID = localtaskid
          @RegistryTaskID = registrytaskid
        end

        def deserialize(params)
          @LocalImageScanType = params['LocalImageScanType']
          @LocalImageIDs = params['LocalImageIDs']
          @RegistryImageScanType = params['RegistryImageScanType']
          @RegistryImageIDs = params['RegistryImageIDs']
          @LocalTaskID = params['LocalTaskID']
          @RegistryTaskID = params['RegistryTaskID']
        end
      end

      # CreateVulScanTask返回参数结构体
      class CreateVulScanTaskResponse < TencentCloud::Common::AbstractModel
        # @param LocalTaskID: 本地镜像重新漏洞扫描时的任务ID
        # @type LocalTaskID: Integer
        # @param RegistryTaskID: 仓库镜像重新漏洞扫描时的任务ID
        # @type RegistryTaskID: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :LocalTaskID, :RegistryTaskID, :RequestId

        def initialize(localtaskid=nil, registrytaskid=nil, requestid=nil)
          @LocalTaskID = localtaskid
          @RegistryTaskID = registrytaskid
          @RequestId = requestid
        end

        def deserialize(params)
          @LocalTaskID = params['LocalTaskID']
          @RegistryTaskID = params['RegistryTaskID']
          @RequestId = params['RequestId']
        end
      end

      # CreateWebVulExportJob请求参数结构体
      class CreateWebVulExportJobRequest < TencentCloud::Common::AbstractModel
        # @param Limit: 需要返回的数量，默认为50000，最大值为50000
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Filters: 过滤条件。
        # <li>OnlyAffectedContainer- string - 是否必填：否 - 仅展示影响容器的漏洞true,false</li>
        # <li>OnlyAffectedNewestImage-string - 是否必填：否 - 仅展示影响最新版本镜像的漏洞true,false</li>
        # <li>Level- String - 是否必填：否 - 威胁等级，CRITICAL:严重 HIGH:高/MIDDLE:中/LOW:低</li>
        # <li>Tags- string - 是否必填：否 - 漏洞标签，POC，EXP。</li>
        # <li>CanBeFixed- string - 是否必填：否 - 是否可修复true,false。</li>
        # <li>CategoryType- string - 是否必填：否 - 漏洞子类型</li>
        # <li>CVEID- string - 是否必填：否 - CVE编号</li>
        # <li>ImageID- string - 是否必填：否 - 镜像ID</li>
        # <li>ImageName- String -是否必填: 否 - 镜像名称</li>
        # <li>ContainerID- string -是否必填: 否 - 容器ID</li>
        # <li>ContainerName- string -是否必填: 否 - 容器名称</li>
        # <li>ComponentName- string -是否必填: 否 - 组件名称</li>
        # <li>ComponentVersion- string -是否必填: 否 - 组件版本</li>
        # <li>Name- string -是否必填: 否 - 漏洞名称</li>
        # <li>FocusOnType - string - 是否必填：否 -关注紧急度类型 。ALL :全部，SERIOUS_LEVEL： 严重和高危 ，IS_SUGGEST： 重点关注，POC_EXP 有Poc或Exp ，NETWORK_EXP: 远程Exp</li>
        # @type Filters: Array
        # @param Order: 排序方式
        # @type Order: String
        # @param By: 排序字段
        # @type By: String

        attr_accessor :Limit, :Offset, :Filters, :Order, :By

        def initialize(limit=nil, offset=nil, filters=nil, order=nil, by=nil)
          @Limit = limit
          @Offset = offset
          @Filters = filters
          @Order = order
          @By = by
        end

        def deserialize(params)
          @Limit = params['Limit']
          @Offset = params['Offset']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              runtimefilters_tmp = RunTimeFilters.new
              runtimefilters_tmp.deserialize(i)
              @Filters << runtimefilters_tmp
            end
          end
          @Order = params['Order']
          @By = params['By']
        end
      end

      # CreateWebVulExportJob返回参数结构体
      class CreateWebVulExportJobResponse < TencentCloud::Common::AbstractModel
        # @param JobId: 导出任务ID，前端拿着任务ID查询任务进度
        # @type JobId: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :JobId, :RequestId

        def initialize(jobid=nil, requestid=nil)
          @JobId = jobid
          @RequestId = requestid
        end

        def deserialize(params)
          @JobId = params['JobId']
          @RequestId = params['RequestId']
        end
      end

      # DeleteAbnormalProcessRules请求参数结构体
      class DeleteAbnormalProcessRulesRequest < TencentCloud::Common::AbstractModel
        # @param RuleIdSet: 策略的ids
        # @type RuleIdSet: Array

        attr_accessor :RuleIdSet

        def initialize(ruleidset=nil)
          @RuleIdSet = ruleidset
        end

        def deserialize(params)
          @RuleIdSet = params['RuleIdSet']
        end
      end

      # DeleteAbnormalProcessRules返回参数结构体
      class DeleteAbnormalProcessRulesResponse < TencentCloud::Common::AbstractModel
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RequestId

        def initialize(requestid=nil)
          @RequestId = requestid
        end

        def deserialize(params)
          @RequestId = params['RequestId']
        end
      end

      # DeleteAccessControlRules请求参数结构体
      class DeleteAccessControlRulesRequest < TencentCloud::Common::AbstractModel
        # @param RuleIdSet: 策略的ids
        # @type RuleIdSet: Array

        attr_accessor :RuleIdSet

        def initialize(ruleidset=nil)
          @RuleIdSet = ruleidset
        end

        def deserialize(params)
          @RuleIdSet = params['RuleIdSet']
        end
      end

      # DeleteAccessControlRules返回参数结构体
      class DeleteAccessControlRulesResponse < TencentCloud::Common::AbstractModel
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RequestId

        def initialize(requestid=nil)
          @RequestId = requestid
        end

        def deserialize(params)
          @RequestId = params['RequestId']
        end
      end

      # DeleteComplianceAssetPolicySetFromWhitelist请求参数结构体
      class DeleteComplianceAssetPolicySetFromWhitelistRequest < TencentCloud::Common::AbstractModel
        # @param AssetItemId: 资产ID
        # @type AssetItemId: Integer
        # @param CustomerPolicyItemIdSet: 需要忽略指定资产内的检查项ID列表
        # @type CustomerPolicyItemIdSet: Array
        # @param AssetType: 扫描资产类型 <li>ASSET_CONTAINER Docker容器</li> <li>ASSET_IMAGE Docker镜像</li> <li>ASSET_HOST Docker主机</li> <li>ASSET_K8S Kubernetes</li> <li>ASSET_CONTAINERD Containerd主机</li> <li>ASSET_CONTAINERD_CONTAINER Containerd容器</li>
        # @type AssetType: String

        attr_accessor :AssetItemId, :CustomerPolicyItemIdSet, :AssetType

        def initialize(assetitemid=nil, customerpolicyitemidset=nil, assettype=nil)
          @AssetItemId = assetitemid
          @CustomerPolicyItemIdSet = customerpolicyitemidset
          @AssetType = assettype
        end

        def deserialize(params)
          @AssetItemId = params['AssetItemId']
          @CustomerPolicyItemIdSet = params['CustomerPolicyItemIdSet']
          @AssetType = params['AssetType']
        end
      end

      # DeleteComplianceAssetPolicySetFromWhitelist返回参数结构体
      class DeleteComplianceAssetPolicySetFromWhitelistResponse < TencentCloud::Common::AbstractModel
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RequestId

        def initialize(requestid=nil)
          @RequestId = requestid
        end

        def deserialize(params)
          @RequestId = params['RequestId']
        end
      end

      # DeleteCompliancePolicyAssetSetFromWhitelist请求参数结构体
      class DeleteCompliancePolicyAssetSetFromWhitelistRequest < TencentCloud::Common::AbstractModel
        # @param PolicyAssetSetList: （检查项ID+资产ID列表）的列表
        # @type PolicyAssetSetList: Array

        attr_accessor :PolicyAssetSetList

        def initialize(policyassetsetlist=nil)
          @PolicyAssetSetList = policyassetsetlist
        end

        def deserialize(params)
          unless params['PolicyAssetSetList'].nil?
            @PolicyAssetSetList = []
            params['PolicyAssetSetList'].each do |i|
              compliancepolicyassetsetitem_tmp = CompliancePolicyAssetSetItem.new
              compliancepolicyassetsetitem_tmp.deserialize(i)
              @PolicyAssetSetList << compliancepolicyassetsetitem_tmp
            end
          end
        end
      end

      # DeleteCompliancePolicyAssetSetFromWhitelist返回参数结构体
      class DeleteCompliancePolicyAssetSetFromWhitelistResponse < TencentCloud::Common::AbstractModel
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RequestId

        def initialize(requestid=nil)
          @RequestId = requestid
        end

        def deserialize(params)
          @RequestId = params['RequestId']
        end
      end

      # DeleteCompliancePolicyItemFromWhitelist请求参数结构体
      class DeleteCompliancePolicyItemFromWhitelistRequest < TencentCloud::Common::AbstractModel
        # @param WhitelistIdSet: 指定的白名单项的ID的列表
        # @type WhitelistIdSet: Array

        attr_accessor :WhitelistIdSet

        def initialize(whitelistidset=nil)
          @WhitelistIdSet = whitelistidset
        end

        def deserialize(params)
          @WhitelistIdSet = params['WhitelistIdSet']
        end
      end

      # DeleteCompliancePolicyItemFromWhitelist返回参数结构体
      class DeleteCompliancePolicyItemFromWhitelistResponse < TencentCloud::Common::AbstractModel
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RequestId

        def initialize(requestid=nil)
          @RequestId = requestid
        end

        def deserialize(params)
          @RequestId = params['RequestId']
        end
      end

      # DeleteEscapeWhiteList请求参数结构体
      class DeleteEscapeWhiteListRequest < TencentCloud::Common::AbstractModel
        # @param IDSet: 白名单记录ID数组
        # @type IDSet: Array

        attr_accessor :IDSet

        def initialize(idset=nil)
          @IDSet = idset
        end

        def deserialize(params)
          @IDSet = params['IDSet']
        end
      end

      # DeleteEscapeWhiteList返回参数结构体
      class DeleteEscapeWhiteListResponse < TencentCloud::Common::AbstractModel
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RequestId

        def initialize(requestid=nil)
          @RequestId = requestid
        end

        def deserialize(params)
          @RequestId = params['RequestId']
        end
      end

      # DeleteIgnoreVul请求参数结构体
      class DeleteIgnoreVulRequest < TencentCloud::Common::AbstractModel
        # @param List: 漏洞PocID 信息列表
        # @type List: Array

        attr_accessor :List

        def initialize(list=nil)
          @List = list
        end

        def deserialize(params)
          unless params['List'].nil?
            @List = []
            params['List'].each do |i|
              modifyignorevul_tmp = ModifyIgnoreVul.new
              modifyignorevul_tmp.deserialize(i)
              @List << modifyignorevul_tmp
            end
          end
        end
      end

      # DeleteIgnoreVul返回参数结构体
      class DeleteIgnoreVulResponse < TencentCloud::Common::AbstractModel
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RequestId

        def initialize(requestid=nil)
          @RequestId = requestid
        end

        def deserialize(params)
          @RequestId = params['RequestId']
        end
      end

      # DeleteK8sApiAbnormalRule请求参数结构体
      class DeleteK8sApiAbnormalRuleRequest < TencentCloud::Common::AbstractModel
        # @param RuleIDSet: 规则ID集合
        # @type RuleIDSet: Array

        attr_accessor :RuleIDSet

        def initialize(ruleidset=nil)
          @RuleIDSet = ruleidset
        end

        def deserialize(params)
          @RuleIDSet = params['RuleIDSet']
        end
      end

      # DeleteK8sApiAbnormalRule返回参数结构体
      class DeleteK8sApiAbnormalRuleResponse < TencentCloud::Common::AbstractModel
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RequestId

        def initialize(requestid=nil)
          @RequestId = requestid
        end

        def deserialize(params)
          @RequestId = params['RequestId']
        end
      end

      # DeleteMachine请求参数结构体
      class DeleteMachineRequest < TencentCloud::Common::AbstractModel
        # @param Uuid: 客户端Uuid
        # @type Uuid: String

        attr_accessor :Uuid

        def initialize(uuid=nil)
          @Uuid = uuid
        end

        def deserialize(params)
          @Uuid = params['Uuid']
        end
      end

      # DeleteMachine返回参数结构体
      class DeleteMachineResponse < TencentCloud::Common::AbstractModel
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RequestId

        def initialize(requestid=nil)
          @RequestId = requestid
        end

        def deserialize(params)
          @RequestId = params['RequestId']
        end
      end

      # DeleteNetworkFirewallPolicyDetail请求参数结构体
      class DeleteNetworkFirewallPolicyDetailRequest < TencentCloud::Common::AbstractModel
        # @param ClusterId: 集群Id
        # @type ClusterId: String
        # @param Id: 策略Id数组
        # @type Id: Array

        attr_accessor :ClusterId, :Id

        def initialize(clusterid=nil, id=nil)
          @ClusterId = clusterid
          @Id = id
        end

        def deserialize(params)
          @ClusterId = params['ClusterId']
          @Id = params['Id']
        end
      end

      # DeleteNetworkFirewallPolicyDetail返回参数结构体
      class DeleteNetworkFirewallPolicyDetailResponse < TencentCloud::Common::AbstractModel
        # @param TaskId: 返回创建的任务的ID，为0表示创建失败。
        # @type TaskId: Integer
        # @param Result: 创建删除任务的结果，"Succ"为成功，"Failed"为失败
        # @type Result: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TaskId, :Result, :RequestId

        def initialize(taskid=nil, result=nil, requestid=nil)
          @TaskId = taskid
          @Result = result
          @RequestId = requestid
        end

        def deserialize(params)
          @TaskId = params['TaskId']
          @Result = params['Result']
          @RequestId = params['RequestId']
        end
      end

      # DeleteReverseShellEvents请求参数结构体
      class DeleteReverseShellEventsRequest < TencentCloud::Common::AbstractModel
        # @param EventIdSet: 事件ids
        # @type EventIdSet: Array

        attr_accessor :EventIdSet

        def initialize(eventidset=nil)
          @EventIdSet = eventidset
        end

        def deserialize(params)
          @EventIdSet = params['EventIdSet']
        end
      end

      # DeleteReverseShellEvents返回参数结构体
      class DeleteReverseShellEventsResponse < TencentCloud::Common::AbstractModel
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RequestId

        def initialize(requestid=nil)
          @RequestId = requestid
        end

        def deserialize(params)
          @RequestId = params['RequestId']
        end
      end

      # DeleteReverseShellWhiteLists请求参数结构体
      class DeleteReverseShellWhiteListsRequest < TencentCloud::Common::AbstractModel
        # @param WhiteListIdSet: 白名单ids
        # @type WhiteListIdSet: Array

        attr_accessor :WhiteListIdSet

        def initialize(whitelistidset=nil)
          @WhiteListIdSet = whitelistidset
        end

        def deserialize(params)
          @WhiteListIdSet = params['WhiteListIdSet']
        end
      end

      # DeleteReverseShellWhiteLists返回参数结构体
      class DeleteReverseShellWhiteListsResponse < TencentCloud::Common::AbstractModel
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RequestId

        def initialize(requestid=nil)
          @RequestId = requestid
        end

        def deserialize(params)
          @RequestId = params['RequestId']
        end
      end

      # DeleteRiskSyscallEvents请求参数结构体
      class DeleteRiskSyscallEventsRequest < TencentCloud::Common::AbstractModel
        # @param EventIdSet: 事件ids
        # @type EventIdSet: Array

        attr_accessor :EventIdSet

        def initialize(eventidset=nil)
          @EventIdSet = eventidset
        end

        def deserialize(params)
          @EventIdSet = params['EventIdSet']
        end
      end

      # DeleteRiskSyscallEvents返回参数结构体
      class DeleteRiskSyscallEventsResponse < TencentCloud::Common::AbstractModel
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RequestId

        def initialize(requestid=nil)
          @RequestId = requestid
        end

        def deserialize(params)
          @RequestId = params['RequestId']
        end
      end

      # DeleteRiskSyscallWhiteLists请求参数结构体
      class DeleteRiskSyscallWhiteListsRequest < TencentCloud::Common::AbstractModel
        # @param WhiteListIdSet: 白名单ids
        # @type WhiteListIdSet: Array

        attr_accessor :WhiteListIdSet

        def initialize(whitelistidset=nil)
          @WhiteListIdSet = whitelistidset
        end

        def deserialize(params)
          @WhiteListIdSet = params['WhiteListIdSet']
        end
      end

      # DeleteRiskSyscallWhiteLists返回参数结构体
      class DeleteRiskSyscallWhiteListsResponse < TencentCloud::Common::AbstractModel
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RequestId

        def initialize(requestid=nil)
          @RequestId = requestid
        end

        def deserialize(params)
          @RequestId = params['RequestId']
        end
      end

      # DeleteSearchTemplate请求参数结构体
      class DeleteSearchTemplateRequest < TencentCloud::Common::AbstractModel
        # @param Id: 模板ID
        # @type Id: Integer

        attr_accessor :Id

        def initialize(id=nil)
          @Id = id
        end

        def deserialize(params)
          @Id = params['Id']
        end
      end

      # DeleteSearchTemplate返回参数结构体
      class DeleteSearchTemplateResponse < TencentCloud::Common::AbstractModel
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RequestId

        def initialize(requestid=nil)
          @RequestId = requestid
        end

        def deserialize(params)
          @RequestId = params['RequestId']
        end
      end

      # DescribeABTestConfig请求参数结构体
      class DescribeABTestConfigRequest < TencentCloud::Common::AbstractModel
        # @param ProjectName: 灰度项目名称
        # @type ProjectName: String

        attr_accessor :ProjectName

        def initialize(projectname=nil)
          @ProjectName = projectname
        end

        def deserialize(params)
          @ProjectName = params['ProjectName']
        end
      end

      # DescribeABTestConfig返回参数结构体
      class DescribeABTestConfigResponse < TencentCloud::Common::AbstractModel
        # @param Config: 灰度项目配置
        # @type Config: Array
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :Config, :RequestId

        def initialize(config=nil, requestid=nil)
          @Config = config
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['Config'].nil?
            @Config = []
            params['Config'].each do |i|
              abtestconfig_tmp = ABTestConfig.new
              abtestconfig_tmp.deserialize(i)
              @Config << abtestconfig_tmp
            end
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeAbnormalProcessDetail请求参数结构体
      class DescribeAbnormalProcessDetailRequest < TencentCloud::Common::AbstractModel
        # @param EventId: 事件唯一id
        # @type EventId: String

        attr_accessor :EventId

        def initialize(eventid=nil)
          @EventId = eventid
        end

        def deserialize(params)
          @EventId = params['EventId']
        end
      end

      # DescribeAbnormalProcessDetail返回参数结构体
      class DescribeAbnormalProcessDetailResponse < TencentCloud::Common::AbstractModel
        # @param EventBaseInfo: 事件基本信息
        # @type EventBaseInfo: :class:`Tencentcloud::Tcss.v20201101.models.RunTimeEventBaseInfo`
        # @param ProcessInfo: 进程信息
        # @type ProcessInfo: :class:`Tencentcloud::Tcss.v20201101.models.ProcessDetailInfo`
        # @param ParentProcessInfo: 父进程信息
        # @type ParentProcessInfo: :class:`Tencentcloud::Tcss.v20201101.models.ProcessDetailBaseInfo`
        # @param EventDetail: 事件描述
        # @type EventDetail: :class:`Tencentcloud::Tcss.v20201101.models.AbnormalProcessEventDescription`
        # @param AncestorProcessInfo: 祖先进程信息
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type AncestorProcessInfo: :class:`Tencentcloud::Tcss.v20201101.models.ProcessBaseInfo`
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :EventBaseInfo, :ProcessInfo, :ParentProcessInfo, :EventDetail, :AncestorProcessInfo, :RequestId

        def initialize(eventbaseinfo=nil, processinfo=nil, parentprocessinfo=nil, eventdetail=nil, ancestorprocessinfo=nil, requestid=nil)
          @EventBaseInfo = eventbaseinfo
          @ProcessInfo = processinfo
          @ParentProcessInfo = parentprocessinfo
          @EventDetail = eventdetail
          @AncestorProcessInfo = ancestorprocessinfo
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['EventBaseInfo'].nil?
            @EventBaseInfo = RunTimeEventBaseInfo.new
            @EventBaseInfo.deserialize(params['EventBaseInfo'])
          end
          unless params['ProcessInfo'].nil?
            @ProcessInfo = ProcessDetailInfo.new
            @ProcessInfo.deserialize(params['ProcessInfo'])
          end
          unless params['ParentProcessInfo'].nil?
            @ParentProcessInfo = ProcessDetailBaseInfo.new
            @ParentProcessInfo.deserialize(params['ParentProcessInfo'])
          end
          unless params['EventDetail'].nil?
            @EventDetail = AbnormalProcessEventDescription.new
            @EventDetail.deserialize(params['EventDetail'])
          end
          unless params['AncestorProcessInfo'].nil?
            @AncestorProcessInfo = ProcessBaseInfo.new
            @AncestorProcessInfo.deserialize(params['AncestorProcessInfo'])
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeAbnormalProcessEventTendency请求参数结构体
      class DescribeAbnormalProcessEventTendencyRequest < TencentCloud::Common::AbstractModel
        # @param StartTime: 开始时间
        # @type StartTime: String
        # @param EndTime: 结束时间
        # @type EndTime: String

        attr_accessor :StartTime, :EndTime

        def initialize(starttime=nil, endtime=nil)
          @StartTime = starttime
          @EndTime = endtime
        end

        def deserialize(params)
          @StartTime = params['StartTime']
          @EndTime = params['EndTime']
        end
      end

      # DescribeAbnormalProcessEventTendency返回参数结构体
      class DescribeAbnormalProcessEventTendencyResponse < TencentCloud::Common::AbstractModel
        # @param List: 待处理异常进程事件趋势
        # @type List: Array
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :List, :RequestId

        def initialize(list=nil, requestid=nil)
          @List = list
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['List'].nil?
            @List = []
            params['List'].each do |i|
              abnormalprocesseventtendencyinfo_tmp = AbnormalProcessEventTendencyInfo.new
              abnormalprocesseventtendencyinfo_tmp.deserialize(i)
              @List << abnormalprocesseventtendencyinfo_tmp
            end
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeAbnormalProcessEventsExport请求参数结构体
      class DescribeAbnormalProcessEventsExportRequest < TencentCloud::Common::AbstractModel
        # @param ExportField: 导出字段
        # @type ExportField: Array
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Filters: 过滤参数,"Filters":[{"Name":"Status","Values":["2"]}]
        # @type Filters: Array
        # @param Order: 升序降序,asc desc
        # @type Order: String
        # @param By: 排序字段
        # @type By: String

        attr_accessor :ExportField, :Limit, :Offset, :Filters, :Order, :By

        def initialize(exportfield=nil, limit=nil, offset=nil, filters=nil, order=nil, by=nil)
          @ExportField = exportfield
          @Limit = limit
          @Offset = offset
          @Filters = filters
          @Order = order
          @By = by
        end

        def deserialize(params)
          @ExportField = params['ExportField']
          @Limit = params['Limit']
          @Offset = params['Offset']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              runtimefilters_tmp = RunTimeFilters.new
              runtimefilters_tmp.deserialize(i)
              @Filters << runtimefilters_tmp
            end
          end
          @Order = params['Order']
          @By = params['By']
        end
      end

      # DescribeAbnormalProcessEventsExport返回参数结构体
      class DescribeAbnormalProcessEventsExportResponse < TencentCloud::Common::AbstractModel
        # @param DownloadUrl: execle下载地址
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type DownloadUrl: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :DownloadUrl, :RequestId

        def initialize(downloadurl=nil, requestid=nil)
          @DownloadUrl = downloadurl
          @RequestId = requestid
        end

        def deserialize(params)
          @DownloadUrl = params['DownloadUrl']
          @RequestId = params['RequestId']
        end
      end

      # DescribeAbnormalProcessEvents请求参数结构体
      class DescribeAbnormalProcessEventsRequest < TencentCloud::Common::AbstractModel
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Filters: 过滤参数,"Filters":[{"Name":"Status","Values":["2"]}]
        # @type Filters: Array
        # @param Order: 升序降序,asc desc
        # @type Order: String
        # @param By: 排序字段
        # @type By: String

        attr_accessor :Limit, :Offset, :Filters, :Order, :By

        def initialize(limit=nil, offset=nil, filters=nil, order=nil, by=nil)
          @Limit = limit
          @Offset = offset
          @Filters = filters
          @Order = order
          @By = by
        end

        def deserialize(params)
          @Limit = params['Limit']
          @Offset = params['Offset']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              runtimefilters_tmp = RunTimeFilters.new
              runtimefilters_tmp.deserialize(i)
              @Filters << runtimefilters_tmp
            end
          end
          @Order = params['Order']
          @By = params['By']
        end
      end

      # DescribeAbnormalProcessEvents返回参数结构体
      class DescribeAbnormalProcessEventsResponse < TencentCloud::Common::AbstractModel
        # @param TotalCount: 事件总数量
        # @type TotalCount: Integer
        # @param EventSet: 异常进程数组
        # @type EventSet: Array
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TotalCount, :EventSet, :RequestId

        def initialize(totalcount=nil, eventset=nil, requestid=nil)
          @TotalCount = totalcount
          @EventSet = eventset
          @RequestId = requestid
        end

        def deserialize(params)
          @TotalCount = params['TotalCount']
          unless params['EventSet'].nil?
            @EventSet = []
            params['EventSet'].each do |i|
              abnormalprocesseventinfo_tmp = AbnormalProcessEventInfo.new
              abnormalprocesseventinfo_tmp.deserialize(i)
              @EventSet << abnormalprocesseventinfo_tmp
            end
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeAbnormalProcessLevelSummary请求参数结构体
      class DescribeAbnormalProcessLevelSummaryRequest < TencentCloud::Common::AbstractModel


        def initialize()
        end

        def deserialize(params)
        end
      end

      # DescribeAbnormalProcessLevelSummary返回参数结构体
      class DescribeAbnormalProcessLevelSummaryResponse < TencentCloud::Common::AbstractModel
        # @param HighLevelEventCount: 异常进程高危待处理事件数
        # @type HighLevelEventCount: Integer
        # @param MediumLevelEventCount: 异常进程中危待处理事件数
        # @type MediumLevelEventCount: Integer
        # @param LowLevelEventCount: 异常进程低危待处理事件数
        # @type LowLevelEventCount: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :HighLevelEventCount, :MediumLevelEventCount, :LowLevelEventCount, :RequestId

        def initialize(highleveleventcount=nil, mediumleveleventcount=nil, lowleveleventcount=nil, requestid=nil)
          @HighLevelEventCount = highleveleventcount
          @MediumLevelEventCount = mediumleveleventcount
          @LowLevelEventCount = lowleveleventcount
          @RequestId = requestid
        end

        def deserialize(params)
          @HighLevelEventCount = params['HighLevelEventCount']
          @MediumLevelEventCount = params['MediumLevelEventCount']
          @LowLevelEventCount = params['LowLevelEventCount']
          @RequestId = params['RequestId']
        end
      end

      # DescribeAbnormalProcessRuleDetail请求参数结构体
      class DescribeAbnormalProcessRuleDetailRequest < TencentCloud::Common::AbstractModel
        # @param RuleId: 策略唯一id
        # @type RuleId: String
        # @param ImageId: 镜像id, 在添加白名单的时候使用
        # @type ImageId: String
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer

        attr_accessor :RuleId, :ImageId, :Limit, :Offset

        def initialize(ruleid=nil, imageid=nil, limit=nil, offset=nil)
          @RuleId = ruleid
          @ImageId = imageid
          @Limit = limit
          @Offset = offset
        end

        def deserialize(params)
          @RuleId = params['RuleId']
          @ImageId = params['ImageId']
          @Limit = params['Limit']
          @Offset = params['Offset']
        end
      end

      # DescribeAbnormalProcessRuleDetail返回参数结构体
      class DescribeAbnormalProcessRuleDetailResponse < TencentCloud::Common::AbstractModel
        # @param RuleDetail: 异常进程策略详细信息
        # @type RuleDetail: :class:`Tencentcloud::Tcss.v20201101.models.AbnormalProcessRuleInfo`
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RuleDetail, :RequestId

        def initialize(ruledetail=nil, requestid=nil)
          @RuleDetail = ruledetail
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['RuleDetail'].nil?
            @RuleDetail = AbnormalProcessRuleInfo.new
            @RuleDetail.deserialize(params['RuleDetail'])
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeAbnormalProcessRulesExport请求参数结构体
      class DescribeAbnormalProcessRulesExportRequest < TencentCloud::Common::AbstractModel
        # @param ExportField: 导出字段
        # @type ExportField: Array
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Filters: 过滤参数,"Filters":[{"Name":"Status","Values":["2"]}]
        # @type Filters: Array
        # @param Order: 升序降序,asc desc
        # @type Order: String
        # @param By: 排序字段
        # @type By: String

        attr_accessor :ExportField, :Limit, :Offset, :Filters, :Order, :By

        def initialize(exportfield=nil, limit=nil, offset=nil, filters=nil, order=nil, by=nil)
          @ExportField = exportfield
          @Limit = limit
          @Offset = offset
          @Filters = filters
          @Order = order
          @By = by
        end

        def deserialize(params)
          @ExportField = params['ExportField']
          @Limit = params['Limit']
          @Offset = params['Offset']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              runtimefilters_tmp = RunTimeFilters.new
              runtimefilters_tmp.deserialize(i)
              @Filters << runtimefilters_tmp
            end
          end
          @Order = params['Order']
          @By = params['By']
        end
      end

      # DescribeAbnormalProcessRulesExport返回参数结构体
      class DescribeAbnormalProcessRulesExportResponse < TencentCloud::Common::AbstractModel
        # @param DownloadUrl: execle下载地址
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type DownloadUrl: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :DownloadUrl, :RequestId

        def initialize(downloadurl=nil, requestid=nil)
          @DownloadUrl = downloadurl
          @RequestId = requestid
        end

        def deserialize(params)
          @DownloadUrl = params['DownloadUrl']
          @RequestId = params['RequestId']
        end
      end

      # DescribeAbnormalProcessRules请求参数结构体
      class DescribeAbnormalProcessRulesRequest < TencentCloud::Common::AbstractModel
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Filters: 过滤参数,"Filters":[{"Name":"Status","Values":["2"]}]
        # @type Filters: Array
        # @param Order: 升序降序,asc desc
        # @type Order: String
        # @param By: 排序字段
        # @type By: String

        attr_accessor :Limit, :Offset, :Filters, :Order, :By

        def initialize(limit=nil, offset=nil, filters=nil, order=nil, by=nil)
          @Limit = limit
          @Offset = offset
          @Filters = filters
          @Order = order
          @By = by
        end

        def deserialize(params)
          @Limit = params['Limit']
          @Offset = params['Offset']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              runtimefilters_tmp = RunTimeFilters.new
              runtimefilters_tmp.deserialize(i)
              @Filters << runtimefilters_tmp
            end
          end
          @Order = params['Order']
          @By = params['By']
        end
      end

      # DescribeAbnormalProcessRules返回参数结构体
      class DescribeAbnormalProcessRulesResponse < TencentCloud::Common::AbstractModel
        # @param TotalCount: 事件总数量
        # @type TotalCount: Integer
        # @param RuleSet: 异常进程策略信息列表
        # @type RuleSet: Array
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TotalCount, :RuleSet, :RequestId

        def initialize(totalcount=nil, ruleset=nil, requestid=nil)
          @TotalCount = totalcount
          @RuleSet = ruleset
          @RequestId = requestid
        end

        def deserialize(params)
          @TotalCount = params['TotalCount']
          unless params['RuleSet'].nil?
            @RuleSet = []
            params['RuleSet'].each do |i|
              rulebaseinfo_tmp = RuleBaseInfo.new
              rulebaseinfo_tmp.deserialize(i)
              @RuleSet << rulebaseinfo_tmp
            end
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeAccessControlDetail请求参数结构体
      class DescribeAccessControlDetailRequest < TencentCloud::Common::AbstractModel
        # @param EventId: 事件唯一id
        # @type EventId: String

        attr_accessor :EventId

        def initialize(eventid=nil)
          @EventId = eventid
        end

        def deserialize(params)
          @EventId = params['EventId']
        end
      end

      # DescribeAccessControlDetail返回参数结构体
      class DescribeAccessControlDetailResponse < TencentCloud::Common::AbstractModel
        # @param EventBaseInfo: 事件基本信息
        # @type EventBaseInfo: :class:`Tencentcloud::Tcss.v20201101.models.RunTimeEventBaseInfo`
        # @param ProcessInfo: 进程信息
        # @type ProcessInfo: :class:`Tencentcloud::Tcss.v20201101.models.ProcessDetailInfo`
        # @param TamperedFileInfo: 被篡改信息
        # @type TamperedFileInfo: :class:`Tencentcloud::Tcss.v20201101.models.FileAttributeInfo`
        # @param EventDetail: 事件描述
        # @type EventDetail: :class:`Tencentcloud::Tcss.v20201101.models.AccessControlEventDescription`
        # @param ParentProcessInfo: 父进程信息
        # @type ParentProcessInfo: :class:`Tencentcloud::Tcss.v20201101.models.ProcessBaseInfo`
        # @param AncestorProcessInfo: 祖先进程信息
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type AncestorProcessInfo: :class:`Tencentcloud::Tcss.v20201101.models.ProcessBaseInfo`
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :EventBaseInfo, :ProcessInfo, :TamperedFileInfo, :EventDetail, :ParentProcessInfo, :AncestorProcessInfo, :RequestId

        def initialize(eventbaseinfo=nil, processinfo=nil, tamperedfileinfo=nil, eventdetail=nil, parentprocessinfo=nil, ancestorprocessinfo=nil, requestid=nil)
          @EventBaseInfo = eventbaseinfo
          @ProcessInfo = processinfo
          @TamperedFileInfo = tamperedfileinfo
          @EventDetail = eventdetail
          @ParentProcessInfo = parentprocessinfo
          @AncestorProcessInfo = ancestorprocessinfo
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['EventBaseInfo'].nil?
            @EventBaseInfo = RunTimeEventBaseInfo.new
            @EventBaseInfo.deserialize(params['EventBaseInfo'])
          end
          unless params['ProcessInfo'].nil?
            @ProcessInfo = ProcessDetailInfo.new
            @ProcessInfo.deserialize(params['ProcessInfo'])
          end
          unless params['TamperedFileInfo'].nil?
            @TamperedFileInfo = FileAttributeInfo.new
            @TamperedFileInfo.deserialize(params['TamperedFileInfo'])
          end
          unless params['EventDetail'].nil?
            @EventDetail = AccessControlEventDescription.new
            @EventDetail.deserialize(params['EventDetail'])
          end
          unless params['ParentProcessInfo'].nil?
            @ParentProcessInfo = ProcessBaseInfo.new
            @ParentProcessInfo.deserialize(params['ParentProcessInfo'])
          end
          unless params['AncestorProcessInfo'].nil?
            @AncestorProcessInfo = ProcessBaseInfo.new
            @AncestorProcessInfo.deserialize(params['AncestorProcessInfo'])
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeAccessControlEventsExport请求参数结构体
      class DescribeAccessControlEventsExportRequest < TencentCloud::Common::AbstractModel
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Filters: 过滤参数,"Filters":[{"Name":"Status","Values":["2"]}]
        # @type Filters: Array
        # @param Order: 升序降序,asc desc
        # @type Order: String
        # @param By: 排序字段
        # @type By: String
        # @param ExportField: 导出字段
        # @type ExportField: Array

        attr_accessor :Limit, :Offset, :Filters, :Order, :By, :ExportField

        def initialize(limit=nil, offset=nil, filters=nil, order=nil, by=nil, exportfield=nil)
          @Limit = limit
          @Offset = offset
          @Filters = filters
          @Order = order
          @By = by
          @ExportField = exportfield
        end

        def deserialize(params)
          @Limit = params['Limit']
          @Offset = params['Offset']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              runtimefilters_tmp = RunTimeFilters.new
              runtimefilters_tmp.deserialize(i)
              @Filters << runtimefilters_tmp
            end
          end
          @Order = params['Order']
          @By = params['By']
          @ExportField = params['ExportField']
        end
      end

      # DescribeAccessControlEventsExport返回参数结构体
      class DescribeAccessControlEventsExportResponse < TencentCloud::Common::AbstractModel
        # @param DownloadUrl: execle下载地址
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type DownloadUrl: String
        # @param JobId: 任务id
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type JobId: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :DownloadUrl, :JobId, :RequestId

        def initialize(downloadurl=nil, jobid=nil, requestid=nil)
          @DownloadUrl = downloadurl
          @JobId = jobid
          @RequestId = requestid
        end

        def deserialize(params)
          @DownloadUrl = params['DownloadUrl']
          @JobId = params['JobId']
          @RequestId = params['RequestId']
        end
      end

      # DescribeAccessControlEvents请求参数结构体
      class DescribeAccessControlEventsRequest < TencentCloud::Common::AbstractModel
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Filters: 过滤参数,"Filters":[{"Name":"Status","Values":["2"]}]
        # @type Filters: Array
        # @param Order: 升序降序,asc desc
        # @type Order: String
        # @param By: 排序字段
        # @type By: String

        attr_accessor :Limit, :Offset, :Filters, :Order, :By

        def initialize(limit=nil, offset=nil, filters=nil, order=nil, by=nil)
          @Limit = limit
          @Offset = offset
          @Filters = filters
          @Order = order
          @By = by
        end

        def deserialize(params)
          @Limit = params['Limit']
          @Offset = params['Offset']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              runtimefilters_tmp = RunTimeFilters.new
              runtimefilters_tmp.deserialize(i)
              @Filters << runtimefilters_tmp
            end
          end
          @Order = params['Order']
          @By = params['By']
        end
      end

      # DescribeAccessControlEvents返回参数结构体
      class DescribeAccessControlEventsResponse < TencentCloud::Common::AbstractModel
        # @param TotalCount: 事件总数量
        # @type TotalCount: Integer
        # @param EventSet: 访问控制事件数组
        # @type EventSet: Array
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TotalCount, :EventSet, :RequestId

        def initialize(totalcount=nil, eventset=nil, requestid=nil)
          @TotalCount = totalcount
          @EventSet = eventset
          @RequestId = requestid
        end

        def deserialize(params)
          @TotalCount = params['TotalCount']
          unless params['EventSet'].nil?
            @EventSet = []
            params['EventSet'].each do |i|
              accesscontroleventinfo_tmp = AccessControlEventInfo.new
              accesscontroleventinfo_tmp.deserialize(i)
              @EventSet << accesscontroleventinfo_tmp
            end
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeAccessControlRuleDetail请求参数结构体
      class DescribeAccessControlRuleDetailRequest < TencentCloud::Common::AbstractModel
        # @param RuleId: 策略唯一id
        # @type RuleId: String
        # @param ImageId: 镜像id, 仅仅在事件加白的时候使用
        # @type ImageId: String
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer

        attr_accessor :RuleId, :ImageId, :Limit, :Offset

        def initialize(ruleid=nil, imageid=nil, limit=nil, offset=nil)
          @RuleId = ruleid
          @ImageId = imageid
          @Limit = limit
          @Offset = offset
        end

        def deserialize(params)
          @RuleId = params['RuleId']
          @ImageId = params['ImageId']
          @Limit = params['Limit']
          @Offset = params['Offset']
        end
      end

      # DescribeAccessControlRuleDetail返回参数结构体
      class DescribeAccessControlRuleDetailResponse < TencentCloud::Common::AbstractModel
        # @param RuleDetail: 运行时策略详细信息
        # @type RuleDetail: :class:`Tencentcloud::Tcss.v20201101.models.AccessControlRuleInfo`
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RuleDetail, :RequestId

        def initialize(ruledetail=nil, requestid=nil)
          @RuleDetail = ruledetail
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['RuleDetail'].nil?
            @RuleDetail = AccessControlRuleInfo.new
            @RuleDetail.deserialize(params['RuleDetail'])
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeAccessControlRulesExport请求参数结构体
      class DescribeAccessControlRulesExportRequest < TencentCloud::Common::AbstractModel
        # @param ExportField: 导出字段
        # @type ExportField: Array
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Filters: 过滤参数,"Filters":[{"Name":"Status","Values":["2"]}]
        # @type Filters: Array
        # @param Order: 升序降序,asc desc
        # @type Order: String
        # @param By: 排序字段
        # @type By: String

        attr_accessor :ExportField, :Limit, :Offset, :Filters, :Order, :By

        def initialize(exportfield=nil, limit=nil, offset=nil, filters=nil, order=nil, by=nil)
          @ExportField = exportfield
          @Limit = limit
          @Offset = offset
          @Filters = filters
          @Order = order
          @By = by
        end

        def deserialize(params)
          @ExportField = params['ExportField']
          @Limit = params['Limit']
          @Offset = params['Offset']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              runtimefilters_tmp = RunTimeFilters.new
              runtimefilters_tmp.deserialize(i)
              @Filters << runtimefilters_tmp
            end
          end
          @Order = params['Order']
          @By = params['By']
        end
      end

      # DescribeAccessControlRulesExport返回参数结构体
      class DescribeAccessControlRulesExportResponse < TencentCloud::Common::AbstractModel
        # @param DownloadUrl: execle下载地址
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type DownloadUrl: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :DownloadUrl, :RequestId

        def initialize(downloadurl=nil, requestid=nil)
          @DownloadUrl = downloadurl
          @RequestId = requestid
        end

        def deserialize(params)
          @DownloadUrl = params['DownloadUrl']
          @RequestId = params['RequestId']
        end
      end

      # DescribeAccessControlRules请求参数结构体
      class DescribeAccessControlRulesRequest < TencentCloud::Common::AbstractModel
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Filters: 过滤参数,"Filters":[{"Name":"Status","Values":["2"]}]
        # @type Filters: Array
        # @param Order: 升序降序,asc desc
        # @type Order: String
        # @param By: 排序字段
        # @type By: String

        attr_accessor :Limit, :Offset, :Filters, :Order, :By

        def initialize(limit=nil, offset=nil, filters=nil, order=nil, by=nil)
          @Limit = limit
          @Offset = offset
          @Filters = filters
          @Order = order
          @By = by
        end

        def deserialize(params)
          @Limit = params['Limit']
          @Offset = params['Offset']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              runtimefilters_tmp = RunTimeFilters.new
              runtimefilters_tmp.deserialize(i)
              @Filters << runtimefilters_tmp
            end
          end
          @Order = params['Order']
          @By = params['By']
        end
      end

      # DescribeAccessControlRules返回参数结构体
      class DescribeAccessControlRulesResponse < TencentCloud::Common::AbstractModel
        # @param TotalCount: 事件总数量
        # @type TotalCount: Integer
        # @param RuleSet: 访问控制策略信息列表
        # @type RuleSet: Array
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TotalCount, :RuleSet, :RequestId

        def initialize(totalcount=nil, ruleset=nil, requestid=nil)
          @TotalCount = totalcount
          @RuleSet = ruleset
          @RequestId = requestid
        end

        def deserialize(params)
          @TotalCount = params['TotalCount']
          unless params['RuleSet'].nil?
            @RuleSet = []
            params['RuleSet'].each do |i|
              rulebaseinfo_tmp = RuleBaseInfo.new
              rulebaseinfo_tmp.deserialize(i)
              @RuleSet << rulebaseinfo_tmp
            end
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeAffectedClusterCount请求参数结构体
      class DescribeAffectedClusterCountRequest < TencentCloud::Common::AbstractModel


        def initialize()
        end

        def deserialize(params)
        end
      end

      # DescribeAffectedClusterCount返回参数结构体
      class DescribeAffectedClusterCountResponse < TencentCloud::Common::AbstractModel
        # @param SeriousRiskClusterCount: 严重风险的集群数量
        # @type SeriousRiskClusterCount: Integer
        # @param HighRiskClusterCount: 高危风险的集群数量
        # @type HighRiskClusterCount: Integer
        # @param MiddleRiskClusterCount: 中危风险的集群数量
        # @type MiddleRiskClusterCount: Integer
        # @param HintRiskClusterCount: 低危风险的集群数量
        # @type HintRiskClusterCount: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :SeriousRiskClusterCount, :HighRiskClusterCount, :MiddleRiskClusterCount, :HintRiskClusterCount, :RequestId

        def initialize(seriousriskclustercount=nil, highriskclustercount=nil, middleriskclustercount=nil, hintriskclustercount=nil, requestid=nil)
          @SeriousRiskClusterCount = seriousriskclustercount
          @HighRiskClusterCount = highriskclustercount
          @MiddleRiskClusterCount = middleriskclustercount
          @HintRiskClusterCount = hintriskclustercount
          @RequestId = requestid
        end

        def deserialize(params)
          @SeriousRiskClusterCount = params['SeriousRiskClusterCount']
          @HighRiskClusterCount = params['HighRiskClusterCount']
          @MiddleRiskClusterCount = params['MiddleRiskClusterCount']
          @HintRiskClusterCount = params['HintRiskClusterCount']
          @RequestId = params['RequestId']
        end
      end

      # DescribeAffectedNodeList请求参数结构体
      class DescribeAffectedNodeListRequest < TencentCloud::Common::AbstractModel
        # @param CheckItemId: 唯一的检测项的ID
        # @type CheckItemId: Integer
        # @param Offset: 偏移量
        # @type Offset: Integer
        # @param Limit: 每次查询的最大记录数量
        # @type Limit: Integer
        # @param Filters: Name - String
        # Name 可取值：ClusterName, ClusterId,InstanceId,PrivateIpAddresses
        # @type Filters: Array
        # @param By: 排序字段
        # @type By: String
        # @param Order: 排序方式 asc,desc
        # @type Order: String

        attr_accessor :CheckItemId, :Offset, :Limit, :Filters, :By, :Order

        def initialize(checkitemid=nil, offset=nil, limit=nil, filters=nil, by=nil, order=nil)
          @CheckItemId = checkitemid
          @Offset = offset
          @Limit = limit
          @Filters = filters
          @By = by
          @Order = order
        end

        def deserialize(params)
          @CheckItemId = params['CheckItemId']
          @Offset = params['Offset']
          @Limit = params['Limit']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              compliancefilters_tmp = ComplianceFilters.new
              compliancefilters_tmp.deserialize(i)
              @Filters << compliancefilters_tmp
            end
          end
          @By = params['By']
          @Order = params['Order']
        end
      end

      # DescribeAffectedNodeList返回参数结构体
      class DescribeAffectedNodeListResponse < TencentCloud::Common::AbstractModel
        # @param TotalCount: 受影响的节点总数
        # @type TotalCount: Integer
        # @param AffectedNodeList: 受影响的节点列表
        # @type AffectedNodeList: Array
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TotalCount, :AffectedNodeList, :RequestId

        def initialize(totalcount=nil, affectednodelist=nil, requestid=nil)
          @TotalCount = totalcount
          @AffectedNodeList = affectednodelist
          @RequestId = requestid
        end

        def deserialize(params)
          @TotalCount = params['TotalCount']
          unless params['AffectedNodeList'].nil?
            @AffectedNodeList = []
            params['AffectedNodeList'].each do |i|
              affectednodeitem_tmp = AffectedNodeItem.new
              affectednodeitem_tmp.deserialize(i)
              @AffectedNodeList << affectednodeitem_tmp
            end
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeAffectedWorkloadList请求参数结构体
      class DescribeAffectedWorkloadListRequest < TencentCloud::Common::AbstractModel
        # @param CheckItemId: 唯一的检测项的ID
        # @type CheckItemId: Integer
        # @param Offset: 偏移量
        # @type Offset: Integer
        # @param Limit: 每次查询的最大记录数量
        # @type Limit: Integer
        # @param Filters: Name - String
        # Name 可取值：WorkloadType,ClusterId
        # @type Filters: Array
        # @param By: 排序字段
        # @type By: String
        # @param Order: 排序方式 asc,desc
        # @type Order: String

        attr_accessor :CheckItemId, :Offset, :Limit, :Filters, :By, :Order

        def initialize(checkitemid=nil, offset=nil, limit=nil, filters=nil, by=nil, order=nil)
          @CheckItemId = checkitemid
          @Offset = offset
          @Limit = limit
          @Filters = filters
          @By = by
          @Order = order
        end

        def deserialize(params)
          @CheckItemId = params['CheckItemId']
          @Offset = params['Offset']
          @Limit = params['Limit']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              compliancefilters_tmp = ComplianceFilters.new
              compliancefilters_tmp.deserialize(i)
              @Filters << compliancefilters_tmp
            end
          end
          @By = params['By']
          @Order = params['Order']
        end
      end

      # DescribeAffectedWorkloadList返回参数结构体
      class DescribeAffectedWorkloadListResponse < TencentCloud::Common::AbstractModel
        # @param TotalCount: 受影响的workload列表数量
        # @type TotalCount: Integer
        # @param AffectedWorkloadList: 受影响的workload列表
        # @type AffectedWorkloadList: Array
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TotalCount, :AffectedWorkloadList, :RequestId

        def initialize(totalcount=nil, affectedworkloadlist=nil, requestid=nil)
          @TotalCount = totalcount
          @AffectedWorkloadList = affectedworkloadlist
          @RequestId = requestid
        end

        def deserialize(params)
          @TotalCount = params['TotalCount']
          unless params['AffectedWorkloadList'].nil?
            @AffectedWorkloadList = []
            params['AffectedWorkloadList'].each do |i|
              affectedworkloaditem_tmp = AffectedWorkloadItem.new
              affectedworkloaditem_tmp.deserialize(i)
              @AffectedWorkloadList << affectedworkloaditem_tmp
            end
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeAgentDaemonSetCmd请求参数结构体
      class DescribeAgentDaemonSetCmdRequest < TencentCloud::Common::AbstractModel
        # @param IsCloud: 是否是腾讯云
        # @type IsCloud: Boolean
        # @param NetType: 网络类型：basic-基础网络，private-VPC, public-公网，direct-专线
        # @type NetType: String
        # @param RegionCode: 地域标示, NetType=direct时必填
        # @type RegionCode: String
        # @param VpcId: VpcId, NetType=direct时必填
        # @type VpcId: String
        # @param ExpireDate: 命令有效期，非腾讯云时必填
        # @type ExpireDate: String
        # @param ClusterCustomParameters: 集群自定义参数
        # @type ClusterCustomParameters: Array

        attr_accessor :IsCloud, :NetType, :RegionCode, :VpcId, :ExpireDate, :ClusterCustomParameters

        def initialize(iscloud=nil, nettype=nil, regioncode=nil, vpcid=nil, expiredate=nil, clustercustomparameters=nil)
          @IsCloud = iscloud
          @NetType = nettype
          @RegionCode = regioncode
          @VpcId = vpcid
          @ExpireDate = expiredate
          @ClusterCustomParameters = clustercustomparameters
        end

        def deserialize(params)
          @IsCloud = params['IsCloud']
          @NetType = params['NetType']
          @RegionCode = params['RegionCode']
          @VpcId = params['VpcId']
          @ExpireDate = params['ExpireDate']
          unless params['ClusterCustomParameters'].nil?
            @ClusterCustomParameters = []
            params['ClusterCustomParameters'].each do |i|
              clustercustomparameters_tmp = ClusterCustomParameters.new
              clustercustomparameters_tmp.deserialize(i)
              @ClusterCustomParameters << clustercustomparameters_tmp
            end
          end
        end
      end

      # DescribeAgentDaemonSetCmd返回参数结构体
      class DescribeAgentDaemonSetCmdResponse < TencentCloud::Common::AbstractModel
        # @param Command: 安装命令
        # @type Command: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :Command, :RequestId

        def initialize(command=nil, requestid=nil)
          @Command = command
          @RequestId = requestid
        end

        def deserialize(params)
          @Command = params['Command']
          @RequestId = params['RequestId']
        end
      end

      # DescribeAgentInstallCommand请求参数结构体
      class DescribeAgentInstallCommandRequest < TencentCloud::Common::AbstractModel
        # @param IsCloud: 是否是腾讯云
        # @type IsCloud: Boolean
        # @param NetType: 网络类型：basic-基础网络，private-VPC, public-公网，direct-专线
        # @type NetType: String
        # @param RegionCode: 地域标示, NetType=direct时必填
        # @type RegionCode: String
        # @param VpcId: VpcId, NetType=direct时必填
        # @type VpcId: String
        # @param ExpireDate: 命令有效期，非腾讯云时必填
        # @type ExpireDate: String
        # @param TagIds: 标签ID列表，IsCloud=false时才会生效
        # @type TagIds: Array

        attr_accessor :IsCloud, :NetType, :RegionCode, :VpcId, :ExpireDate, :TagIds

        def initialize(iscloud=nil, nettype=nil, regioncode=nil, vpcid=nil, expiredate=nil, tagids=nil)
          @IsCloud = iscloud
          @NetType = nettype
          @RegionCode = regioncode
          @VpcId = vpcid
          @ExpireDate = expiredate
          @TagIds = tagids
        end

        def deserialize(params)
          @IsCloud = params['IsCloud']
          @NetType = params['NetType']
          @RegionCode = params['RegionCode']
          @VpcId = params['VpcId']
          @ExpireDate = params['ExpireDate']
          @TagIds = params['TagIds']
        end
      end

      # DescribeAgentInstallCommand返回参数结构体
      class DescribeAgentInstallCommandResponse < TencentCloud::Common::AbstractModel
        # @param LinuxCommand: linux系统安装命令
        # @type LinuxCommand: String
        # @param WindowsCommand: windows系统安装命令（windows2008及以上）
        # @type WindowsCommand: String
        # @param WindowsStepOne: windows系统安装命令第一步（windows2003）
        # @type WindowsStepOne: String
        # @param WindowsStepTwo: windows系统安装命令第二步（windows2003）
        # @type WindowsStepTwo: String
        # @param WindowsDownloadUrl: windows版agent下载链接
        # @type WindowsDownloadUrl: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :LinuxCommand, :WindowsCommand, :WindowsStepOne, :WindowsStepTwo, :WindowsDownloadUrl, :RequestId

        def initialize(linuxcommand=nil, windowscommand=nil, windowsstepone=nil, windowssteptwo=nil, windowsdownloadurl=nil, requestid=nil)
          @LinuxCommand = linuxcommand
          @WindowsCommand = windowscommand
          @WindowsStepOne = windowsstepone
          @WindowsStepTwo = windowssteptwo
          @WindowsDownloadUrl = windowsdownloadurl
          @RequestId = requestid
        end

        def deserialize(params)
          @LinuxCommand = params['LinuxCommand']
          @WindowsCommand = params['WindowsCommand']
          @WindowsStepOne = params['WindowsStepOne']
          @WindowsStepTwo = params['WindowsStepTwo']
          @WindowsDownloadUrl = params['WindowsDownloadUrl']
          @RequestId = params['RequestId']
        end
      end

      # DescribeAssetAppServiceList请求参数结构体
      class DescribeAssetAppServiceListRequest < TencentCloud::Common::AbstractModel
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Filters: 过滤条件。
        # <li>Keywords- String - 是否必填：否 - 模糊查询可选字段</li>
        # @type Filters: Array

        attr_accessor :Limit, :Offset, :Filters

        def initialize(limit=nil, offset=nil, filters=nil)
          @Limit = limit
          @Offset = offset
          @Filters = filters
        end

        def deserialize(params)
          @Limit = params['Limit']
          @Offset = params['Offset']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              assetfilters_tmp = AssetFilters.new
              assetfilters_tmp.deserialize(i)
              @Filters << assetfilters_tmp
            end
          end
        end
      end

      # DescribeAssetAppServiceList返回参数结构体
      class DescribeAssetAppServiceListResponse < TencentCloud::Common::AbstractModel
        # @param List: db服务列表
        # @type List: Array
        # @param TotalCount: 总数量
        # @type TotalCount: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :List, :TotalCount, :RequestId

        def initialize(list=nil, totalcount=nil, requestid=nil)
          @List = list
          @TotalCount = totalcount
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['List'].nil?
            @List = []
            params['List'].each do |i|
              serviceinfo_tmp = ServiceInfo.new
              serviceinfo_tmp.deserialize(i)
              @List << serviceinfo_tmp
            end
          end
          @TotalCount = params['TotalCount']
          @RequestId = params['RequestId']
        end
      end

      # DescribeAssetClusterList请求参数结构体
      class DescribeAssetClusterListRequest < TencentCloud::Common::AbstractModel
        # @param Filters: 过滤条件。
        # <li>ClusterID - string  - 是否必填: 否 -集群ID</li>
        # <li>ClusterName - string  - 是否必填: 否 -集群名称</li>
        # <li>Status - string  - 是否必填: 否 -集群状态</li>
        # @type Filters: Array
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Order: 排序方式
        # @type Order: String
        # @param By: 排序字段。
        # @type By: String

        attr_accessor :Filters, :Limit, :Offset, :Order, :By

        def initialize(filters=nil, limit=nil, offset=nil, order=nil, by=nil)
          @Filters = filters
          @Limit = limit
          @Offset = offset
          @Order = order
          @By = by
        end

        def deserialize(params)
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              runtimefilters_tmp = RunTimeFilters.new
              runtimefilters_tmp.deserialize(i)
              @Filters << runtimefilters_tmp
            end
          end
          @Limit = params['Limit']
          @Offset = params['Offset']
          @Order = params['Order']
          @By = params['By']
        end
      end

      # DescribeAssetClusterList返回参数结构体
      class DescribeAssetClusterListResponse < TencentCloud::Common::AbstractModel
        # @param List: 集群列表
        # @type List: Array
        # @param TotalCount: 总数量
        # @type TotalCount: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :List, :TotalCount, :RequestId

        def initialize(list=nil, totalcount=nil, requestid=nil)
          @List = list
          @TotalCount = totalcount
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['List'].nil?
            @List = []
            params['List'].each do |i|
              assetclusterlistitem_tmp = AssetClusterListItem.new
              assetclusterlistitem_tmp.deserialize(i)
              @List << assetclusterlistitem_tmp
            end
          end
          @TotalCount = params['TotalCount']
          @RequestId = params['RequestId']
        end
      end

      # DescribeAssetComponentList请求参数结构体
      class DescribeAssetComponentListRequest < TencentCloud::Common::AbstractModel
        # @param ContainerID: 容器id
        # @type ContainerID: String
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Filters: 过滤条件
        # @type Filters: Array

        attr_accessor :ContainerID, :Limit, :Offset, :Filters

        def initialize(containerid=nil, limit=nil, offset=nil, filters=nil)
          @ContainerID = containerid
          @Limit = limit
          @Offset = offset
          @Filters = filters
        end

        def deserialize(params)
          @ContainerID = params['ContainerID']
          @Limit = params['Limit']
          @Offset = params['Offset']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              assetfilters_tmp = AssetFilters.new
              assetfilters_tmp.deserialize(i)
              @Filters << assetfilters_tmp
            end
          end
        end
      end

      # DescribeAssetComponentList返回参数结构体
      class DescribeAssetComponentListResponse < TencentCloud::Common::AbstractModel
        # @param List: 组件列表
        # @type List: Array
        # @param TotalCount: 总数量
        # @type TotalCount: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :List, :TotalCount, :RequestId

        def initialize(list=nil, totalcount=nil, requestid=nil)
          @List = list
          @TotalCount = totalcount
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['List'].nil?
            @List = []
            params['List'].each do |i|
              componentinfo_tmp = ComponentInfo.new
              componentinfo_tmp.deserialize(i)
              @List << componentinfo_tmp
            end
          end
          @TotalCount = params['TotalCount']
          @RequestId = params['RequestId']
        end
      end

      # DescribeAssetContainerDetail请求参数结构体
      class DescribeAssetContainerDetailRequest < TencentCloud::Common::AbstractModel
        # @param ContainerId: 容器id
        # @type ContainerId: String

        attr_accessor :ContainerId

        def initialize(containerid=nil)
          @ContainerId = containerid
        end

        def deserialize(params)
          @ContainerId = params['ContainerId']
        end
      end

      # DescribeAssetContainerDetail返回参数结构体
      class DescribeAssetContainerDetailResponse < TencentCloud::Common::AbstractModel
        # @param HostID: 主机id
        # @type HostID: String
        # @param HostIP: 主机ip
        # @type HostIP: String
        # @param ContainerName: 容器名称
        # @type ContainerName: String
        # @param Status: 运行状态
        # @type Status: String
        # @param RunAs: 运行账户
        # @type RunAs: String
        # @param Cmd: 命令行
        # @type Cmd: String
        # @param CPUUsage: CPU使用率 * 1000
        # @type CPUUsage: Integer
        # @param RamUsage: 内存使用 KB
        # @type RamUsage: Integer
        # @param ImageName: 镜像名
        # @type ImageName: String
        # @param ImageID: 镜像ID
        # @type ImageID: String
        # @param POD: 归属POD
        # @type POD: String
        # @param K8sMaster: k8s 主节点
        # @type K8sMaster: String
        # @param ProcessCnt: 容器内进程数
        # @type ProcessCnt: Integer
        # @param PortCnt: 容器内端口数
        # @type PortCnt: Integer
        # @param ComponentCnt: 组件数
        # @type ComponentCnt: Integer
        # @param AppCnt: app数
        # @type AppCnt: Integer
        # @param WebServiceCnt: websvc数
        # @type WebServiceCnt: Integer
        # @param Mounts: 挂载
        # @type Mounts: Array
        # @param Network: 容器网络信息
        # @type Network: :class:`Tencentcloud::Tcss.v20201101.models.ContainerNetwork`
        # @param CreateTime: 创建时间
        # @type CreateTime: String
        # @param ImageCreateTime: 镜像创建时间
        # @type ImageCreateTime: String
        # @param ImageSize: 镜像大小
        # @type ImageSize: Integer
        # @param HostStatus: 主机状态 offline,online,pause
        # @type HostStatus: String
        # @param NetStatus: 网络状态
        # 未隔离  	NORMAL
        # 已隔离		ISOLATED
        # 隔离中		ISOLATING
        # 隔离失败	ISOLATE_FAILED
        # 解除隔离中  RESTORING
        # 解除隔离失败 RESTORE_FAILED
        # @type NetStatus: String
        # @param NetSubStatus: 网络子状态
        # @type NetSubStatus: String
        # @param IsolateSource: 隔离来源
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type IsolateSource: String
        # @param IsolateTime: 隔离时间
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type IsolateTime: String
        # @param NodeID: 节点ID
        # @type NodeID: String
        # @param NodeName: 节点名称
        # @type NodeName: String
        # @param NodeSubNetID: 节点子网ID
        # @type NodeSubNetID: String
        # @param NodeSubNetName: 节点子网名称
        # @type NodeSubNetName: String
        # @param NodeSubNetCIDR: 节点子网网段
        # @type NodeSubNetCIDR: String
        # @param PodName: pod名称
        # @type PodName: String
        # @param PodIP: pod ip
        # @type PodIP: String
        # @param PodStatus: pod状态
        # @type PodStatus: String
        # @param ClusterID: 集群ID
        # @type ClusterID: String
        # @param ClusterName: 集群名称
        # @type ClusterName: String
        # @param NodeType: 节点类型:NORMAL: 普通节点(默认值) SUPER: 超级节点
        # @type NodeType: String
        # @param NodeUniqueID: 超级节点唯一id
        # @type NodeUniqueID: String
        # @param PublicIP: 外网ip
        # @type PublicIP: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :HostID, :HostIP, :ContainerName, :Status, :RunAs, :Cmd, :CPUUsage, :RamUsage, :ImageName, :ImageID, :POD, :K8sMaster, :ProcessCnt, :PortCnt, :ComponentCnt, :AppCnt, :WebServiceCnt, :Mounts, :Network, :CreateTime, :ImageCreateTime, :ImageSize, :HostStatus, :NetStatus, :NetSubStatus, :IsolateSource, :IsolateTime, :NodeID, :NodeName, :NodeSubNetID, :NodeSubNetName, :NodeSubNetCIDR, :PodName, :PodIP, :PodStatus, :ClusterID, :ClusterName, :NodeType, :NodeUniqueID, :PublicIP, :RequestId

        def initialize(hostid=nil, hostip=nil, containername=nil, status=nil, runas=nil, cmd=nil, cpuusage=nil, ramusage=nil, imagename=nil, imageid=nil, pod=nil, k8smaster=nil, processcnt=nil, portcnt=nil, componentcnt=nil, appcnt=nil, webservicecnt=nil, mounts=nil, network=nil, createtime=nil, imagecreatetime=nil, imagesize=nil, hoststatus=nil, netstatus=nil, netsubstatus=nil, isolatesource=nil, isolatetime=nil, nodeid=nil, nodename=nil, nodesubnetid=nil, nodesubnetname=nil, nodesubnetcidr=nil, podname=nil, podip=nil, podstatus=nil, clusterid=nil, clustername=nil, nodetype=nil, nodeuniqueid=nil, publicip=nil, requestid=nil)
          @HostID = hostid
          @HostIP = hostip
          @ContainerName = containername
          @Status = status
          @RunAs = runas
          @Cmd = cmd
          @CPUUsage = cpuusage
          @RamUsage = ramusage
          @ImageName = imagename
          @ImageID = imageid
          @POD = pod
          @K8sMaster = k8smaster
          @ProcessCnt = processcnt
          @PortCnt = portcnt
          @ComponentCnt = componentcnt
          @AppCnt = appcnt
          @WebServiceCnt = webservicecnt
          @Mounts = mounts
          @Network = network
          @CreateTime = createtime
          @ImageCreateTime = imagecreatetime
          @ImageSize = imagesize
          @HostStatus = hoststatus
          @NetStatus = netstatus
          @NetSubStatus = netsubstatus
          @IsolateSource = isolatesource
          @IsolateTime = isolatetime
          @NodeID = nodeid
          @NodeName = nodename
          @NodeSubNetID = nodesubnetid
          @NodeSubNetName = nodesubnetname
          @NodeSubNetCIDR = nodesubnetcidr
          @PodName = podname
          @PodIP = podip
          @PodStatus = podstatus
          @ClusterID = clusterid
          @ClusterName = clustername
          @NodeType = nodetype
          @NodeUniqueID = nodeuniqueid
          @PublicIP = publicip
          @RequestId = requestid
        end

        def deserialize(params)
          @HostID = params['HostID']
          @HostIP = params['HostIP']
          @ContainerName = params['ContainerName']
          @Status = params['Status']
          @RunAs = params['RunAs']
          @Cmd = params['Cmd']
          @CPUUsage = params['CPUUsage']
          @RamUsage = params['RamUsage']
          @ImageName = params['ImageName']
          @ImageID = params['ImageID']
          @POD = params['POD']
          @K8sMaster = params['K8sMaster']
          @ProcessCnt = params['ProcessCnt']
          @PortCnt = params['PortCnt']
          @ComponentCnt = params['ComponentCnt']
          @AppCnt = params['AppCnt']
          @WebServiceCnt = params['WebServiceCnt']
          unless params['Mounts'].nil?
            @Mounts = []
            params['Mounts'].each do |i|
              containermount_tmp = ContainerMount.new
              containermount_tmp.deserialize(i)
              @Mounts << containermount_tmp
            end
          end
          unless params['Network'].nil?
            @Network = ContainerNetwork.new
            @Network.deserialize(params['Network'])
          end
          @CreateTime = params['CreateTime']
          @ImageCreateTime = params['ImageCreateTime']
          @ImageSize = params['ImageSize']
          @HostStatus = params['HostStatus']
          @NetStatus = params['NetStatus']
          @NetSubStatus = params['NetSubStatus']
          @IsolateSource = params['IsolateSource']
          @IsolateTime = params['IsolateTime']
          @NodeID = params['NodeID']
          @NodeName = params['NodeName']
          @NodeSubNetID = params['NodeSubNetID']
          @NodeSubNetName = params['NodeSubNetName']
          @NodeSubNetCIDR = params['NodeSubNetCIDR']
          @PodName = params['PodName']
          @PodIP = params['PodIP']
          @PodStatus = params['PodStatus']
          @ClusterID = params['ClusterID']
          @ClusterName = params['ClusterName']
          @NodeType = params['NodeType']
          @NodeUniqueID = params['NodeUniqueID']
          @PublicIP = params['PublicIP']
          @RequestId = params['RequestId']
        end
      end

      # DescribeAssetContainerList请求参数结构体
      class DescribeAssetContainerListRequest < TencentCloud::Common::AbstractModel
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Filters: 过滤条件。
        # <li>ContainerName - String - 是否必填：否 - 容器名称模糊搜索</li>
        # <li>Status - String - 是否必填：否 - 容器运行状态筛选，0："created",1："running", 2："paused", 3："restarting", 4："removing", 5："exited", 6："dead" </li>
        # <li>Runas - String - 是否必填：否 - 运行用户筛选</li>
        # <li>ImageName- String - 是否必填：否 - 镜像名称搜索</li>
        # <li>HostIP- string - 是否必填：否 - 主机ip搜索</li>
        # <li>OrderBy - String 是否必填：否 -排序字段，支持：cpu_usage, mem_usage的动态排序 ["cpu_usage","+"]  '+'升序、'-'降序</li>
        # <li>NetStatus - String -是否必填: 否 -  容器网络状态筛选 normal isolated isolating isolate_failed restoring restore_failed</li>
        # <li>PodID - String -是否必填: 否 - PodID筛选</li>
        # <li>NodeUniqueID - String -是否必填: 否 - SuperNode筛选</li>
        # <li>PodUid - String -是否必填: 否 - Pod筛选</li>
        # <li>PodIP - String -是否必填: 否 - PodIP筛选</li>
        # <li>NodeType - String -是否必填: 否 - 节点类型筛选:NORMAL:普通节点;SUPER:超级节点</li>
        # @type Filters: Array
        # @param By: 排序字段
        # @type By: String
        # @param Order: 排序方式 asc,desc
        # @type Order: String

        attr_accessor :Limit, :Offset, :Filters, :By, :Order

        def initialize(limit=nil, offset=nil, filters=nil, by=nil, order=nil)
          @Limit = limit
          @Offset = offset
          @Filters = filters
          @By = by
          @Order = order
        end

        def deserialize(params)
          @Limit = params['Limit']
          @Offset = params['Offset']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              assetfilters_tmp = AssetFilters.new
              assetfilters_tmp.deserialize(i)
              @Filters << assetfilters_tmp
            end
          end
          @By = params['By']
          @Order = params['Order']
        end
      end

      # DescribeAssetContainerList返回参数结构体
      class DescribeAssetContainerListResponse < TencentCloud::Common::AbstractModel
        # @param List: 容器列表
        # @type List: Array
        # @param TotalCount: 总数量
        # @type TotalCount: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :List, :TotalCount, :RequestId

        def initialize(list=nil, totalcount=nil, requestid=nil)
          @List = list
          @TotalCount = totalcount
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['List'].nil?
            @List = []
            params['List'].each do |i|
              containerinfo_tmp = ContainerInfo.new
              containerinfo_tmp.deserialize(i)
              @List << containerinfo_tmp
            end
          end
          @TotalCount = params['TotalCount']
          @RequestId = params['RequestId']
        end
      end

      # DescribeAssetDBServiceList请求参数结构体
      class DescribeAssetDBServiceListRequest < TencentCloud::Common::AbstractModel
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Filters: 过滤条件。
        # <li>Keywords- String - 是否必填：否 - 模糊查询可选字段</li>
        # @type Filters: Array

        attr_accessor :Limit, :Offset, :Filters

        def initialize(limit=nil, offset=nil, filters=nil)
          @Limit = limit
          @Offset = offset
          @Filters = filters
        end

        def deserialize(params)
          @Limit = params['Limit']
          @Offset = params['Offset']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              assetfilters_tmp = AssetFilters.new
              assetfilters_tmp.deserialize(i)
              @Filters << assetfilters_tmp
            end
          end
        end
      end

      # DescribeAssetDBServiceList返回参数结构体
      class DescribeAssetDBServiceListResponse < TencentCloud::Common::AbstractModel
        # @param List: db服务列表
        # @type List: Array
        # @param TotalCount: 总数量
        # @type TotalCount: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :List, :TotalCount, :RequestId

        def initialize(list=nil, totalcount=nil, requestid=nil)
          @List = list
          @TotalCount = totalcount
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['List'].nil?
            @List = []
            params['List'].each do |i|
              serviceinfo_tmp = ServiceInfo.new
              serviceinfo_tmp.deserialize(i)
              @List << serviceinfo_tmp
            end
          end
          @TotalCount = params['TotalCount']
          @RequestId = params['RequestId']
        end
      end

      # DescribeAssetHostDetail请求参数结构体
      class DescribeAssetHostDetailRequest < TencentCloud::Common::AbstractModel
        # @param HostId: 主机id
        # @type HostId: String

        attr_accessor :HostId

        def initialize(hostid=nil)
          @HostId = hostid
        end

        def deserialize(params)
          @HostId = params['HostId']
        end
      end

      # DescribeAssetHostDetail返回参数结构体
      class DescribeAssetHostDetailResponse < TencentCloud::Common::AbstractModel
        # @param UUID: 容器安全uuid
        # @type UUID: String
        # @param UpdateTime: 更新时间
        # @type UpdateTime: String
        # @param HostName: 主机名
        # @type HostName: String
        # @param Group: 主机分组
        # @type Group: String
        # @param HostIP: 主机IP
        # @type HostIP: String
        # @param OsName: 操作系统
        # @type OsName: String
        # @param AgentVersion: agent版本
        # @type AgentVersion: String
        # @param KernelVersion: 内核版本
        # @type KernelVersion: String
        # @param DockerVersion: docker版本
        # @type DockerVersion: String
        # @param DockerAPIVersion: docker api版本
        # @type DockerAPIVersion: String
        # @param DockerGoVersion: docker go 版本
        # @type DockerGoVersion: String
        # @param DockerFileSystemDriver: docker 文件系统类型
        # @type DockerFileSystemDriver: String
        # @param DockerRootDir: docker root 目录
        # @type DockerRootDir: String
        # @param ImageCnt: 镜像数
        # @type ImageCnt: Integer
        # @param ContainerCnt: 容器数
        # @type ContainerCnt: Integer
        # @param K8sMasterIP: k8s IP
        # @type K8sMasterIP: String
        # @param K8sVersion: k8s version
        # @type K8sVersion: String
        # @param KubeProxyVersion: kube proxy
        # @type KubeProxyVersion: String
        # @param Status: "UNINSTALL"："未安装","OFFLINE"："离线", "ONLINE"："防护中
        # @type Status: String
        # @param IsContainerd: 是否Containerd
        # @type IsContainerd: Boolean
        # @param MachineType: 主机来源;"TENCENTCLOUD":"腾讯云服务器","OTHERCLOUD":"非腾讯云服务器"
        # @type MachineType: String
        # @param PublicIp: 外网ip
        # @type PublicIp: String
        # @param InstanceID: 主机实例ID
        # @type InstanceID: String
        # @param RegionID: 地域ID
        # @type RegionID: Integer
        # @param Project: 所属项目
        # @type Project: :class:`Tencentcloud::Tcss.v20201101.models.ProjectInfo`
        # @param Tags: 标签
        # @type Tags: Array
        # @param ClusterID: 集群ID
        # @type ClusterID: String
        # @param ClusterName: 集群名称
        # @type ClusterName: String
        # @param ClusterAccessedStatus: 集群接入状态
        # @type ClusterAccessedStatus: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :UUID, :UpdateTime, :HostName, :Group, :HostIP, :OsName, :AgentVersion, :KernelVersion, :DockerVersion, :DockerAPIVersion, :DockerGoVersion, :DockerFileSystemDriver, :DockerRootDir, :ImageCnt, :ContainerCnt, :K8sMasterIP, :K8sVersion, :KubeProxyVersion, :Status, :IsContainerd, :MachineType, :PublicIp, :InstanceID, :RegionID, :Project, :Tags, :ClusterID, :ClusterName, :ClusterAccessedStatus, :RequestId

        def initialize(uuid=nil, updatetime=nil, hostname=nil, group=nil, hostip=nil, osname=nil, agentversion=nil, kernelversion=nil, dockerversion=nil, dockerapiversion=nil, dockergoversion=nil, dockerfilesystemdriver=nil, dockerrootdir=nil, imagecnt=nil, containercnt=nil, k8smasterip=nil, k8sversion=nil, kubeproxyversion=nil, status=nil, iscontainerd=nil, machinetype=nil, publicip=nil, instanceid=nil, regionid=nil, project=nil, tags=nil, clusterid=nil, clustername=nil, clusteraccessedstatus=nil, requestid=nil)
          @UUID = uuid
          @UpdateTime = updatetime
          @HostName = hostname
          @Group = group
          @HostIP = hostip
          @OsName = osname
          @AgentVersion = agentversion
          @KernelVersion = kernelversion
          @DockerVersion = dockerversion
          @DockerAPIVersion = dockerapiversion
          @DockerGoVersion = dockergoversion
          @DockerFileSystemDriver = dockerfilesystemdriver
          @DockerRootDir = dockerrootdir
          @ImageCnt = imagecnt
          @ContainerCnt = containercnt
          @K8sMasterIP = k8smasterip
          @K8sVersion = k8sversion
          @KubeProxyVersion = kubeproxyversion
          @Status = status
          @IsContainerd = iscontainerd
          @MachineType = machinetype
          @PublicIp = publicip
          @InstanceID = instanceid
          @RegionID = regionid
          @Project = project
          @Tags = tags
          @ClusterID = clusterid
          @ClusterName = clustername
          @ClusterAccessedStatus = clusteraccessedstatus
          @RequestId = requestid
        end

        def deserialize(params)
          @UUID = params['UUID']
          @UpdateTime = params['UpdateTime']
          @HostName = params['HostName']
          @Group = params['Group']
          @HostIP = params['HostIP']
          @OsName = params['OsName']
          @AgentVersion = params['AgentVersion']
          @KernelVersion = params['KernelVersion']
          @DockerVersion = params['DockerVersion']
          @DockerAPIVersion = params['DockerAPIVersion']
          @DockerGoVersion = params['DockerGoVersion']
          @DockerFileSystemDriver = params['DockerFileSystemDriver']
          @DockerRootDir = params['DockerRootDir']
          @ImageCnt = params['ImageCnt']
          @ContainerCnt = params['ContainerCnt']
          @K8sMasterIP = params['K8sMasterIP']
          @K8sVersion = params['K8sVersion']
          @KubeProxyVersion = params['KubeProxyVersion']
          @Status = params['Status']
          @IsContainerd = params['IsContainerd']
          @MachineType = params['MachineType']
          @PublicIp = params['PublicIp']
          @InstanceID = params['InstanceID']
          @RegionID = params['RegionID']
          unless params['Project'].nil?
            @Project = ProjectInfo.new
            @Project.deserialize(params['Project'])
          end
          unless params['Tags'].nil?
            @Tags = []
            params['Tags'].each do |i|
              taginfo_tmp = TagInfo.new
              taginfo_tmp.deserialize(i)
              @Tags << taginfo_tmp
            end
          end
          @ClusterID = params['ClusterID']
          @ClusterName = params['ClusterName']
          @ClusterAccessedStatus = params['ClusterAccessedStatus']
          @RequestId = params['RequestId']
        end
      end

      # DescribeAssetHostList请求参数结构体
      class DescribeAssetHostListRequest < TencentCloud::Common::AbstractModel
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Filters: 过滤条件。 <li>Status - String - 是否必填：否 - agent状态筛选，"ALL":"全部"(或不传该字段),"UNINSTALL"："未安装","OFFLINE"："离线", "ONLINE"："防护中"</li> <li>HostName - String - 是否必填：否 - 主机名筛选</li> <li>Group- String - 是否必填：否 - 主机群组搜索</li> <li>HostIP- string - 是否必填：否 - 主机ip搜索</li> <li>HostID- string - 是否必填：否 - 主机id搜索</li> <li>DockerVersion- string - 是否必填：否 - docker版本搜索</li> <li>MachineType- string - 是否必填：否 - 主机来源MachineType搜索，"ALL":"全部"(或不传该字段),主机来源：["CVM", "ECM", "LH", "BM"]  中的之一为腾讯云服务器；["Other"]之一非腾讯云服务器；</li> <li>DockerStatus- string - 是否必填：否 - docker安装状态，"ALL":"全部"(或不传该字段),"INSTALL":"已安装","UNINSTALL":"未安装"</li> <li>ProjectID- string - 是否必填：否 - 所属项目id搜索</li> <li>Tag:xxx(tag:key)- string- 是否必填：否 - 标签键值搜索 示例Filters":[{"Name":"tag:tke-kind","Values":["service"]}]</li> <li>NonClusterNode: 是否查询非集群节点(true: 是,false: 否)</li>
        # @type Filters: Array
        # @param By: 排序字段
        # @type By: String
        # @param Order: 排序方式 asc,desc
        # @type Order: String

        attr_accessor :Limit, :Offset, :Filters, :By, :Order

        def initialize(limit=nil, offset=nil, filters=nil, by=nil, order=nil)
          @Limit = limit
          @Offset = offset
          @Filters = filters
          @By = by
          @Order = order
        end

        def deserialize(params)
          @Limit = params['Limit']
          @Offset = params['Offset']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              assetfilters_tmp = AssetFilters.new
              assetfilters_tmp.deserialize(i)
              @Filters << assetfilters_tmp
            end
          end
          @By = params['By']
          @Order = params['Order']
        end
      end

      # DescribeAssetHostList返回参数结构体
      class DescribeAssetHostListResponse < TencentCloud::Common::AbstractModel
        # @param List: 主机列表
        # @type List: Array
        # @param TotalCount: 总数量
        # @type TotalCount: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :List, :TotalCount, :RequestId

        def initialize(list=nil, totalcount=nil, requestid=nil)
          @List = list
          @TotalCount = totalcount
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['List'].nil?
            @List = []
            params['List'].each do |i|
              hostinfo_tmp = HostInfo.new
              hostinfo_tmp.deserialize(i)
              @List << hostinfo_tmp
            end
          end
          @TotalCount = params['TotalCount']
          @RequestId = params['RequestId']
        end
      end

      # DescribeAssetImageBindRuleInfo请求参数结构体
      class DescribeAssetImageBindRuleInfoRequest < TencentCloud::Common::AbstractModel
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Filters: 过滤参数,"Filters":[{"Name":"EventType","Values":[""]}]
        # EventType取值：
        # "FILE_ABNORMAL_READ" 访问控制
        # "MALICE_PROCESS_START" 恶意进程启动
        # @type Filters: Array
        # @param Order: 升序降序,asc desc
        # @type Order: String
        # @param By: 排序字段
        # @type By: String

        attr_accessor :Limit, :Offset, :Filters, :Order, :By

        def initialize(limit=nil, offset=nil, filters=nil, order=nil, by=nil)
          @Limit = limit
          @Offset = offset
          @Filters = filters
          @Order = order
          @By = by
        end

        def deserialize(params)
          @Limit = params['Limit']
          @Offset = params['Offset']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              runtimefilters_tmp = RunTimeFilters.new
              runtimefilters_tmp.deserialize(i)
              @Filters << runtimefilters_tmp
            end
          end
          @Order = params['Order']
          @By = params['By']
        end
      end

      # DescribeAssetImageBindRuleInfo返回参数结构体
      class DescribeAssetImageBindRuleInfoResponse < TencentCloud::Common::AbstractModel
        # @param TotalCount: 事件总数量
        # @type TotalCount: Integer
        # @param ImageBindRuleSet: 镜像绑定规则列表
        # @type ImageBindRuleSet: Array
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TotalCount, :ImageBindRuleSet, :RequestId

        def initialize(totalcount=nil, imagebindruleset=nil, requestid=nil)
          @TotalCount = totalcount
          @ImageBindRuleSet = imagebindruleset
          @RequestId = requestid
        end

        def deserialize(params)
          @TotalCount = params['TotalCount']
          unless params['ImageBindRuleSet'].nil?
            @ImageBindRuleSet = []
            params['ImageBindRuleSet'].each do |i|
              imagesbindruleinfo_tmp = ImagesBindRuleInfo.new
              imagesbindruleinfo_tmp.deserialize(i)
              @ImageBindRuleSet << imagesbindruleinfo_tmp
            end
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeAssetImageDetail请求参数结构体
      class DescribeAssetImageDetailRequest < TencentCloud::Common::AbstractModel
        # @param ImageID: 镜像id
        # @type ImageID: String

        attr_accessor :ImageID

        def initialize(imageid=nil)
          @ImageID = imageid
        end

        def deserialize(params)
          @ImageID = params['ImageID']
        end
      end

      # DescribeAssetImageDetail返回参数结构体
      class DescribeAssetImageDetailResponse < TencentCloud::Common::AbstractModel
        # @param ImageID: 镜像ID
        # @type ImageID: String
        # @param ImageName: 镜像名称
        # @type ImageName: String
        # @param ImageDigest: 镜像摘要
        # @type ImageDigest: String
        # @param CreateTime: 创建时间
        # @type CreateTime: String
        # @param Size: 镜像大小
        # @type Size: Integer
        # @param HostCnt: 关联主机个数
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type HostCnt: Integer
        # @param ContainerCnt: 关联容器个数
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ContainerCnt: Integer
        # @param ScanTime: 最近扫描时间
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ScanTime: String
        # @param VulCnt: 漏洞个数
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type VulCnt: Integer
        # @param RiskCnt: 风险行为数
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type RiskCnt: Integer
        # @param SensitiveInfoCnt: 敏感信息数
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type SensitiveInfoCnt: Integer
        # @param IsTrustImage: 是否信任镜像
        # @type IsTrustImage: Boolean
        # @param OsName: 镜像系统
        # @type OsName: String
        # @param AgentError: agent镜像扫描错误
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type AgentError: String
        # @param ScanError: 后端镜像扫描错误
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ScanError: String
        # @param Architecture: 系统架构
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Architecture: String
        # @param Author: 作者
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Author: String
        # @param BuildHistory: 构建历史
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type BuildHistory: String
        # @param ScanVirusProgress: 木马扫描进度
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ScanVirusProgress: Integer
        # @param ScanVulProgress: 漏洞扫进度
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ScanVulProgress: Integer
        # @param ScanRiskProgress: 敏感信息扫描进度
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ScanRiskProgress: Integer
        # @param ScanVirusError: 木马扫描错误
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ScanVirusError: String
        # @param ScanVulError: 漏洞扫描错误
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ScanVulError: String
        # @param ScanRiskError: 敏感信息错误
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ScanRiskError: String
        # @param ScanStatus: 镜像扫描状态
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ScanStatus: String
        # @param VirusCnt: 木马病毒数
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type VirusCnt: Integer
        # @param Status: 镜像扫描状态
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Status: Integer
        # @param RemainScanTime: 剩余扫描时间
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type RemainScanTime: Integer
        # @param IsAuthorized: 授权为：1，未授权为：0
        # @type IsAuthorized: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :ImageID, :ImageName, :ImageDigest, :CreateTime, :Size, :HostCnt, :ContainerCnt, :ScanTime, :VulCnt, :RiskCnt, :SensitiveInfoCnt, :IsTrustImage, :OsName, :AgentError, :ScanError, :Architecture, :Author, :BuildHistory, :ScanVirusProgress, :ScanVulProgress, :ScanRiskProgress, :ScanVirusError, :ScanVulError, :ScanRiskError, :ScanStatus, :VirusCnt, :Status, :RemainScanTime, :IsAuthorized, :RequestId

        def initialize(imageid=nil, imagename=nil, imagedigest=nil, createtime=nil, size=nil, hostcnt=nil, containercnt=nil, scantime=nil, vulcnt=nil, riskcnt=nil, sensitiveinfocnt=nil, istrustimage=nil, osname=nil, agenterror=nil, scanerror=nil, architecture=nil, author=nil, buildhistory=nil, scanvirusprogress=nil, scanvulprogress=nil, scanriskprogress=nil, scanviruserror=nil, scanvulerror=nil, scanriskerror=nil, scanstatus=nil, viruscnt=nil, status=nil, remainscantime=nil, isauthorized=nil, requestid=nil)
          @ImageID = imageid
          @ImageName = imagename
          @ImageDigest = imagedigest
          @CreateTime = createtime
          @Size = size
          @HostCnt = hostcnt
          @ContainerCnt = containercnt
          @ScanTime = scantime
          @VulCnt = vulcnt
          @RiskCnt = riskcnt
          @SensitiveInfoCnt = sensitiveinfocnt
          @IsTrustImage = istrustimage
          @OsName = osname
          @AgentError = agenterror
          @ScanError = scanerror
          @Architecture = architecture
          @Author = author
          @BuildHistory = buildhistory
          @ScanVirusProgress = scanvirusprogress
          @ScanVulProgress = scanvulprogress
          @ScanRiskProgress = scanriskprogress
          @ScanVirusError = scanviruserror
          @ScanVulError = scanvulerror
          @ScanRiskError = scanriskerror
          @ScanStatus = scanstatus
          @VirusCnt = viruscnt
          @Status = status
          @RemainScanTime = remainscantime
          @IsAuthorized = isauthorized
          @RequestId = requestid
        end

        def deserialize(params)
          @ImageID = params['ImageID']
          @ImageName = params['ImageName']
          @ImageDigest = params['ImageDigest']
          @CreateTime = params['CreateTime']
          @Size = params['Size']
          @HostCnt = params['HostCnt']
          @ContainerCnt = params['ContainerCnt']
          @ScanTime = params['ScanTime']
          @VulCnt = params['VulCnt']
          @RiskCnt = params['RiskCnt']
          @SensitiveInfoCnt = params['SensitiveInfoCnt']
          @IsTrustImage = params['IsTrustImage']
          @OsName = params['OsName']
          @AgentError = params['AgentError']
          @ScanError = params['ScanError']
          @Architecture = params['Architecture']
          @Author = params['Author']
          @BuildHistory = params['BuildHistory']
          @ScanVirusProgress = params['ScanVirusProgress']
          @ScanVulProgress = params['ScanVulProgress']
          @ScanRiskProgress = params['ScanRiskProgress']
          @ScanVirusError = params['ScanVirusError']
          @ScanVulError = params['ScanVulError']
          @ScanRiskError = params['ScanRiskError']
          @ScanStatus = params['ScanStatus']
          @VirusCnt = params['VirusCnt']
          @Status = params['Status']
          @RemainScanTime = params['RemainScanTime']
          @IsAuthorized = params['IsAuthorized']
          @RequestId = params['RequestId']
        end
      end

      # DescribeAssetImageHostList请求参数结构体
      class DescribeAssetImageHostListRequest < TencentCloud::Common::AbstractModel
        # @param Filters: 过滤条件 支持ImageID,HostID
        # @type Filters: Array

        attr_accessor :Filters

        def initialize(filters=nil)
          @Filters = filters
        end

        def deserialize(params)
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              assetfilters_tmp = AssetFilters.new
              assetfilters_tmp.deserialize(i)
              @Filters << assetfilters_tmp
            end
          end
        end
      end

      # DescribeAssetImageHostList返回参数结构体
      class DescribeAssetImageHostListResponse < TencentCloud::Common::AbstractModel
        # @param List: 镜像列表
        # @type List: Array
        # @param TotalCount: 总数量
        # @type TotalCount: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :List, :TotalCount, :RequestId

        def initialize(list=nil, totalcount=nil, requestid=nil)
          @List = list
          @TotalCount = totalcount
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['List'].nil?
            @List = []
            params['List'].each do |i|
              imagehost_tmp = ImageHost.new
              imagehost_tmp.deserialize(i)
              @List << imagehost_tmp
            end
          end
          @TotalCount = params['TotalCount']
          @RequestId = params['RequestId']
        end
      end

      # DescribeAssetImageListExport请求参数结构体
      class DescribeAssetImageListExportRequest < TencentCloud::Common::AbstractModel
        # @param ExportField: 导出字段
        # @type ExportField: Array
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Filters: 过滤条件。
        # <li>ImageName- String - 是否必填：否 - 镜像名称筛选，</li>
        # <li>ScanStatus - String - 是否必填：否 - 镜像扫描状态notScan，scanning，scanned，scanErr</li>
        # <li>ImageID- String - 是否必填：否 - 镜像ID筛选，</li>
        # <li>SecurityRisk- String - 是否必填：否 - 安全风险，VulCnt 、VirusCnt、RiskCnt、IsTrustImage</li>
        # @type Filters: Array
        # @param By: 排序字段
        # @type By: String
        # @param Order: 排序方式 asc,desc
        # @type Order: String

        attr_accessor :ExportField, :Limit, :Offset, :Filters, :By, :Order

        def initialize(exportfield=nil, limit=nil, offset=nil, filters=nil, by=nil, order=nil)
          @ExportField = exportfield
          @Limit = limit
          @Offset = offset
          @Filters = filters
          @By = by
          @Order = order
        end

        def deserialize(params)
          @ExportField = params['ExportField']
          @Limit = params['Limit']
          @Offset = params['Offset']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              assetfilters_tmp = AssetFilters.new
              assetfilters_tmp.deserialize(i)
              @Filters << assetfilters_tmp
            end
          end
          @By = params['By']
          @Order = params['Order']
        end
      end

      # DescribeAssetImageListExport返回参数结构体
      class DescribeAssetImageListExportResponse < TencentCloud::Common::AbstractModel
        # @param DownloadUrl: excel文件下载地址
        # @type DownloadUrl: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :DownloadUrl, :RequestId

        def initialize(downloadurl=nil, requestid=nil)
          @DownloadUrl = downloadurl
          @RequestId = requestid
        end

        def deserialize(params)
          @DownloadUrl = params['DownloadUrl']
          @RequestId = params['RequestId']
        end
      end

      # DescribeAssetImageList请求参数结构体
      class DescribeAssetImageListRequest < TencentCloud::Common::AbstractModel
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Filters: 过滤条件。
        # <li>ImageName- String - 是否必填：否 - 镜像名称筛选，</li>
        # <li>ScanStatus - String - 是否必填：否 - 镜像扫描状态notScan，scanning，scanned，scanErr</li>
        # <li>ImageID- String - 是否必填：否 - 镜像ID筛选，</li>
        # <li>SecurityRisk- String - 是否必填：否 - 安全风险，VulCnt 、VirusCnt、RiskCnt、IsTrustImage</li>
        # @type Filters: Array
        # @param By: 排序字段
        # @type By: String
        # @param Order: 排序方式 asc,desc
        # @type Order: String

        attr_accessor :Limit, :Offset, :Filters, :By, :Order

        def initialize(limit=nil, offset=nil, filters=nil, by=nil, order=nil)
          @Limit = limit
          @Offset = offset
          @Filters = filters
          @By = by
          @Order = order
        end

        def deserialize(params)
          @Limit = params['Limit']
          @Offset = params['Offset']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              assetfilters_tmp = AssetFilters.new
              assetfilters_tmp.deserialize(i)
              @Filters << assetfilters_tmp
            end
          end
          @By = params['By']
          @Order = params['Order']
        end
      end

      # DescribeAssetImageList返回参数结构体
      class DescribeAssetImageListResponse < TencentCloud::Common::AbstractModel
        # @param List: 镜像列表
        # @type List: Array
        # @param TotalCount: 总数量
        # @type TotalCount: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :List, :TotalCount, :RequestId

        def initialize(list=nil, totalcount=nil, requestid=nil)
          @List = list
          @TotalCount = totalcount
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['List'].nil?
            @List = []
            params['List'].each do |i|
              imagesinfo_tmp = ImagesInfo.new
              imagesinfo_tmp.deserialize(i)
              @List << imagesinfo_tmp
            end
          end
          @TotalCount = params['TotalCount']
          @RequestId = params['RequestId']
        end
      end

      # DescribeAssetImageRegistryAssetStatus请求参数结构体
      class DescribeAssetImageRegistryAssetStatusRequest < TencentCloud::Common::AbstractModel


        def initialize()
        end

        def deserialize(params)
        end
      end

      # DescribeAssetImageRegistryAssetStatus返回参数结构体
      class DescribeAssetImageRegistryAssetStatusResponse < TencentCloud::Common::AbstractModel
        # @param Status: 更新进度状态,doing更新中，success更新成功，failed失败
        # @type Status: String
        # @param Err: 错误信息
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Err: String
        # @param LatestSyncSuccessTime: 最后一次同步成功时间
        # @type LatestSyncSuccessTime: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :Status, :Err, :LatestSyncSuccessTime, :RequestId

        def initialize(status=nil, err=nil, latestsyncsuccesstime=nil, requestid=nil)
          @Status = status
          @Err = err
          @LatestSyncSuccessTime = latestsyncsuccesstime
          @RequestId = requestid
        end

        def deserialize(params)
          @Status = params['Status']
          @Err = params['Err']
          @LatestSyncSuccessTime = params['LatestSyncSuccessTime']
          @RequestId = params['RequestId']
        end
      end

      # DescribeAssetImageRegistryDetail请求参数结构体
      class DescribeAssetImageRegistryDetailRequest < TencentCloud::Common::AbstractModel
        # @param Id: 仓库列表id
        # @type Id: Integer
        # @param ImageId: 镜像ID
        # @type ImageId: String

        attr_accessor :Id, :ImageId

        def initialize(id=nil, imageid=nil)
          @Id = id
          @ImageId = imageid
        end

        def deserialize(params)
          @Id = params['Id']
          @ImageId = params['ImageId']
        end
      end

      # DescribeAssetImageRegistryDetail返回参数结构体
      class DescribeAssetImageRegistryDetailResponse < TencentCloud::Common::AbstractModel
        # @param ImageDigest: 镜像Digest
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ImageDigest: String
        # @param ImageRepoAddress: 镜像地址
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ImageRepoAddress: String
        # @param RegistryType: 镜像类型
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type RegistryType: String
        # @param ImageName: 仓库名称
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ImageName: String
        # @param ImageTag: 镜像版本
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ImageTag: String
        # @param ScanTime: 扫描时间
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ScanTime: String
        # @param ScanStatus: 扫描状态
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ScanStatus: String
        # @param VulCnt: 安全漏洞数
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type VulCnt: Integer
        # @param VirusCnt: 木马病毒数
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type VirusCnt: Integer
        # @param RiskCnt: 风险行为数
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type RiskCnt: Integer
        # @param SentiveInfoCnt: 敏感信息数
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type SentiveInfoCnt: Integer
        # @param OsName: 镜像系统
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type OsName: String
        # @param ScanVirusError: 木马扫描错误
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ScanVirusError: String
        # @param ScanVulError: 漏洞扫描错误
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ScanVulError: String
        # @param LayerInfo: 层文件信息
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type LayerInfo: String
        # @param InstanceId: 实例id
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type InstanceId: String
        # @param InstanceName: 实例名称
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type InstanceName: String
        # @param Namespace: 命名空间
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Namespace: String
        # @param ScanRiskError: 高危扫描错误
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ScanRiskError: String
        # @param ScanVirusProgress: 木马信息扫描进度
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ScanVirusProgress: Integer
        # @param ScanVulProgress: 漏洞扫描进度
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ScanVulProgress: Integer
        # @param ScanRiskProgress: 敏感扫描进度
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ScanRiskProgress: Integer
        # @param ScanRemainTime: 剩余扫描时间秒
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ScanRemainTime: Integer
        # @param CveStatus: cve扫描状态
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type CveStatus: String
        # @param RiskStatus: 高危扫描状态
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type RiskStatus: String
        # @param VirusStatus: 木马扫描状态
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type VirusStatus: String
        # @param Progress: 总进度
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Progress: Integer
        # @param IsAuthorized: 授权状态
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type IsAuthorized: Integer
        # @param ImageSize: 镜像大小
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ImageSize: Integer
        # @param ImageId: 镜像Id
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ImageId: String
        # @param RegistryRegion: 镜像区域
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type RegistryRegion: String
        # @param ImageCreateTime: 镜像创建的时间
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ImageCreateTime: String
        # @param SensitiveInfoCnt: 敏感信息数
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type SensitiveInfoCnt: Integer
        # @param Id: Id
        # @type Id: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :ImageDigest, :ImageRepoAddress, :RegistryType, :ImageName, :ImageTag, :ScanTime, :ScanStatus, :VulCnt, :VirusCnt, :RiskCnt, :SentiveInfoCnt, :OsName, :ScanVirusError, :ScanVulError, :LayerInfo, :InstanceId, :InstanceName, :Namespace, :ScanRiskError, :ScanVirusProgress, :ScanVulProgress, :ScanRiskProgress, :ScanRemainTime, :CveStatus, :RiskStatus, :VirusStatus, :Progress, :IsAuthorized, :ImageSize, :ImageId, :RegistryRegion, :ImageCreateTime, :SensitiveInfoCnt, :Id, :RequestId
        extend Gem::Deprecate
        deprecate :SentiveInfoCnt, :none, 2024, 9
        deprecate :SentiveInfoCnt=, :none, 2024, 9

        def initialize(imagedigest=nil, imagerepoaddress=nil, registrytype=nil, imagename=nil, imagetag=nil, scantime=nil, scanstatus=nil, vulcnt=nil, viruscnt=nil, riskcnt=nil, sentiveinfocnt=nil, osname=nil, scanviruserror=nil, scanvulerror=nil, layerinfo=nil, instanceid=nil, instancename=nil, namespace=nil, scanriskerror=nil, scanvirusprogress=nil, scanvulprogress=nil, scanriskprogress=nil, scanremaintime=nil, cvestatus=nil, riskstatus=nil, virusstatus=nil, progress=nil, isauthorized=nil, imagesize=nil, imageid=nil, registryregion=nil, imagecreatetime=nil, sensitiveinfocnt=nil, id=nil, requestid=nil)
          @ImageDigest = imagedigest
          @ImageRepoAddress = imagerepoaddress
          @RegistryType = registrytype
          @ImageName = imagename
          @ImageTag = imagetag
          @ScanTime = scantime
          @ScanStatus = scanstatus
          @VulCnt = vulcnt
          @VirusCnt = viruscnt
          @RiskCnt = riskcnt
          @SentiveInfoCnt = sentiveinfocnt
          @OsName = osname
          @ScanVirusError = scanviruserror
          @ScanVulError = scanvulerror
          @LayerInfo = layerinfo
          @InstanceId = instanceid
          @InstanceName = instancename
          @Namespace = namespace
          @ScanRiskError = scanriskerror
          @ScanVirusProgress = scanvirusprogress
          @ScanVulProgress = scanvulprogress
          @ScanRiskProgress = scanriskprogress
          @ScanRemainTime = scanremaintime
          @CveStatus = cvestatus
          @RiskStatus = riskstatus
          @VirusStatus = virusstatus
          @Progress = progress
          @IsAuthorized = isauthorized
          @ImageSize = imagesize
          @ImageId = imageid
          @RegistryRegion = registryregion
          @ImageCreateTime = imagecreatetime
          @SensitiveInfoCnt = sensitiveinfocnt
          @Id = id
          @RequestId = requestid
        end

        def deserialize(params)
          @ImageDigest = params['ImageDigest']
          @ImageRepoAddress = params['ImageRepoAddress']
          @RegistryType = params['RegistryType']
          @ImageName = params['ImageName']
          @ImageTag = params['ImageTag']
          @ScanTime = params['ScanTime']
          @ScanStatus = params['ScanStatus']
          @VulCnt = params['VulCnt']
          @VirusCnt = params['VirusCnt']
          @RiskCnt = params['RiskCnt']
          @SentiveInfoCnt = params['SentiveInfoCnt']
          @OsName = params['OsName']
          @ScanVirusError = params['ScanVirusError']
          @ScanVulError = params['ScanVulError']
          @LayerInfo = params['LayerInfo']
          @InstanceId = params['InstanceId']
          @InstanceName = params['InstanceName']
          @Namespace = params['Namespace']
          @ScanRiskError = params['ScanRiskError']
          @ScanVirusProgress = params['ScanVirusProgress']
          @ScanVulProgress = params['ScanVulProgress']
          @ScanRiskProgress = params['ScanRiskProgress']
          @ScanRemainTime = params['ScanRemainTime']
          @CveStatus = params['CveStatus']
          @RiskStatus = params['RiskStatus']
          @VirusStatus = params['VirusStatus']
          @Progress = params['Progress']
          @IsAuthorized = params['IsAuthorized']
          @ImageSize = params['ImageSize']
          @ImageId = params['ImageId']
          @RegistryRegion = params['RegistryRegion']
          @ImageCreateTime = params['ImageCreateTime']
          @SensitiveInfoCnt = params['SensitiveInfoCnt']
          @Id = params['Id']
          @RequestId = params['RequestId']
        end
      end

      # DescribeAssetImageRegistryListExport请求参数结构体
      class DescribeAssetImageRegistryListExportRequest < TencentCloud::Common::AbstractModel
        # @param ExportField: 导出字段
        # @type ExportField: Array
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0
        # @type Offset: Integer
        # @param Filters: 排序字段
        # @type Filters: Array
        # @param By: 排序字段
        # @type By: String
        # @param Order: 排序方式，asc，desc
        # @type Order: String
        # @param OnlyShowLatest: 是否仅展示repository版本最新的镜像，默认为false
        # @type OnlyShowLatest: Boolean

        attr_accessor :ExportField, :Limit, :Offset, :Filters, :By, :Order, :OnlyShowLatest

        def initialize(exportfield=nil, limit=nil, offset=nil, filters=nil, by=nil, order=nil, onlyshowlatest=nil)
          @ExportField = exportfield
          @Limit = limit
          @Offset = offset
          @Filters = filters
          @By = by
          @Order = order
          @OnlyShowLatest = onlyshowlatest
        end

        def deserialize(params)
          @ExportField = params['ExportField']
          @Limit = params['Limit']
          @Offset = params['Offset']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              assetfilters_tmp = AssetFilters.new
              assetfilters_tmp.deserialize(i)
              @Filters << assetfilters_tmp
            end
          end
          @By = params['By']
          @Order = params['Order']
          @OnlyShowLatest = params['OnlyShowLatest']
        end
      end

      # DescribeAssetImageRegistryListExport返回参数结构体
      class DescribeAssetImageRegistryListExportResponse < TencentCloud::Common::AbstractModel
        # @param DownloadUrl: excel文件下载地址
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type DownloadUrl: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :DownloadUrl, :RequestId

        def initialize(downloadurl=nil, requestid=nil)
          @DownloadUrl = downloadurl
          @RequestId = requestid
        end

        def deserialize(params)
          @DownloadUrl = params['DownloadUrl']
          @RequestId = params['RequestId']
        end
      end

      # DescribeAssetImageRegistryList请求参数结构体
      class DescribeAssetImageRegistryListRequest < TencentCloud::Common::AbstractModel
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0
        # @type Offset: Integer
        # @param Filters: 过滤字段
        # IsAuthorized是否授权，取值全部all，未授权0，已授权1
        # @type Filters: Array
        # @param By: 排序字段
        # @type By: String
        # @param Order: 排序方式，asc，desc
        # @type Order: String
        # @param OnlyShowLatest: 是否仅展示各repository最新的镜像, 默认为false
        # @type OnlyShowLatest: Boolean
        # @param IsRunning: 是否仅展示运行中容器镜像
        # @type IsRunning: Boolean

        attr_accessor :Limit, :Offset, :Filters, :By, :Order, :OnlyShowLatest, :IsRunning

        def initialize(limit=nil, offset=nil, filters=nil, by=nil, order=nil, onlyshowlatest=nil, isrunning=nil)
          @Limit = limit
          @Offset = offset
          @Filters = filters
          @By = by
          @Order = order
          @OnlyShowLatest = onlyshowlatest
          @IsRunning = isrunning
        end

        def deserialize(params)
          @Limit = params['Limit']
          @Offset = params['Offset']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              assetfilters_tmp = AssetFilters.new
              assetfilters_tmp.deserialize(i)
              @Filters << assetfilters_tmp
            end
          end
          @By = params['By']
          @Order = params['Order']
          @OnlyShowLatest = params['OnlyShowLatest']
          @IsRunning = params['IsRunning']
        end
      end

      # DescribeAssetImageRegistryList返回参数结构体
      class DescribeAssetImageRegistryListResponse < TencentCloud::Common::AbstractModel
        # @param List: 镜像仓库列表
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type List: Array
        # @param TotalCount: 总数量
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type TotalCount: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :List, :TotalCount, :RequestId

        def initialize(list=nil, totalcount=nil, requestid=nil)
          @List = list
          @TotalCount = totalcount
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['List'].nil?
            @List = []
            params['List'].each do |i|
              imagerepoinfo_tmp = ImageRepoInfo.new
              imagerepoinfo_tmp.deserialize(i)
              @List << imagerepoinfo_tmp
            end
          end
          @TotalCount = params['TotalCount']
          @RequestId = params['RequestId']
        end
      end

      # DescribeAssetImageRegistryRegistryDetail请求参数结构体
      class DescribeAssetImageRegistryRegistryDetailRequest < TencentCloud::Common::AbstractModel
        # @param RegistryId: 仓库唯一id
        # @type RegistryId: Integer

        attr_accessor :RegistryId

        def initialize(registryid=nil)
          @RegistryId = registryid
        end

        def deserialize(params)
          @RegistryId = params['RegistryId']
        end
      end

      # DescribeAssetImageRegistryRegistryDetail返回参数结构体
      class DescribeAssetImageRegistryRegistryDetailResponse < TencentCloud::Common::AbstractModel
        # @param Name: 仓库名
        # @type Name: String
        # @param Username: 用户名
        # @type Username: String
        # @param Password: 密码
        # @type Password: String
        # @param Url: 仓库url
        # @type Url: String
        # @param RegistryType: 仓库类型，列表：harbor
        # @type RegistryType: String
        # @param RegistryVersion: 仓库版本
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type RegistryVersion: String
        # @param NetType: 网络类型，列表：public（公网）,private（私网）
        # @type NetType: String
        # @param RegistryRegion: 区域，列表:default（默认）
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type RegistryRegion: String
        # @param SpeedLimit: 限速
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type SpeedLimit: Integer
        # @param Insecure: 安全模式（证书校验）：0（默认） 非安全模式（跳过证书校验）：1
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Insecure: Integer
        # @param ConnDetectDetail: 联通性检测结果详情
        # @type ConnDetectDetail: Array
        # @param InstanceID: tcr情况下instance_id
        # @type InstanceID: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :Name, :Username, :Password, :Url, :RegistryType, :RegistryVersion, :NetType, :RegistryRegion, :SpeedLimit, :Insecure, :ConnDetectDetail, :InstanceID, :RequestId

        def initialize(name=nil, username=nil, password=nil, url=nil, registrytype=nil, registryversion=nil, nettype=nil, registryregion=nil, speedlimit=nil, insecure=nil, conndetectdetail=nil, instanceid=nil, requestid=nil)
          @Name = name
          @Username = username
          @Password = password
          @Url = url
          @RegistryType = registrytype
          @RegistryVersion = registryversion
          @NetType = nettype
          @RegistryRegion = registryregion
          @SpeedLimit = speedlimit
          @Insecure = insecure
          @ConnDetectDetail = conndetectdetail
          @InstanceID = instanceid
          @RequestId = requestid
        end

        def deserialize(params)
          @Name = params['Name']
          @Username = params['Username']
          @Password = params['Password']
          @Url = params['Url']
          @RegistryType = params['RegistryType']
          @RegistryVersion = params['RegistryVersion']
          @NetType = params['NetType']
          @RegistryRegion = params['RegistryRegion']
          @SpeedLimit = params['SpeedLimit']
          @Insecure = params['Insecure']
          unless params['ConnDetectDetail'].nil?
            @ConnDetectDetail = []
            params['ConnDetectDetail'].each do |i|
              registryconndetectresult_tmp = RegistryConnDetectResult.new
              registryconndetectresult_tmp.deserialize(i)
              @ConnDetectDetail << registryconndetectresult_tmp
            end
          end
          @InstanceID = params['InstanceID']
          @RequestId = params['RequestId']
        end
      end

      # DescribeAssetImageRegistryRegistryList请求参数结构体
      class DescribeAssetImageRegistryRegistryListRequest < TencentCloud::Common::AbstractModel


        def initialize()
        end

        def deserialize(params)
        end
      end

      # DescribeAssetImageRegistryRegistryList返回参数结构体
      class DescribeAssetImageRegistryRegistryListResponse < TencentCloud::Common::AbstractModel
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RequestId

        def initialize(requestid=nil)
          @RequestId = requestid
        end

        def deserialize(params)
          @RequestId = params['RequestId']
        end
      end

      # DescribeAssetImageRegistryRiskInfoList请求参数结构体
      class DescribeAssetImageRegistryRiskInfoListRequest < TencentCloud::Common::AbstractModel
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Filters: 过滤条件。
        # <li>Level- String - 是否必填：否 - 漏洞级别筛选，</li>
        # <li>Name - String - 是否必填：否 - 漏洞名称</li>
        # @type Filters: Array
        # @param ImageInfo: 镜像id
        # @type ImageInfo: :class:`Tencentcloud::Tcss.v20201101.models.ImageInfo`
        # @param By: 排序字段（Level）
        # @type By: String
        # @param Order: 排序方式 + -
        # @type Order: String
        # @param Id: 镜像标识Id
        # @type Id: Integer

        attr_accessor :Limit, :Offset, :Filters, :ImageInfo, :By, :Order, :Id

        def initialize(limit=nil, offset=nil, filters=nil, imageinfo=nil, by=nil, order=nil, id=nil)
          @Limit = limit
          @Offset = offset
          @Filters = filters
          @ImageInfo = imageinfo
          @By = by
          @Order = order
          @Id = id
        end

        def deserialize(params)
          @Limit = params['Limit']
          @Offset = params['Offset']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              assetfilters_tmp = AssetFilters.new
              assetfilters_tmp.deserialize(i)
              @Filters << assetfilters_tmp
            end
          end
          unless params['ImageInfo'].nil?
            @ImageInfo = ImageInfo.new
            @ImageInfo.deserialize(params['ImageInfo'])
          end
          @By = params['By']
          @Order = params['Order']
          @Id = params['Id']
        end
      end

      # DescribeAssetImageRegistryRiskInfoList返回参数结构体
      class DescribeAssetImageRegistryRiskInfoListResponse < TencentCloud::Common::AbstractModel
        # @param List: 镜像漏洞列表
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type List: Array
        # @param TotalCount: 总数量
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type TotalCount: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :List, :TotalCount, :RequestId

        def initialize(list=nil, totalcount=nil, requestid=nil)
          @List = list
          @TotalCount = totalcount
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['List'].nil?
            @List = []
            params['List'].each do |i|
              imagerisk_tmp = ImageRisk.new
              imagerisk_tmp.deserialize(i)
              @List << imagerisk_tmp
            end
          end
          @TotalCount = params['TotalCount']
          @RequestId = params['RequestId']
        end
      end

      # DescribeAssetImageRegistryRiskListExport请求参数结构体
      class DescribeAssetImageRegistryRiskListExportRequest < TencentCloud::Common::AbstractModel
        # @param ExportField: 导出字段
        # @type ExportField: Array
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Filters: 过滤条件。
        # <li>Level- String - 是否必填：否 - 漏洞级别筛选，</li>
        # <li>Name - String - 是否必填：否 - 漏洞名称</li>
        # @type Filters: Array
        # @param ImageInfo: 镜像信息
        # @type ImageInfo: :class:`Tencentcloud::Tcss.v20201101.models.ImageInfo`
        # @param Id: 镜像标识Id
        # @type Id: Integer

        attr_accessor :ExportField, :Limit, :Offset, :Filters, :ImageInfo, :Id

        def initialize(exportfield=nil, limit=nil, offset=nil, filters=nil, imageinfo=nil, id=nil)
          @ExportField = exportfield
          @Limit = limit
          @Offset = offset
          @Filters = filters
          @ImageInfo = imageinfo
          @Id = id
        end

        def deserialize(params)
          @ExportField = params['ExportField']
          @Limit = params['Limit']
          @Offset = params['Offset']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              assetfilters_tmp = AssetFilters.new
              assetfilters_tmp.deserialize(i)
              @Filters << assetfilters_tmp
            end
          end
          unless params['ImageInfo'].nil?
            @ImageInfo = ImageInfo.new
            @ImageInfo.deserialize(params['ImageInfo'])
          end
          @Id = params['Id']
        end
      end

      # DescribeAssetImageRegistryRiskListExport返回参数结构体
      class DescribeAssetImageRegistryRiskListExportResponse < TencentCloud::Common::AbstractModel
        # @param DownloadUrl: excel文件下载地址
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type DownloadUrl: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :DownloadUrl, :RequestId

        def initialize(downloadurl=nil, requestid=nil)
          @DownloadUrl = downloadurl
          @RequestId = requestid
        end

        def deserialize(params)
          @DownloadUrl = params['DownloadUrl']
          @RequestId = params['RequestId']
        end
      end

      # DescribeAssetImageRegistryScanStatusOneKey请求参数结构体
      class DescribeAssetImageRegistryScanStatusOneKeyRequest < TencentCloud::Common::AbstractModel
        # @param Images: 需要获取进度的镜像列表
        # @type Images: Array
        # @param All: 是否获取全部镜像
        # @type All: Boolean
        # @param Id: 需要获取进度的镜像列表Id
        # @type Id: Array
        # @param TaskID: 获取进度的任务ID
        # @type TaskID: Integer

        attr_accessor :Images, :All, :Id, :TaskID

        def initialize(images=nil, all=nil, id=nil, taskid=nil)
          @Images = images
          @All = all
          @Id = id
          @TaskID = taskid
        end

        def deserialize(params)
          unless params['Images'].nil?
            @Images = []
            params['Images'].each do |i|
              imageinfo_tmp = ImageInfo.new
              imageinfo_tmp.deserialize(i)
              @Images << imageinfo_tmp
            end
          end
          @All = params['All']
          @Id = params['Id']
          @TaskID = params['TaskID']
        end
      end

      # DescribeAssetImageRegistryScanStatusOneKey返回参数结构体
      class DescribeAssetImageRegistryScanStatusOneKeyResponse < TencentCloud::Common::AbstractModel
        # @param ImageTotal: 镜像个数
        # @type ImageTotal: Integer
        # @param ImageScanCnt: 扫描镜像个数
        # @type ImageScanCnt: Integer
        # @param ImageStatus: 扫描进度列表
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ImageStatus: Array
        # @param SuccessCount: 安全个数
        # @type SuccessCount: Integer
        # @param RiskCount: 风险个数
        # @type RiskCount: Integer
        # @param Schedule: 总的扫描进度
        # @type Schedule: Integer
        # @param Status: 总的扫描状态
        # @type Status: String
        # @param ScanRemainTime: 扫描剩余时间
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ScanRemainTime: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :ImageTotal, :ImageScanCnt, :ImageStatus, :SuccessCount, :RiskCount, :Schedule, :Status, :ScanRemainTime, :RequestId

        def initialize(imagetotal=nil, imagescancnt=nil, imagestatus=nil, successcount=nil, riskcount=nil, schedule=nil, status=nil, scanremaintime=nil, requestid=nil)
          @ImageTotal = imagetotal
          @ImageScanCnt = imagescancnt
          @ImageStatus = imagestatus
          @SuccessCount = successcount
          @RiskCount = riskcount
          @Schedule = schedule
          @Status = status
          @ScanRemainTime = scanremaintime
          @RequestId = requestid
        end

        def deserialize(params)
          @ImageTotal = params['ImageTotal']
          @ImageScanCnt = params['ImageScanCnt']
          unless params['ImageStatus'].nil?
            @ImageStatus = []
            params['ImageStatus'].each do |i|
              imageprogress_tmp = ImageProgress.new
              imageprogress_tmp.deserialize(i)
              @ImageStatus << imageprogress_tmp
            end
          end
          @SuccessCount = params['SuccessCount']
          @RiskCount = params['RiskCount']
          @Schedule = params['Schedule']
          @Status = params['Status']
          @ScanRemainTime = params['ScanRemainTime']
          @RequestId = params['RequestId']
        end
      end

      # DescribeAssetImageRegistrySummary请求参数结构体
      class DescribeAssetImageRegistrySummaryRequest < TencentCloud::Common::AbstractModel
        # @param Filters: 过滤字段
        # @type Filters: Array

        attr_accessor :Filters

        def initialize(filters=nil)
          @Filters = filters
        end

        def deserialize(params)
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              assetfilters_tmp = AssetFilters.new
              assetfilters_tmp.deserialize(i)
              @Filters << assetfilters_tmp
            end
          end
        end
      end

      # DescribeAssetImageRegistrySummary返回参数结构体
      class DescribeAssetImageRegistrySummaryResponse < TencentCloud::Common::AbstractModel
        # @param UnScannedImageCnt: 待扫描镜像个数
        # @type UnScannedImageCnt: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :UnScannedImageCnt, :RequestId

        def initialize(unscannedimagecnt=nil, requestid=nil)
          @UnScannedImageCnt = unscannedimagecnt
          @RequestId = requestid
        end

        def deserialize(params)
          @UnScannedImageCnt = params['UnScannedImageCnt']
          @RequestId = params['RequestId']
        end
      end

      # DescribeAssetImageRegistryVirusListExport请求参数结构体
      class DescribeAssetImageRegistryVirusListExportRequest < TencentCloud::Common::AbstractModel
        # @param ExportField: 导出字段
        # @type ExportField: Array
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Filters: 过滤条件。
        # <li>Level- String - 是否必填：否 - 漏洞级别筛选，</li>
        # <li>Name - String - 是否必填：否 - 漏洞名称</li>
        # @type Filters: Array
        # @param ImageInfo: 镜像信息
        # @type ImageInfo: :class:`Tencentcloud::Tcss.v20201101.models.ImageInfo`
        # @param Id: 镜像标识Id
        # @type Id: Integer

        attr_accessor :ExportField, :Limit, :Offset, :Filters, :ImageInfo, :Id

        def initialize(exportfield=nil, limit=nil, offset=nil, filters=nil, imageinfo=nil, id=nil)
          @ExportField = exportfield
          @Limit = limit
          @Offset = offset
          @Filters = filters
          @ImageInfo = imageinfo
          @Id = id
        end

        def deserialize(params)
          @ExportField = params['ExportField']
          @Limit = params['Limit']
          @Offset = params['Offset']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              assetfilters_tmp = AssetFilters.new
              assetfilters_tmp.deserialize(i)
              @Filters << assetfilters_tmp
            end
          end
          unless params['ImageInfo'].nil?
            @ImageInfo = ImageInfo.new
            @ImageInfo.deserialize(params['ImageInfo'])
          end
          @Id = params['Id']
        end
      end

      # DescribeAssetImageRegistryVirusListExport返回参数结构体
      class DescribeAssetImageRegistryVirusListExportResponse < TencentCloud::Common::AbstractModel
        # @param DownloadUrl: excel文件下载地址
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type DownloadUrl: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :DownloadUrl, :RequestId

        def initialize(downloadurl=nil, requestid=nil)
          @DownloadUrl = downloadurl
          @RequestId = requestid
        end

        def deserialize(params)
          @DownloadUrl = params['DownloadUrl']
          @RequestId = params['RequestId']
        end
      end

      # DescribeAssetImageRegistryVirusList请求参数结构体
      class DescribeAssetImageRegistryVirusListRequest < TencentCloud::Common::AbstractModel
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Filters: 过滤条件。
        # <li>Level- String - 是否必填：否 - 漏洞级别筛选，</li>
        # <li>Name - String - 是否必填：否 - 漏洞名称</li>
        # @type Filters: Array
        # @param ImageInfo: 镜像信息
        # @type ImageInfo: :class:`Tencentcloud::Tcss.v20201101.models.ImageInfo`
        # @param Id: 镜像标识Id
        # @type Id: Integer

        attr_accessor :Limit, :Offset, :Filters, :ImageInfo, :Id

        def initialize(limit=nil, offset=nil, filters=nil, imageinfo=nil, id=nil)
          @Limit = limit
          @Offset = offset
          @Filters = filters
          @ImageInfo = imageinfo
          @Id = id
        end

        def deserialize(params)
          @Limit = params['Limit']
          @Offset = params['Offset']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              assetfilters_tmp = AssetFilters.new
              assetfilters_tmp.deserialize(i)
              @Filters << assetfilters_tmp
            end
          end
          unless params['ImageInfo'].nil?
            @ImageInfo = ImageInfo.new
            @ImageInfo.deserialize(params['ImageInfo'])
          end
          @Id = params['Id']
        end
      end

      # DescribeAssetImageRegistryVirusList返回参数结构体
      class DescribeAssetImageRegistryVirusListResponse < TencentCloud::Common::AbstractModel
        # @param List: 镜像漏洞列表
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type List: Array
        # @param TotalCount: 总数量
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type TotalCount: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :List, :TotalCount, :RequestId

        def initialize(list=nil, totalcount=nil, requestid=nil)
          @List = list
          @TotalCount = totalcount
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['List'].nil?
            @List = []
            params['List'].each do |i|
              imagevirus_tmp = ImageVirus.new
              imagevirus_tmp.deserialize(i)
              @List << imagevirus_tmp
            end
          end
          @TotalCount = params['TotalCount']
          @RequestId = params['RequestId']
        end
      end

      # DescribeAssetImageRegistryVulListExport请求参数结构体
      class DescribeAssetImageRegistryVulListExportRequest < TencentCloud::Common::AbstractModel
        # @param ExportField: 导出字段
        # @type ExportField: Array
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Filters: 过滤条件。
        # <li>Level- String - 是否必填：否 - 漏洞级别筛选，</li>
        # <li>Name - String - 是否必填：否 - 漏洞名称</li>
        # @type Filters: Array
        # @param ImageInfo: 镜像信息
        # @type ImageInfo: :class:`Tencentcloud::Tcss.v20201101.models.ImageInfo`
        # @param Id: 必填参数，镜像唯一ID，可通过DescribeAssetImageRegistryList接口获取
        # @type Id: Integer

        attr_accessor :ExportField, :Limit, :Offset, :Filters, :ImageInfo, :Id

        def initialize(exportfield=nil, limit=nil, offset=nil, filters=nil, imageinfo=nil, id=nil)
          @ExportField = exportfield
          @Limit = limit
          @Offset = offset
          @Filters = filters
          @ImageInfo = imageinfo
          @Id = id
        end

        def deserialize(params)
          @ExportField = params['ExportField']
          @Limit = params['Limit']
          @Offset = params['Offset']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              assetfilters_tmp = AssetFilters.new
              assetfilters_tmp.deserialize(i)
              @Filters << assetfilters_tmp
            end
          end
          unless params['ImageInfo'].nil?
            @ImageInfo = ImageInfo.new
            @ImageInfo.deserialize(params['ImageInfo'])
          end
          @Id = params['Id']
        end
      end

      # DescribeAssetImageRegistryVulListExport返回参数结构体
      class DescribeAssetImageRegistryVulListExportResponse < TencentCloud::Common::AbstractModel
        # @param DownloadUrl: excel文件下载地址
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type DownloadUrl: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :DownloadUrl, :RequestId

        def initialize(downloadurl=nil, requestid=nil)
          @DownloadUrl = downloadurl
          @RequestId = requestid
        end

        def deserialize(params)
          @DownloadUrl = params['DownloadUrl']
          @RequestId = params['RequestId']
        end
      end

      # DescribeAssetImageRegistryVulList请求参数结构体
      class DescribeAssetImageRegistryVulListRequest < TencentCloud::Common::AbstractModel
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Filters: 过滤条件。
        # <li>Level- String - 是否必填：否 - 漏洞级别筛选，</li>
        # <li>Name - String - 是否必填：否 - 漏洞名称</li>
        # @type Filters: Array
        # @param ImageInfo: 镜像信息
        # @type ImageInfo: :class:`Tencentcloud::Tcss.v20201101.models.ImageInfo`
        # @param Id: 必填参数，镜像唯一ID，可通过DescribeAssetImageRegistryList接口获取
        # @type Id: Integer

        attr_accessor :Limit, :Offset, :Filters, :ImageInfo, :Id

        def initialize(limit=nil, offset=nil, filters=nil, imageinfo=nil, id=nil)
          @Limit = limit
          @Offset = offset
          @Filters = filters
          @ImageInfo = imageinfo
          @Id = id
        end

        def deserialize(params)
          @Limit = params['Limit']
          @Offset = params['Offset']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              assetfilters_tmp = AssetFilters.new
              assetfilters_tmp.deserialize(i)
              @Filters << assetfilters_tmp
            end
          end
          unless params['ImageInfo'].nil?
            @ImageInfo = ImageInfo.new
            @ImageInfo.deserialize(params['ImageInfo'])
          end
          @Id = params['Id']
        end
      end

      # DescribeAssetImageRegistryVulList返回参数结构体
      class DescribeAssetImageRegistryVulListResponse < TencentCloud::Common::AbstractModel
        # @param List: 镜像漏洞列表
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type List: Array
        # @param TotalCount: 总数量
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type TotalCount: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :List, :TotalCount, :RequestId

        def initialize(list=nil, totalcount=nil, requestid=nil)
          @List = list
          @TotalCount = totalcount
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['List'].nil?
            @List = []
            params['List'].each do |i|
              imagevul_tmp = ImageVul.new
              imagevul_tmp.deserialize(i)
              @List << imagevul_tmp
            end
          end
          @TotalCount = params['TotalCount']
          @RequestId = params['RequestId']
        end
      end

      # DescribeAssetImageRiskListExport请求参数结构体
      class DescribeAssetImageRiskListExportRequest < TencentCloud::Common::AbstractModel
        # @param ExportField: 导出字段
        # @type ExportField: Array
        # @param ImageID: 镜像id
        # @type ImageID: String
        # @param Filters: 过滤条件。
        # <li>Level- String - 是否必填：否 - 风险级别 1,2,3,4，</li>
        # <li>Behavior - String - 是否必填：否 - 风险行为 1,2,3,4</li>
        # <li>Type - String - 是否必填：否 - 风险类型  1,2,</li>
        # @type Filters: Array

        attr_accessor :ExportField, :ImageID, :Filters

        def initialize(exportfield=nil, imageid=nil, filters=nil)
          @ExportField = exportfield
          @ImageID = imageid
          @Filters = filters
        end

        def deserialize(params)
          @ExportField = params['ExportField']
          @ImageID = params['ImageID']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              assetfilters_tmp = AssetFilters.new
              assetfilters_tmp.deserialize(i)
              @Filters << assetfilters_tmp
            end
          end
        end
      end

      # DescribeAssetImageRiskListExport返回参数结构体
      class DescribeAssetImageRiskListExportResponse < TencentCloud::Common::AbstractModel
        # @param DownloadUrl: excel文件下载地址
        # @type DownloadUrl: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :DownloadUrl, :RequestId

        def initialize(downloadurl=nil, requestid=nil)
          @DownloadUrl = downloadurl
          @RequestId = requestid
        end

        def deserialize(params)
          @DownloadUrl = params['DownloadUrl']
          @RequestId = params['RequestId']
        end
      end

      # DescribeAssetImageRiskList请求参数结构体
      class DescribeAssetImageRiskListRequest < TencentCloud::Common::AbstractModel
        # @param ImageID: 镜像id
        # @type ImageID: String
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Filters: 过滤条件。
        # <li>Level- String - 是否必填：否 - 风险级别 1,2,3,4，</li>
        # <li>Behavior - String - 是否必填：否 - 风险行为 1,2,3,4</li>
        # <li>Type - String - 是否必填：否 - 风险类型  1,2,</li>
        # @type Filters: Array
        # @param By: 排序字段
        # @type By: String
        # @param Order: 排序方式
        # @type Order: String

        attr_accessor :ImageID, :Limit, :Offset, :Filters, :By, :Order

        def initialize(imageid=nil, limit=nil, offset=nil, filters=nil, by=nil, order=nil)
          @ImageID = imageid
          @Limit = limit
          @Offset = offset
          @Filters = filters
          @By = by
          @Order = order
        end

        def deserialize(params)
          @ImageID = params['ImageID']
          @Limit = params['Limit']
          @Offset = params['Offset']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              assetfilters_tmp = AssetFilters.new
              assetfilters_tmp.deserialize(i)
              @Filters << assetfilters_tmp
            end
          end
          @By = params['By']
          @Order = params['Order']
        end
      end

      # DescribeAssetImageRiskList返回参数结构体
      class DescribeAssetImageRiskListResponse < TencentCloud::Common::AbstractModel
        # @param List: 镜像病毒列表
        # @type List: Array
        # @param TotalCount: 总数量
        # @type TotalCount: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :List, :TotalCount, :RequestId

        def initialize(list=nil, totalcount=nil, requestid=nil)
          @List = list
          @TotalCount = totalcount
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['List'].nil?
            @List = []
            params['List'].each do |i|
              imageriskinfo_tmp = ImageRiskInfo.new
              imageriskinfo_tmp.deserialize(i)
              @List << imageriskinfo_tmp
            end
          end
          @TotalCount = params['TotalCount']
          @RequestId = params['RequestId']
        end
      end

      # DescribeAssetImageScanSetting请求参数结构体
      class DescribeAssetImageScanSettingRequest < TencentCloud::Common::AbstractModel


        def initialize()
        end

        def deserialize(params)
        end
      end

      # DescribeAssetImageScanSetting返回参数结构体
      class DescribeAssetImageScanSettingResponse < TencentCloud::Common::AbstractModel
        # @param Enable: 开关
        # @type Enable: Boolean
        # @param ScanTime: 扫描时刻(完整时间;后端按0时区解析时分秒)
        # @type ScanTime: String
        # @param ScanPeriod: 扫描间隔
        # @type ScanPeriod: Integer
        # @param ScanVirus: 扫描木马
        # @type ScanVirus: Boolean
        # @param ScanRisk: 扫描敏感信息
        # @type ScanRisk: Boolean
        # @param ScanVul: 扫描漏洞
        # @type ScanVul: Boolean
        # @param All: 扫描全部镜像
        # @type All: Boolean
        # @param Images: 自定义扫描镜像
        # @type Images: Array
        # @param ContainerRunning: 镜像是否存在运行中的容器
        # @type ContainerRunning: Boolean
        # @param ScanScope: 扫描范围 0 全部授权镜像，1自选镜像，2 推荐扫描
        # @type ScanScope: Integer
        # @param ScanEndTime: 扫描结束时间 02:00 时分
        # @type ScanEndTime: String
        # @param ExcludeImages: 排除的扫描镜像
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ExcludeImages: Array
        # @param LastScanTime: 最后一次扫描时间
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type LastScanTime: String
        # @param ScanResult: 扫描结果(Success|InsufficientLicense|ImageNeedIsEmpty|InternalError)
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ScanResult: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :Enable, :ScanTime, :ScanPeriod, :ScanVirus, :ScanRisk, :ScanVul, :All, :Images, :ContainerRunning, :ScanScope, :ScanEndTime, :ExcludeImages, :LastScanTime, :ScanResult, :RequestId
        extend Gem::Deprecate
        deprecate :All, :none, 2024, 9
        deprecate :All=, :none, 2024, 9

        def initialize(enable=nil, scantime=nil, scanperiod=nil, scanvirus=nil, scanrisk=nil, scanvul=nil, all=nil, images=nil, containerrunning=nil, scanscope=nil, scanendtime=nil, excludeimages=nil, lastscantime=nil, scanresult=nil, requestid=nil)
          @Enable = enable
          @ScanTime = scantime
          @ScanPeriod = scanperiod
          @ScanVirus = scanvirus
          @ScanRisk = scanrisk
          @ScanVul = scanvul
          @All = all
          @Images = images
          @ContainerRunning = containerrunning
          @ScanScope = scanscope
          @ScanEndTime = scanendtime
          @ExcludeImages = excludeimages
          @LastScanTime = lastscantime
          @ScanResult = scanresult
          @RequestId = requestid
        end

        def deserialize(params)
          @Enable = params['Enable']
          @ScanTime = params['ScanTime']
          @ScanPeriod = params['ScanPeriod']
          @ScanVirus = params['ScanVirus']
          @ScanRisk = params['ScanRisk']
          @ScanVul = params['ScanVul']
          @All = params['All']
          @Images = params['Images']
          @ContainerRunning = params['ContainerRunning']
          @ScanScope = params['ScanScope']
          @ScanEndTime = params['ScanEndTime']
          @ExcludeImages = params['ExcludeImages']
          @LastScanTime = params['LastScanTime']
          @ScanResult = params['ScanResult']
          @RequestId = params['RequestId']
        end
      end

      # DescribeAssetImageScanStatus请求参数结构体
      class DescribeAssetImageScanStatusRequest < TencentCloud::Common::AbstractModel
        # @param TaskID: 任务id
        # @type TaskID: String

        attr_accessor :TaskID

        def initialize(taskid=nil)
          @TaskID = taskid
        end

        def deserialize(params)
          @TaskID = params['TaskID']
        end
      end

      # DescribeAssetImageScanStatus返回参数结构体
      class DescribeAssetImageScanStatusResponse < TencentCloud::Common::AbstractModel
        # @param ImageTotal: 镜像个数
        # @type ImageTotal: Integer
        # @param ImageScanCnt: 扫描镜像个数
        # @type ImageScanCnt: Integer
        # @param Status: 扫描状态
        # @type Status: String
        # @param Schedule: 扫描进度 ImageScanCnt/ImageTotal *100
        # @type Schedule: Integer
        # @param SuccessCount: 安全个数
        # @type SuccessCount: Integer
        # @param RiskCount: 风险个数
        # @type RiskCount: Integer
        # @param LeftSeconds: 剩余扫描时间
        # @type LeftSeconds: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :ImageTotal, :ImageScanCnt, :Status, :Schedule, :SuccessCount, :RiskCount, :LeftSeconds, :RequestId

        def initialize(imagetotal=nil, imagescancnt=nil, status=nil, schedule=nil, successcount=nil, riskcount=nil, leftseconds=nil, requestid=nil)
          @ImageTotal = imagetotal
          @ImageScanCnt = imagescancnt
          @Status = status
          @Schedule = schedule
          @SuccessCount = successcount
          @RiskCount = riskcount
          @LeftSeconds = leftseconds
          @RequestId = requestid
        end

        def deserialize(params)
          @ImageTotal = params['ImageTotal']
          @ImageScanCnt = params['ImageScanCnt']
          @Status = params['Status']
          @Schedule = params['Schedule']
          @SuccessCount = params['SuccessCount']
          @RiskCount = params['RiskCount']
          @LeftSeconds = params['LeftSeconds']
          @RequestId = params['RequestId']
        end
      end

      # DescribeAssetImageScanTask请求参数结构体
      class DescribeAssetImageScanTaskRequest < TencentCloud::Common::AbstractModel


        def initialize()
        end

        def deserialize(params)
        end
      end

      # DescribeAssetImageScanTask返回参数结构体
      class DescribeAssetImageScanTaskResponse < TencentCloud::Common::AbstractModel
        # @param TaskID: 任务id
        # @type TaskID: String
        # @param LastScanTime: 最近扫描时间
        # @type LastScanTime: String
        # @param Status: 扫描状态(READY:准备 SCANNING:扫描中 END:完成)
        # @type Status: String
        # @param SubStatus: 扫描子状态(Success:成功 Timeout:超时 Cancel:取消 Error:错误)
        # @type SubStatus: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TaskID, :LastScanTime, :Status, :SubStatus, :RequestId

        def initialize(taskid=nil, lastscantime=nil, status=nil, substatus=nil, requestid=nil)
          @TaskID = taskid
          @LastScanTime = lastscantime
          @Status = status
          @SubStatus = substatus
          @RequestId = requestid
        end

        def deserialize(params)
          @TaskID = params['TaskID']
          @LastScanTime = params['LastScanTime']
          @Status = params['Status']
          @SubStatus = params['SubStatus']
          @RequestId = params['RequestId']
        end
      end

      # DescribeAssetImageSimpleList请求参数结构体
      class DescribeAssetImageSimpleListRequest < TencentCloud::Common::AbstractModel
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Filters: 过滤条件。
        # <li>Keywords- String - 是否必填：否 - 镜像名、镜像id 称筛选，</li>
        # @type Filters: Array
        # @param By: 排序字段
        # @type By: String
        # @param Order: 排序方式 asc,desc
        # @type Order: String

        attr_accessor :Limit, :Offset, :Filters, :By, :Order

        def initialize(limit=nil, offset=nil, filters=nil, by=nil, order=nil)
          @Limit = limit
          @Offset = offset
          @Filters = filters
          @By = by
          @Order = order
        end

        def deserialize(params)
          @Limit = params['Limit']
          @Offset = params['Offset']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              assetfilters_tmp = AssetFilters.new
              assetfilters_tmp.deserialize(i)
              @Filters << assetfilters_tmp
            end
          end
          @By = params['By']
          @Order = params['Order']
        end
      end

      # DescribeAssetImageSimpleList返回参数结构体
      class DescribeAssetImageSimpleListResponse < TencentCloud::Common::AbstractModel
        # @param List: 镜像列表
        # @type List: Array
        # @param TotalCount: 总数量
        # @type TotalCount: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :List, :TotalCount, :RequestId

        def initialize(list=nil, totalcount=nil, requestid=nil)
          @List = list
          @TotalCount = totalcount
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['List'].nil?
            @List = []
            params['List'].each do |i|
              assetsimpleimageinfo_tmp = AssetSimpleImageInfo.new
              assetsimpleimageinfo_tmp.deserialize(i)
              @List << assetsimpleimageinfo_tmp
            end
          end
          @TotalCount = params['TotalCount']
          @RequestId = params['RequestId']
        end
      end

      # DescribeAssetImageVirusListExport请求参数结构体
      class DescribeAssetImageVirusListExportRequest < TencentCloud::Common::AbstractModel
        # @param ExportField: 列表支持字段
        # @type ExportField: Array
        # @param ImageID: 镜像id
        # @type ImageID: String
        # @param Filters: 过滤条件。
        # <li>Name- String - 是否必填：否 - 镜像名称筛选，</li>
        # <li>RiskLevel - String - 是否必填：否 - 风险等级  1,2,3,4</li>
        # @type Filters: Array

        attr_accessor :ExportField, :ImageID, :Filters

        def initialize(exportfield=nil, imageid=nil, filters=nil)
          @ExportField = exportfield
          @ImageID = imageid
          @Filters = filters
        end

        def deserialize(params)
          @ExportField = params['ExportField']
          @ImageID = params['ImageID']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              assetfilters_tmp = AssetFilters.new
              assetfilters_tmp.deserialize(i)
              @Filters << assetfilters_tmp
            end
          end
        end
      end

      # DescribeAssetImageVirusListExport返回参数结构体
      class DescribeAssetImageVirusListExportResponse < TencentCloud::Common::AbstractModel
        # @param DownloadUrl: excel文件下载地址
        # @type DownloadUrl: String
        # @param JobId: 任务ID
        # @type JobId: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :DownloadUrl, :JobId, :RequestId

        def initialize(downloadurl=nil, jobid=nil, requestid=nil)
          @DownloadUrl = downloadurl
          @JobId = jobid
          @RequestId = requestid
        end

        def deserialize(params)
          @DownloadUrl = params['DownloadUrl']
          @JobId = params['JobId']
          @RequestId = params['RequestId']
        end
      end

      # DescribeAssetImageVirusList请求参数结构体
      class DescribeAssetImageVirusListRequest < TencentCloud::Common::AbstractModel
        # @param ImageID: 镜像id
        # @type ImageID: String
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Filters: 过滤条件。
        # <li>Name- String - 是否必填：否 - 镜像名称筛选，</li>
        # <li>RiskLevel - String - 是否必填：否 - 风险等级  1,2,3,4</li>
        # @type Filters: Array
        # @param Order: 排序 asc desc
        # @type Order: String
        # @param By: 排序字段
        # @type By: String

        attr_accessor :ImageID, :Limit, :Offset, :Filters, :Order, :By

        def initialize(imageid=nil, limit=nil, offset=nil, filters=nil, order=nil, by=nil)
          @ImageID = imageid
          @Limit = limit
          @Offset = offset
          @Filters = filters
          @Order = order
          @By = by
        end

        def deserialize(params)
          @ImageID = params['ImageID']
          @Limit = params['Limit']
          @Offset = params['Offset']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              assetfilters_tmp = AssetFilters.new
              assetfilters_tmp.deserialize(i)
              @Filters << assetfilters_tmp
            end
          end
          @Order = params['Order']
          @By = params['By']
        end
      end

      # DescribeAssetImageVirusList返回参数结构体
      class DescribeAssetImageVirusListResponse < TencentCloud::Common::AbstractModel
        # @param List: 镜像病毒列表
        # @type List: Array
        # @param TotalCount: 总数量
        # @type TotalCount: Integer
        # @param VirusScanStatus: 病毒扫描状态
        # 0:未扫描
        # 1:扫描中
        # 2:扫描完成
        # 3:扫描出错
        # 4:扫描取消
        # @type VirusScanStatus: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :List, :TotalCount, :VirusScanStatus, :RequestId

        def initialize(list=nil, totalcount=nil, virusscanstatus=nil, requestid=nil)
          @List = list
          @TotalCount = totalcount
          @VirusScanStatus = virusscanstatus
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['List'].nil?
            @List = []
            params['List'].each do |i|
              imagevirusinfo_tmp = ImageVirusInfo.new
              imagevirusinfo_tmp.deserialize(i)
              @List << imagevirusinfo_tmp
            end
          end
          @TotalCount = params['TotalCount']
          @VirusScanStatus = params['VirusScanStatus']
          @RequestId = params['RequestId']
        end
      end

      # DescribeAssetImageVulListExport请求参数结构体
      class DescribeAssetImageVulListExportRequest < TencentCloud::Common::AbstractModel
        # @param ExportField: 导出字段
        # @type ExportField: Array
        # @param ImageID: 镜像id
        # @type ImageID: String
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Filters: 过滤条件。
        # <li>Name- String - 是否必填：否 - 漏洞名称名称筛选，</li>
        # <li>Level - String - 是否必填：否 - 风险等级  1,2,3,4</li>
        # @type Filters: Array

        attr_accessor :ExportField, :ImageID, :Limit, :Offset, :Filters

        def initialize(exportfield=nil, imageid=nil, limit=nil, offset=nil, filters=nil)
          @ExportField = exportfield
          @ImageID = imageid
          @Limit = limit
          @Offset = offset
          @Filters = filters
        end

        def deserialize(params)
          @ExportField = params['ExportField']
          @ImageID = params['ImageID']
          @Limit = params['Limit']
          @Offset = params['Offset']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              assetfilters_tmp = AssetFilters.new
              assetfilters_tmp.deserialize(i)
              @Filters << assetfilters_tmp
            end
          end
        end
      end

      # DescribeAssetImageVulListExport返回参数结构体
      class DescribeAssetImageVulListExportResponse < TencentCloud::Common::AbstractModel
        # @param DownloadUrl: excel文件下载地址
        # @type DownloadUrl: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :DownloadUrl, :RequestId

        def initialize(downloadurl=nil, requestid=nil)
          @DownloadUrl = downloadurl
          @RequestId = requestid
        end

        def deserialize(params)
          @DownloadUrl = params['DownloadUrl']
          @RequestId = params['RequestId']
        end
      end

      # DescribeAssetImageVulList请求参数结构体
      class DescribeAssetImageVulListRequest < TencentCloud::Common::AbstractModel
        # @param ImageID: 镜像id
        # @type ImageID: String
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Filters: 过滤条件。
        # <li>Name- String - 是否必填：否 - 漏洞名称名称筛选，</li>
        # <li>Level - String - 是否必填：否 - 风险等级  1,2,3,4</li>
        # @type Filters: Array
        # @param By: 排序字段（Level）
        # @type By: String
        # @param Order: 排序方式 + -
        # @type Order: String

        attr_accessor :ImageID, :Limit, :Offset, :Filters, :By, :Order

        def initialize(imageid=nil, limit=nil, offset=nil, filters=nil, by=nil, order=nil)
          @ImageID = imageid
          @Limit = limit
          @Offset = offset
          @Filters = filters
          @By = by
          @Order = order
        end

        def deserialize(params)
          @ImageID = params['ImageID']
          @Limit = params['Limit']
          @Offset = params['Offset']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              assetfilters_tmp = AssetFilters.new
              assetfilters_tmp.deserialize(i)
              @Filters << assetfilters_tmp
            end
          end
          @By = params['By']
          @Order = params['Order']
        end
      end

      # DescribeAssetImageVulList返回参数结构体
      class DescribeAssetImageVulListResponse < TencentCloud::Common::AbstractModel
        # @param List: 镜像漏洞列表
        # @type List: Array
        # @param TotalCount: 总数量
        # @type TotalCount: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :List, :TotalCount, :RequestId

        def initialize(list=nil, totalcount=nil, requestid=nil)
          @List = list
          @TotalCount = totalcount
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['List'].nil?
            @List = []
            params['List'].each do |i|
              imagesvul_tmp = ImagesVul.new
              imagesvul_tmp.deserialize(i)
              @List << imagesvul_tmp
            end
          end
          @TotalCount = params['TotalCount']
          @RequestId = params['RequestId']
        end
      end

      # DescribeAssetPortList请求参数结构体
      class DescribeAssetPortListRequest < TencentCloud::Common::AbstractModel
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Filters: 过滤条件。
        # <li>All - String - 是否必填：否 - 模糊查询可选字段</li>
        # <li>RunAs - String - 是否必填：否 - 运行用户筛选，</li>
        # <li>ContainerID - String - 是否必填：否 - 容器id</li>
        # <li>HostID- String - 是否必填：是 - 主机id</li>
        # <li>HostIP- string - 是否必填：否 - 主机ip搜索</li>
        # <li>ProcessName- string - 是否必填：否 - 进程名搜索</li>
        # @type Filters: Array

        attr_accessor :Limit, :Offset, :Filters

        def initialize(limit=nil, offset=nil, filters=nil)
          @Limit = limit
          @Offset = offset
          @Filters = filters
        end

        def deserialize(params)
          @Limit = params['Limit']
          @Offset = params['Offset']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              assetfilters_tmp = AssetFilters.new
              assetfilters_tmp.deserialize(i)
              @Filters << assetfilters_tmp
            end
          end
        end
      end

      # DescribeAssetPortList返回参数结构体
      class DescribeAssetPortListResponse < TencentCloud::Common::AbstractModel
        # @param List: 端口列表
        # @type List: Array
        # @param TotalCount: 总数量
        # @type TotalCount: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :List, :TotalCount, :RequestId

        def initialize(list=nil, totalcount=nil, requestid=nil)
          @List = list
          @TotalCount = totalcount
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['List'].nil?
            @List = []
            params['List'].each do |i|
              portinfo_tmp = PortInfo.new
              portinfo_tmp.deserialize(i)
              @List << portinfo_tmp
            end
          end
          @TotalCount = params['TotalCount']
          @RequestId = params['RequestId']
        end
      end

      # DescribeAssetProcessList请求参数结构体
      class DescribeAssetProcessListRequest < TencentCloud::Common::AbstractModel
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Filters: 过滤条件。
        # <li>RunAs - String - 是否必填：否 - 运行用户筛选，</li>
        # <li>ContainerID - String - 是否必填：否 - 容器id</li>
        # <li>HostID- String - 是否必填：是 - 主机id</li>
        # <li>HostIP- string - 是否必填：否 - 主机ip搜索</li>
        # <li>ProcessName- string - 是否必填：否 - 进程名搜索</li>
        # <li>Pid- string - 是否必填：否 - 进程id搜索(关联进程)</li>
        # @type Filters: Array

        attr_accessor :Limit, :Offset, :Filters

        def initialize(limit=nil, offset=nil, filters=nil)
          @Limit = limit
          @Offset = offset
          @Filters = filters
        end

        def deserialize(params)
          @Limit = params['Limit']
          @Offset = params['Offset']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              assetfilters_tmp = AssetFilters.new
              assetfilters_tmp.deserialize(i)
              @Filters << assetfilters_tmp
            end
          end
        end
      end

      # DescribeAssetProcessList返回参数结构体
      class DescribeAssetProcessListResponse < TencentCloud::Common::AbstractModel
        # @param List: 端口列表
        # @type List: Array
        # @param TotalCount: 总数量
        # @type TotalCount: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :List, :TotalCount, :RequestId

        def initialize(list=nil, totalcount=nil, requestid=nil)
          @List = list
          @TotalCount = totalcount
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['List'].nil?
            @List = []
            params['List'].each do |i|
              processinfo_tmp = ProcessInfo.new
              processinfo_tmp.deserialize(i)
              @List << processinfo_tmp
            end
          end
          @TotalCount = params['TotalCount']
          @RequestId = params['RequestId']
        end
      end

      # DescribeAssetSummary请求参数结构体
      class DescribeAssetSummaryRequest < TencentCloud::Common::AbstractModel


        def initialize()
        end

        def deserialize(params)
        end
      end

      # DescribeAssetSummary返回参数结构体
      class DescribeAssetSummaryResponse < TencentCloud::Common::AbstractModel
        # @param AppCnt: 应用个数
        # @type AppCnt: Integer
        # @param ContainerCnt: 容器个数
        # @type ContainerCnt: Integer
        # @param ContainerPause: 暂停的容器个数
        # @type ContainerPause: Integer
        # @param ContainerRunning: 运行的容器个数
        # @type ContainerRunning: Integer
        # @param ContainerStop: 停止运行的容器个数
        # @type ContainerStop: Integer
        # @param CreateTime: 创建时间
        # @type CreateTime: String
        # @param DbCnt: 数据库个数
        # @type DbCnt: Integer
        # @param ImageCnt: 镜像个数
        # @type ImageCnt: Integer
        # @param HostOnline: 主机在线个数
        # @type HostOnline: Integer
        # @param HostCnt: 主机个数
        # @type HostCnt: Integer
        # @param ImageHasRiskInfoCnt: 有风险的镜像个数
        # @type ImageHasRiskInfoCnt: Integer
        # @param ImageHasVirusCnt: 有病毒的镜像个数
        # @type ImageHasVirusCnt: Integer
        # @param ImageHasVulsCnt: 有漏洞的镜像个数
        # @type ImageHasVulsCnt: Integer
        # @param ImageUntrustCnt: 不受信任的镜像个数
        # @type ImageUntrustCnt: Integer
        # @param ListenPortCnt: 监听的端口个数
        # @type ListenPortCnt: Integer
        # @param ProcessCnt: 进程个数
        # @type ProcessCnt: Integer
        # @param WebServiceCnt: web服务个数
        # @type WebServiceCnt: Integer
        # @param LatestImageScanTime: 最近镜像扫描时间
        # @type LatestImageScanTime: String
        # @param ImageUnsafeCnt: 风险镜像个数
        # @type ImageUnsafeCnt: Integer
        # @param HostUnInstallCnt: 主机未安装agent数量
        # @type HostUnInstallCnt: Integer
        # @param SuperNodeCnt: 超级节点个数
        # @type SuperNodeCnt: Integer
        # @param SuperNodeRunningCnt: 超级节点运行个数
        # @type SuperNodeRunningCnt: Integer
        # @param TodayNewImageCnt: 今日新增镜像个数
        # @type TodayNewImageCnt: Integer
        # @param TodayUnsafeImageCnt: 今日新增风险镜像个数
        # @type TodayUnsafeImageCnt: Integer
        # @param RecommendedFixImageCnt: 推荐处置镜像个数
        # @type RecommendedFixImageCnt: Integer
        # @param ScannedImageCnt: 已扫描镜像个数
        # @type ScannedImageCnt: Integer
        # @param UnScannedImageCnt: 待扫描镜像个数
        # @type UnScannedImageCnt: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :AppCnt, :ContainerCnt, :ContainerPause, :ContainerRunning, :ContainerStop, :CreateTime, :DbCnt, :ImageCnt, :HostOnline, :HostCnt, :ImageHasRiskInfoCnt, :ImageHasVirusCnt, :ImageHasVulsCnt, :ImageUntrustCnt, :ListenPortCnt, :ProcessCnt, :WebServiceCnt, :LatestImageScanTime, :ImageUnsafeCnt, :HostUnInstallCnt, :SuperNodeCnt, :SuperNodeRunningCnt, :TodayNewImageCnt, :TodayUnsafeImageCnt, :RecommendedFixImageCnt, :ScannedImageCnt, :UnScannedImageCnt, :RequestId

        def initialize(appcnt=nil, containercnt=nil, containerpause=nil, containerrunning=nil, containerstop=nil, createtime=nil, dbcnt=nil, imagecnt=nil, hostonline=nil, hostcnt=nil, imagehasriskinfocnt=nil, imagehasviruscnt=nil, imagehasvulscnt=nil, imageuntrustcnt=nil, listenportcnt=nil, processcnt=nil, webservicecnt=nil, latestimagescantime=nil, imageunsafecnt=nil, hostuninstallcnt=nil, supernodecnt=nil, supernoderunningcnt=nil, todaynewimagecnt=nil, todayunsafeimagecnt=nil, recommendedfiximagecnt=nil, scannedimagecnt=nil, unscannedimagecnt=nil, requestid=nil)
          @AppCnt = appcnt
          @ContainerCnt = containercnt
          @ContainerPause = containerpause
          @ContainerRunning = containerrunning
          @ContainerStop = containerstop
          @CreateTime = createtime
          @DbCnt = dbcnt
          @ImageCnt = imagecnt
          @HostOnline = hostonline
          @HostCnt = hostcnt
          @ImageHasRiskInfoCnt = imagehasriskinfocnt
          @ImageHasVirusCnt = imagehasviruscnt
          @ImageHasVulsCnt = imagehasvulscnt
          @ImageUntrustCnt = imageuntrustcnt
          @ListenPortCnt = listenportcnt
          @ProcessCnt = processcnt
          @WebServiceCnt = webservicecnt
          @LatestImageScanTime = latestimagescantime
          @ImageUnsafeCnt = imageunsafecnt
          @HostUnInstallCnt = hostuninstallcnt
          @SuperNodeCnt = supernodecnt
          @SuperNodeRunningCnt = supernoderunningcnt
          @TodayNewImageCnt = todaynewimagecnt
          @TodayUnsafeImageCnt = todayunsafeimagecnt
          @RecommendedFixImageCnt = recommendedfiximagecnt
          @ScannedImageCnt = scannedimagecnt
          @UnScannedImageCnt = unscannedimagecnt
          @RequestId = requestid
        end

        def deserialize(params)
          @AppCnt = params['AppCnt']
          @ContainerCnt = params['ContainerCnt']
          @ContainerPause = params['ContainerPause']
          @ContainerRunning = params['ContainerRunning']
          @ContainerStop = params['ContainerStop']
          @CreateTime = params['CreateTime']
          @DbCnt = params['DbCnt']
          @ImageCnt = params['ImageCnt']
          @HostOnline = params['HostOnline']
          @HostCnt = params['HostCnt']
          @ImageHasRiskInfoCnt = params['ImageHasRiskInfoCnt']
          @ImageHasVirusCnt = params['ImageHasVirusCnt']
          @ImageHasVulsCnt = params['ImageHasVulsCnt']
          @ImageUntrustCnt = params['ImageUntrustCnt']
          @ListenPortCnt = params['ListenPortCnt']
          @ProcessCnt = params['ProcessCnt']
          @WebServiceCnt = params['WebServiceCnt']
          @LatestImageScanTime = params['LatestImageScanTime']
          @ImageUnsafeCnt = params['ImageUnsafeCnt']
          @HostUnInstallCnt = params['HostUnInstallCnt']
          @SuperNodeCnt = params['SuperNodeCnt']
          @SuperNodeRunningCnt = params['SuperNodeRunningCnt']
          @TodayNewImageCnt = params['TodayNewImageCnt']
          @TodayUnsafeImageCnt = params['TodayUnsafeImageCnt']
          @RecommendedFixImageCnt = params['RecommendedFixImageCnt']
          @ScannedImageCnt = params['ScannedImageCnt']
          @UnScannedImageCnt = params['UnScannedImageCnt']
          @RequestId = params['RequestId']
        end
      end

      # DescribeAssetSuperNodeList请求参数结构体
      class DescribeAssetSuperNodeListRequest < TencentCloud::Common::AbstractModel
        # @param Filters: 过滤条件。
        # <li>NodeID- String - 是否必填：否 - ID </li>
        # <li>NodeName- String - 是否必填：否 - 超级节点名称 </li>
        # <li>SubnetName- String - 是否必填：否 - VPC子网 </li>
        # <li>AgentStatus- String - 是否必填：否 - 安装状态UNINSTALL:未安装;INSTALLED:已安装;INSTALLING:安装中; </li>
        # @type Filters: Array
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param By: 排序字段
        # @type By: String
        # @param Order: 排序方式 asc,desc
        # @type Order: String

        attr_accessor :Filters, :Limit, :Offset, :By, :Order

        def initialize(filters=nil, limit=nil, offset=nil, by=nil, order=nil)
          @Filters = filters
          @Limit = limit
          @Offset = offset
          @By = by
          @Order = order
        end

        def deserialize(params)
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              runtimefilters_tmp = RunTimeFilters.new
              runtimefilters_tmp.deserialize(i)
              @Filters << runtimefilters_tmp
            end
          end
          @Limit = params['Limit']
          @Offset = params['Offset']
          @By = params['By']
          @Order = params['Order']
        end
      end

      # DescribeAssetSuperNodeList返回参数结构体
      class DescribeAssetSuperNodeListResponse < TencentCloud::Common::AbstractModel
        # @param List: 超级节点列表
        # @type List: Array
        # @param TotalCount: 总数
        # @type TotalCount: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :List, :TotalCount, :RequestId

        def initialize(list=nil, totalcount=nil, requestid=nil)
          @List = list
          @TotalCount = totalcount
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['List'].nil?
            @List = []
            params['List'].each do |i|
              supernodelistitem_tmp = SuperNodeListItem.new
              supernodelistitem_tmp.deserialize(i)
              @List << supernodelistitem_tmp
            end
          end
          @TotalCount = params['TotalCount']
          @RequestId = params['RequestId']
        end
      end

      # DescribeAssetSyncLastTime请求参数结构体
      class DescribeAssetSyncLastTimeRequest < TencentCloud::Common::AbstractModel


        def initialize()
        end

        def deserialize(params)
        end
      end

      # DescribeAssetSyncLastTime返回参数结构体
      class DescribeAssetSyncLastTimeResponse < TencentCloud::Common::AbstractModel
        # @param AssetSyncLastTime: 资产最近同步时间
        # @type AssetSyncLastTime: String
        # @param TaskStatus: 任务状态
        # PENDING:待处理
        # PROCESSING:处理中
        # PROCESSED:已完成
        # @type TaskStatus: String
        # @param TaskProcess: 任务进度(百分比)
        # @type TaskProcess: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :AssetSyncLastTime, :TaskStatus, :TaskProcess, :RequestId

        def initialize(assetsynclasttime=nil, taskstatus=nil, taskprocess=nil, requestid=nil)
          @AssetSyncLastTime = assetsynclasttime
          @TaskStatus = taskstatus
          @TaskProcess = taskprocess
          @RequestId = requestid
        end

        def deserialize(params)
          @AssetSyncLastTime = params['AssetSyncLastTime']
          @TaskStatus = params['TaskStatus']
          @TaskProcess = params['TaskProcess']
          @RequestId = params['RequestId']
        end
      end

      # DescribeAssetWebServiceList请求参数结构体
      class DescribeAssetWebServiceListRequest < TencentCloud::Common::AbstractModel
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Filters: 过滤条件。
        # <li>Keywords- String - 是否必填：否 - 模糊查询可选字段</li>
        # <li>Type- String - 是否必填：否 - 主机运行状态筛选，"Apache"
        # "Jboss"
        # "lighttpd"
        # "Nginx"
        # "Tomcat"</li>
        # @type Filters: Array

        attr_accessor :Limit, :Offset, :Filters

        def initialize(limit=nil, offset=nil, filters=nil)
          @Limit = limit
          @Offset = offset
          @Filters = filters
        end

        def deserialize(params)
          @Limit = params['Limit']
          @Offset = params['Offset']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              assetfilters_tmp = AssetFilters.new
              assetfilters_tmp.deserialize(i)
              @Filters << assetfilters_tmp
            end
          end
        end
      end

      # DescribeAssetWebServiceList返回参数结构体
      class DescribeAssetWebServiceListResponse < TencentCloud::Common::AbstractModel
        # @param List: 主机列表
        # @type List: Array
        # @param TotalCount: 总数量
        # @type TotalCount: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :List, :TotalCount, :RequestId

        def initialize(list=nil, totalcount=nil, requestid=nil)
          @List = list
          @TotalCount = totalcount
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['List'].nil?
            @List = []
            params['List'].each do |i|
              serviceinfo_tmp = ServiceInfo.new
              serviceinfo_tmp.deserialize(i)
              @List << serviceinfo_tmp
            end
          end
          @TotalCount = params['TotalCount']
          @RequestId = params['RequestId']
        end
      end

      # DescribeAutoAuthorizedRuleHost请求参数结构体
      class DescribeAutoAuthorizedRuleHostRequest < TencentCloud::Common::AbstractModel
        # @param RuleId: 规则id
        # @type RuleId: Integer
        # @param Limit: 需要返回的数量，默认为全部；
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0
        # @type Offset: Integer
        # @param Order: 排序字段
        # @type Order: String
        # @param By: 排序方式，asc，desc
        # @type By: String

        attr_accessor :RuleId, :Limit, :Offset, :Order, :By

        def initialize(ruleid=nil, limit=nil, offset=nil, order=nil, by=nil)
          @RuleId = ruleid
          @Limit = limit
          @Offset = offset
          @Order = order
          @By = by
        end

        def deserialize(params)
          @RuleId = params['RuleId']
          @Limit = params['Limit']
          @Offset = params['Offset']
          @Order = params['Order']
          @By = params['By']
        end
      end

      # DescribeAutoAuthorizedRuleHost返回参数结构体
      class DescribeAutoAuthorizedRuleHostResponse < TencentCloud::Common::AbstractModel
        # @param List: 镜像自动授权规则授权范围主机列表
        # @type List: Array
        # @param TotalCount: 总数量
        # @type TotalCount: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :List, :TotalCount, :RequestId

        def initialize(list=nil, totalcount=nil, requestid=nil)
          @List = list
          @TotalCount = totalcount
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['List'].nil?
            @List = []
            params['List'].each do |i|
              autoauthorizedrulehostinfo_tmp = AutoAuthorizedRuleHostInfo.new
              autoauthorizedrulehostinfo_tmp.deserialize(i)
              @List << autoauthorizedrulehostinfo_tmp
            end
          end
          @TotalCount = params['TotalCount']
          @RequestId = params['RequestId']
        end
      end

      # DescribeCheckItemList请求参数结构体
      class DescribeCheckItemListRequest < TencentCloud::Common::AbstractModel
        # @param Offset: 偏移量
        # @type Offset: Integer
        # @param Limit: 每次查询的最大记录数量
        # @type Limit: Integer
        # @param Filters: Name 可取值：
        # Name: 检查项名称
        # RiskType: 风险类别
        # RiskLevel: 风险等级
        # RiskTarget: 检查对象
        # RiskAttribute: 检测项所属分型线类型
        # Enable: 检查项是否开启(0:关闭 1:开启)
        # @type Filters: Array

        attr_accessor :Offset, :Limit, :Filters

        def initialize(offset=nil, limit=nil, filters=nil)
          @Offset = offset
          @Limit = limit
          @Filters = filters
        end

        def deserialize(params)
          @Offset = params['Offset']
          @Limit = params['Limit']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              compliancefilters_tmp = ComplianceFilters.new
              compliancefilters_tmp.deserialize(i)
              @Filters << compliancefilters_tmp
            end
          end
        end
      end

      # DescribeCheckItemList返回参数结构体
      class DescribeCheckItemListResponse < TencentCloud::Common::AbstractModel
        # @param ClusterCheckItems: 检查项详情数组
        # @type ClusterCheckItems: Array
        # @param TotalCount: 检查项总数
        # @type TotalCount: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :ClusterCheckItems, :TotalCount, :RequestId

        def initialize(clustercheckitems=nil, totalcount=nil, requestid=nil)
          @ClusterCheckItems = clustercheckitems
          @TotalCount = totalcount
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['ClusterCheckItems'].nil?
            @ClusterCheckItems = []
            params['ClusterCheckItems'].each do |i|
              clustercheckitem_tmp = ClusterCheckItem.new
              clustercheckitem_tmp.deserialize(i)
              @ClusterCheckItems << clustercheckitem_tmp
            end
          end
          @TotalCount = params['TotalCount']
          @RequestId = params['RequestId']
        end
      end

      # DescribeClusterDetail请求参数结构体
      class DescribeClusterDetailRequest < TencentCloud::Common::AbstractModel
        # @param ClusterId: 集群id
        # @type ClusterId: String

        attr_accessor :ClusterId

        def initialize(clusterid=nil)
          @ClusterId = clusterid
        end

        def deserialize(params)
          @ClusterId = params['ClusterId']
        end
      end

      # DescribeClusterDetail返回参数结构体
      class DescribeClusterDetailResponse < TencentCloud::Common::AbstractModel
        # @param ClusterId: 集群id
        # @type ClusterId: String
        # @param ClusterName: 集群名字
        # @type ClusterName: String
        # @param ScanTaskProgress: 当前集群扫描任务的进度，100表示扫描完成.
        # @type ScanTaskProgress: Integer
        # @param ClusterVersion: 集群版本
        # @type ClusterVersion: String
        # @param ContainerRuntime: 运行时组件
        # @type ContainerRuntime: String
        # @param ClusterNodeNum: 集群节点数
        # @type ClusterNodeNum: Integer
        # @param ClusterStatus: 集群状态 (Running 运行中 Creating 创建中 Abnormal 异常 )
        # @type ClusterStatus: String
        # @param ClusterType: 集群类型：为托管集群MANAGED_CLUSTER、独立集群INDEPENDENT_CLUSTER
        # @type ClusterType: String
        # @param Region: 集群区域
        # @type Region: String
        # @param SeriousRiskCount: 严重风险检查项的数量
        # @type SeriousRiskCount: Integer
        # @param HighRiskCount: 高风险检查项的数量
        # @type HighRiskCount: Integer
        # @param MiddleRiskCount: 中风险检查项的数量
        # @type MiddleRiskCount: Integer
        # @param HintRiskCount: 提示风险检查项的数量
        # @type HintRiskCount: Integer
        # @param CheckStatus: 检查任务的状态
        # @type CheckStatus: String
        # @param DefenderStatus: 防御容器状态
        # @type DefenderStatus: String
        # @param TaskCreateTime: 扫描任务创建时间
        # @type TaskCreateTime: String
        # @param NetworkType: 网络类型.PublicNetwork为公网类型,VPCNetwork为VPC网络
        # @type NetworkType: String
        # @param ApiServerAddress: API Server地址
        # @type ApiServerAddress: String
        # @param NodeCount: 节点数
        # @type NodeCount: Integer
        # @param NamespaceCount: 命名空间数
        # @type NamespaceCount: Integer
        # @param WorkloadCount: 工作负载数
        # @type WorkloadCount: Integer
        # @param PodCount: Pod数量
        # @type PodCount: Integer
        # @param ServiceCount: Service数量
        # @type ServiceCount: Integer
        # @param IngressCount: Ingress数量
        # @type IngressCount: Integer
        # @param MasterIps: 主节点的ip列表
        # @type MasterIps: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :ClusterId, :ClusterName, :ScanTaskProgress, :ClusterVersion, :ContainerRuntime, :ClusterNodeNum, :ClusterStatus, :ClusterType, :Region, :SeriousRiskCount, :HighRiskCount, :MiddleRiskCount, :HintRiskCount, :CheckStatus, :DefenderStatus, :TaskCreateTime, :NetworkType, :ApiServerAddress, :NodeCount, :NamespaceCount, :WorkloadCount, :PodCount, :ServiceCount, :IngressCount, :MasterIps, :RequestId

        def initialize(clusterid=nil, clustername=nil, scantaskprogress=nil, clusterversion=nil, containerruntime=nil, clusternodenum=nil, clusterstatus=nil, clustertype=nil, region=nil, seriousriskcount=nil, highriskcount=nil, middleriskcount=nil, hintriskcount=nil, checkstatus=nil, defenderstatus=nil, taskcreatetime=nil, networktype=nil, apiserveraddress=nil, nodecount=nil, namespacecount=nil, workloadcount=nil, podcount=nil, servicecount=nil, ingresscount=nil, masterips=nil, requestid=nil)
          @ClusterId = clusterid
          @ClusterName = clustername
          @ScanTaskProgress = scantaskprogress
          @ClusterVersion = clusterversion
          @ContainerRuntime = containerruntime
          @ClusterNodeNum = clusternodenum
          @ClusterStatus = clusterstatus
          @ClusterType = clustertype
          @Region = region
          @SeriousRiskCount = seriousriskcount
          @HighRiskCount = highriskcount
          @MiddleRiskCount = middleriskcount
          @HintRiskCount = hintriskcount
          @CheckStatus = checkstatus
          @DefenderStatus = defenderstatus
          @TaskCreateTime = taskcreatetime
          @NetworkType = networktype
          @ApiServerAddress = apiserveraddress
          @NodeCount = nodecount
          @NamespaceCount = namespacecount
          @WorkloadCount = workloadcount
          @PodCount = podcount
          @ServiceCount = servicecount
          @IngressCount = ingresscount
          @MasterIps = masterips
          @RequestId = requestid
        end

        def deserialize(params)
          @ClusterId = params['ClusterId']
          @ClusterName = params['ClusterName']
          @ScanTaskProgress = params['ScanTaskProgress']
          @ClusterVersion = params['ClusterVersion']
          @ContainerRuntime = params['ContainerRuntime']
          @ClusterNodeNum = params['ClusterNodeNum']
          @ClusterStatus = params['ClusterStatus']
          @ClusterType = params['ClusterType']
          @Region = params['Region']
          @SeriousRiskCount = params['SeriousRiskCount']
          @HighRiskCount = params['HighRiskCount']
          @MiddleRiskCount = params['MiddleRiskCount']
          @HintRiskCount = params['HintRiskCount']
          @CheckStatus = params['CheckStatus']
          @DefenderStatus = params['DefenderStatus']
          @TaskCreateTime = params['TaskCreateTime']
          @NetworkType = params['NetworkType']
          @ApiServerAddress = params['ApiServerAddress']
          @NodeCount = params['NodeCount']
          @NamespaceCount = params['NamespaceCount']
          @WorkloadCount = params['WorkloadCount']
          @PodCount = params['PodCount']
          @ServiceCount = params['ServiceCount']
          @IngressCount = params['IngressCount']
          @MasterIps = params['MasterIps']
          @RequestId = params['RequestId']
        end
      end

      # DescribeClusterNodes请求参数结构体
      class DescribeClusterNodesRequest < TencentCloud::Common::AbstractModel
        # @param ClusterId: 集群Id,不输入表示查询所有
        # @type ClusterId: String
        # @param Offset: 偏移量
        # @type Offset: Integer
        # @param Limit: 每次查询的最大记录数量
        # @type Limit: Integer
        # @param Filters: Name 可取值：
        # DefendStatus（防护状态）:
        # 	Defended 已防护
        # 	UnDefended 未防护
        # AgentStatus (容器agent状态):
        #  	OFFLINE 离线
        #  	ONLINE 在线
        #  	UNINSTALL 未安装
        # InstanceState (节点状态):
        #   	Running 运行中
        #   	Ready 准备
        #   	Notready 未准备好
        #   	Initializing 初始化
        #   	Failed 失败
        #   	Error 错误
        # InstanceRole (节点角色)
        #     WORKER 工作节点
        #     MASTER_ETCD 主节点
        #     SUPER 超级节点
        # @type Filters: Array
        # @param By: 排序字段
        # @type By: String
        # @param Order: 排序方式 asc,desc
        # @type Order: String

        attr_accessor :ClusterId, :Offset, :Limit, :Filters, :By, :Order

        def initialize(clusterid=nil, offset=nil, limit=nil, filters=nil, by=nil, order=nil)
          @ClusterId = clusterid
          @Offset = offset
          @Limit = limit
          @Filters = filters
          @By = by
          @Order = order
        end

        def deserialize(params)
          @ClusterId = params['ClusterId']
          @Offset = params['Offset']
          @Limit = params['Limit']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              compliancefilters_tmp = ComplianceFilters.new
              compliancefilters_tmp.deserialize(i)
              @Filters << compliancefilters_tmp
            end
          end
          @By = params['By']
          @Order = params['Order']
        end
      end

      # DescribeClusterNodes返回参数结构体
      class DescribeClusterNodesResponse < TencentCloud::Common::AbstractModel
        # @param TotalCount: 总数
        # @type TotalCount: Integer
        # @param ClusterNodeList: 节点列表
        # @type ClusterNodeList: Array
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TotalCount, :ClusterNodeList, :RequestId

        def initialize(totalcount=nil, clusternodelist=nil, requestid=nil)
          @TotalCount = totalcount
          @ClusterNodeList = clusternodelist
          @RequestId = requestid
        end

        def deserialize(params)
          @TotalCount = params['TotalCount']
          unless params['ClusterNodeList'].nil?
            @ClusterNodeList = []
            params['ClusterNodeList'].each do |i|
              clusternodeinfo_tmp = ClusterNodeInfo.new
              clusternodeinfo_tmp.deserialize(i)
              @ClusterNodeList << clusternodeinfo_tmp
            end
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeClusterSummary请求参数结构体
      class DescribeClusterSummaryRequest < TencentCloud::Common::AbstractModel


        def initialize()
        end

        def deserialize(params)
        end
      end

      # DescribeClusterSummary返回参数结构体
      class DescribeClusterSummaryResponse < TencentCloud::Common::AbstractModel
        # @param TotalCount: 集群总数
        # @type TotalCount: Integer
        # @param RiskClusterCount: 有风险的集群数量
        # @type RiskClusterCount: Integer
        # @param UncheckClusterCount: 未检查的集群数量
        # @type UncheckClusterCount: Integer
        # @param ManagedClusterCount: 托管集群数量
        # @type ManagedClusterCount: Integer
        # @param IndependentClusterCount: 独立集群数量
        # @type IndependentClusterCount: Integer
        # @param NoRiskClusterCount: 无风险的集群数量
        # @type NoRiskClusterCount: Integer
        # @param CheckedClusterCount: 已经检查集群数
        # @type CheckedClusterCount: Integer
        # @param AutoCheckClusterCount: 自动检查集群数
        # @type AutoCheckClusterCount: Integer
        # @param ManualCheckClusterCount: 手动检查集群数
        # @type ManualCheckClusterCount: Integer
        # @param FailedClusterCount: 检查失败集群数
        # @type FailedClusterCount: Integer
        # @param NotImportedClusterCount: 未导入的集群数量
        # @type NotImportedClusterCount: Integer
        # @param ServerlessClusterCount: eks集群数量
        # @type ServerlessClusterCount: Integer
        # @param TkeClusterCount: TKE集群数量
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type TkeClusterCount: Integer
        # @param UserCreateTencentClusterCount: 用户自建腾讯云集群数量
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type UserCreateTencentClusterCount: Integer
        # @param UserCreateHybridClusterCount: 用户自建集群混合云数量
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type UserCreateHybridClusterCount: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TotalCount, :RiskClusterCount, :UncheckClusterCount, :ManagedClusterCount, :IndependentClusterCount, :NoRiskClusterCount, :CheckedClusterCount, :AutoCheckClusterCount, :ManualCheckClusterCount, :FailedClusterCount, :NotImportedClusterCount, :ServerlessClusterCount, :TkeClusterCount, :UserCreateTencentClusterCount, :UserCreateHybridClusterCount, :RequestId

        def initialize(totalcount=nil, riskclustercount=nil, uncheckclustercount=nil, managedclustercount=nil, independentclustercount=nil, noriskclustercount=nil, checkedclustercount=nil, autocheckclustercount=nil, manualcheckclustercount=nil, failedclustercount=nil, notimportedclustercount=nil, serverlessclustercount=nil, tkeclustercount=nil, usercreatetencentclustercount=nil, usercreatehybridclustercount=nil, requestid=nil)
          @TotalCount = totalcount
          @RiskClusterCount = riskclustercount
          @UncheckClusterCount = uncheckclustercount
          @ManagedClusterCount = managedclustercount
          @IndependentClusterCount = independentclustercount
          @NoRiskClusterCount = noriskclustercount
          @CheckedClusterCount = checkedclustercount
          @AutoCheckClusterCount = autocheckclustercount
          @ManualCheckClusterCount = manualcheckclustercount
          @FailedClusterCount = failedclustercount
          @NotImportedClusterCount = notimportedclustercount
          @ServerlessClusterCount = serverlessclustercount
          @TkeClusterCount = tkeclustercount
          @UserCreateTencentClusterCount = usercreatetencentclustercount
          @UserCreateHybridClusterCount = usercreatehybridclustercount
          @RequestId = requestid
        end

        def deserialize(params)
          @TotalCount = params['TotalCount']
          @RiskClusterCount = params['RiskClusterCount']
          @UncheckClusterCount = params['UncheckClusterCount']
          @ManagedClusterCount = params['ManagedClusterCount']
          @IndependentClusterCount = params['IndependentClusterCount']
          @NoRiskClusterCount = params['NoRiskClusterCount']
          @CheckedClusterCount = params['CheckedClusterCount']
          @AutoCheckClusterCount = params['AutoCheckClusterCount']
          @ManualCheckClusterCount = params['ManualCheckClusterCount']
          @FailedClusterCount = params['FailedClusterCount']
          @NotImportedClusterCount = params['NotImportedClusterCount']
          @ServerlessClusterCount = params['ServerlessClusterCount']
          @TkeClusterCount = params['TkeClusterCount']
          @UserCreateTencentClusterCount = params['UserCreateTencentClusterCount']
          @UserCreateHybridClusterCount = params['UserCreateHybridClusterCount']
          @RequestId = params['RequestId']
        end
      end

      # DescribeComplianceAssetDetailInfo请求参数结构体
      class DescribeComplianceAssetDetailInfoRequest < TencentCloud::Common::AbstractModel
        # @param CustomerAssetId: 客户资产ID。
        # @type CustomerAssetId: Integer
        # @param AssetType: 资产类型 <li>ASSET_CONTAINER Docker容器</li> <li>ASSET_IMAGE Docker镜像</li> <li>ASSET_HOST Docker主机</li> <li>ASSET_K8S Kubernetes</li> <li>ASSET_CONTAINERD Containerd主机</li> <li>ASSET_CONTAINERD_CONTAINER Containerd容器</li>
        # @type AssetType: String

        attr_accessor :CustomerAssetId, :AssetType

        def initialize(customerassetid=nil, assettype=nil)
          @CustomerAssetId = customerassetid
          @AssetType = assettype
        end

        def deserialize(params)
          @CustomerAssetId = params['CustomerAssetId']
          @AssetType = params['AssetType']
        end
      end

      # DescribeComplianceAssetDetailInfo返回参数结构体
      class DescribeComplianceAssetDetailInfoResponse < TencentCloud::Common::AbstractModel
        # @param AssetDetailInfo: 某资产的详情。
        # @type AssetDetailInfo: :class:`Tencentcloud::Tcss.v20201101.models.ComplianceAssetDetailInfo`
        # @param ContainerDetailInfo: 当资产为容器时，返回此字段。
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ContainerDetailInfo: :class:`Tencentcloud::Tcss.v20201101.models.ComplianceContainerDetailInfo`
        # @param ImageDetailInfo: 当资产为镜像时，返回此字段。
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ImageDetailInfo: :class:`Tencentcloud::Tcss.v20201101.models.ComplianceImageDetailInfo`
        # @param HostDetailInfo: 当资产为主机时，返回此字段。
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type HostDetailInfo: :class:`Tencentcloud::Tcss.v20201101.models.ComplianceHostDetailInfo`
        # @param K8SDetailInfo: 当资产为K8S时，返回此字段。
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type K8SDetailInfo: :class:`Tencentcloud::Tcss.v20201101.models.ComplianceK8SDetailInfo`
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :AssetDetailInfo, :ContainerDetailInfo, :ImageDetailInfo, :HostDetailInfo, :K8SDetailInfo, :RequestId

        def initialize(assetdetailinfo=nil, containerdetailinfo=nil, imagedetailinfo=nil, hostdetailinfo=nil, k8sdetailinfo=nil, requestid=nil)
          @AssetDetailInfo = assetdetailinfo
          @ContainerDetailInfo = containerdetailinfo
          @ImageDetailInfo = imagedetailinfo
          @HostDetailInfo = hostdetailinfo
          @K8SDetailInfo = k8sdetailinfo
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['AssetDetailInfo'].nil?
            @AssetDetailInfo = ComplianceAssetDetailInfo.new
            @AssetDetailInfo.deserialize(params['AssetDetailInfo'])
          end
          unless params['ContainerDetailInfo'].nil?
            @ContainerDetailInfo = ComplianceContainerDetailInfo.new
            @ContainerDetailInfo.deserialize(params['ContainerDetailInfo'])
          end
          unless params['ImageDetailInfo'].nil?
            @ImageDetailInfo = ComplianceImageDetailInfo.new
            @ImageDetailInfo.deserialize(params['ImageDetailInfo'])
          end
          unless params['HostDetailInfo'].nil?
            @HostDetailInfo = ComplianceHostDetailInfo.new
            @HostDetailInfo.deserialize(params['HostDetailInfo'])
          end
          unless params['K8SDetailInfo'].nil?
            @K8SDetailInfo = ComplianceK8SDetailInfo.new
            @K8SDetailInfo.deserialize(params['K8SDetailInfo'])
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeComplianceAssetList请求参数结构体
      class DescribeComplianceAssetListRequest < TencentCloud::Common::AbstractModel
        # @param AssetTypeSet: 资产类型列表。
        # @type AssetTypeSet: Array
        # @param Offset: 起始偏移量，默认为0。
        # @type Offset: Integer
        # @param Limit: 返回的数据量，默认为10，最大为100。
        # @type Limit: Integer
        # @param Filters: 查询过滤器
        # @type Filters: Array

        attr_accessor :AssetTypeSet, :Offset, :Limit, :Filters

        def initialize(assettypeset=nil, offset=nil, limit=nil, filters=nil)
          @AssetTypeSet = assettypeset
          @Offset = offset
          @Limit = limit
          @Filters = filters
        end

        def deserialize(params)
          @AssetTypeSet = params['AssetTypeSet']
          @Offset = params['Offset']
          @Limit = params['Limit']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              compliancefilters_tmp = ComplianceFilters.new
              compliancefilters_tmp.deserialize(i)
              @Filters << compliancefilters_tmp
            end
          end
        end
      end

      # DescribeComplianceAssetList返回参数结构体
      class DescribeComplianceAssetListResponse < TencentCloud::Common::AbstractModel
        # @param TotalCount: 返回资产的总数。
        # @type TotalCount: Integer
        # @param AssetInfoList: 返回各类资产的列表。
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type AssetInfoList: Array
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TotalCount, :AssetInfoList, :RequestId

        def initialize(totalcount=nil, assetinfolist=nil, requestid=nil)
          @TotalCount = totalcount
          @AssetInfoList = assetinfolist
          @RequestId = requestid
        end

        def deserialize(params)
          @TotalCount = params['TotalCount']
          unless params['AssetInfoList'].nil?
            @AssetInfoList = []
            params['AssetInfoList'].each do |i|
              complianceassetinfo_tmp = ComplianceAssetInfo.new
              complianceassetinfo_tmp.deserialize(i)
              @AssetInfoList << complianceassetinfo_tmp
            end
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeComplianceAssetPolicyItemList请求参数结构体
      class DescribeComplianceAssetPolicyItemListRequest < TencentCloud::Common::AbstractModel
        # @param CustomerAssetId: 客户资产的ID。
        # @type CustomerAssetId: Integer
        # @param Offset: 起始偏移量，默认为0。
        # @type Offset: Integer
        # @param Limit: 要获取的数据量，默认为10，最大为100。
        # @type Limit: Integer
        # @param Filters: 过滤器列表。Name字段支持
        # RiskLevel， AppId
        # @type Filters: Array
        # @param AssetType: 资产类型 <li>ASSET_CONTAINER Docker容器</li> <li>ASSET_IMAGE Docker镜像</li> <li>ASSET_HOST Docker主机</li> <li>ASSET_K8S Kubernetes</li> <li>ASSET_CONTAINERD Containerd主机</li> <li>ASSET_CONTAINERD_CONTAINER Containerd容器</li>
        # @type AssetType: String

        attr_accessor :CustomerAssetId, :Offset, :Limit, :Filters, :AssetType

        def initialize(customerassetid=nil, offset=nil, limit=nil, filters=nil, assettype=nil)
          @CustomerAssetId = customerassetid
          @Offset = offset
          @Limit = limit
          @Filters = filters
          @AssetType = assettype
        end

        def deserialize(params)
          @CustomerAssetId = params['CustomerAssetId']
          @Offset = params['Offset']
          @Limit = params['Limit']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              compliancefilters_tmp = ComplianceFilters.new
              compliancefilters_tmp.deserialize(i)
              @Filters << compliancefilters_tmp
            end
          end
          @AssetType = params['AssetType']
        end
      end

      # DescribeComplianceAssetPolicyItemList返回参数结构体
      class DescribeComplianceAssetPolicyItemListResponse < TencentCloud::Common::AbstractModel
        # @param TotalCount: 返回检测项的总数。如果用户未启用基线检查，此处返回0。
        # @type TotalCount: Integer
        # @param AssetPolicyItemList: 返回某个资产下的检测项的列表。
        # @type AssetPolicyItemList: Array
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TotalCount, :AssetPolicyItemList, :RequestId

        def initialize(totalcount=nil, assetpolicyitemlist=nil, requestid=nil)
          @TotalCount = totalcount
          @AssetPolicyItemList = assetpolicyitemlist
          @RequestId = requestid
        end

        def deserialize(params)
          @TotalCount = params['TotalCount']
          unless params['AssetPolicyItemList'].nil?
            @AssetPolicyItemList = []
            params['AssetPolicyItemList'].each do |i|
              complianceassetpolicyitem_tmp = ComplianceAssetPolicyItem.new
              complianceassetpolicyitem_tmp.deserialize(i)
              @AssetPolicyItemList << complianceassetpolicyitem_tmp
            end
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeCompliancePeriodTaskList请求参数结构体
      class DescribeCompliancePeriodTaskListRequest < TencentCloud::Common::AbstractModel
        # @param AssetType: 资产的类型，取值为：
        # ASSET_CONTAINER, 容器
        # ASSET_IMAGE, 镜像
        # ASSET_HOST, 主机
        # ASSET_K8S, K8S资产
        # @type AssetType: String
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Limit: 需要返回的数量，默认为10，最大值为100。
        # @type Limit: Integer

        attr_accessor :AssetType, :Offset, :Limit

        def initialize(assettype=nil, offset=nil, limit=nil)
          @AssetType = assettype
          @Offset = offset
          @Limit = limit
        end

        def deserialize(params)
          @AssetType = params['AssetType']
          @Offset = params['Offset']
          @Limit = params['Limit']
        end
      end

      # DescribeCompliancePeriodTaskList返回参数结构体
      class DescribeCompliancePeriodTaskListResponse < TencentCloud::Common::AbstractModel
        # @param TotalCount: 定时任务的总量。
        # @type TotalCount: Integer
        # @param PeriodTaskSet: 定时任务信息的列表
        # @type PeriodTaskSet: Array
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TotalCount, :PeriodTaskSet, :RequestId

        def initialize(totalcount=nil, periodtaskset=nil, requestid=nil)
          @TotalCount = totalcount
          @PeriodTaskSet = periodtaskset
          @RequestId = requestid
        end

        def deserialize(params)
          @TotalCount = params['TotalCount']
          unless params['PeriodTaskSet'].nil?
            @PeriodTaskSet = []
            params['PeriodTaskSet'].each do |i|
              complianceperiodtask_tmp = CompliancePeriodTask.new
              complianceperiodtask_tmp.deserialize(i)
              @PeriodTaskSet << complianceperiodtask_tmp
            end
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeCompliancePolicyItemAffectedAssetList请求参数结构体
      class DescribeCompliancePolicyItemAffectedAssetListRequest < TencentCloud::Common::AbstractModel
        # @param CustomerPolicyItemId: DescribeComplianceTaskPolicyItemSummaryList返回的CustomerPolicyItemId，表示检测项的ID。
        # @type CustomerPolicyItemId: Integer
        # @param Offset: 起始偏移量，默认为0。
        # @type Offset: Integer
        # @param Limit: 需要返回的数量，默认为10，最大值为100。
        # @type Limit: Integer
        # @param Filters: 过滤条件。
        # Name - String
        # Name 可取值：NodeName, CheckResult
        # @type Filters: Array

        attr_accessor :CustomerPolicyItemId, :Offset, :Limit, :Filters

        def initialize(customerpolicyitemid=nil, offset=nil, limit=nil, filters=nil)
          @CustomerPolicyItemId = customerpolicyitemid
          @Offset = offset
          @Limit = limit
          @Filters = filters
        end

        def deserialize(params)
          @CustomerPolicyItemId = params['CustomerPolicyItemId']
          @Offset = params['Offset']
          @Limit = params['Limit']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              compliancefilters_tmp = ComplianceFilters.new
              compliancefilters_tmp.deserialize(i)
              @Filters << compliancefilters_tmp
            end
          end
        end
      end

      # DescribeCompliancePolicyItemAffectedAssetList返回参数结构体
      class DescribeCompliancePolicyItemAffectedAssetListResponse < TencentCloud::Common::AbstractModel
        # @param AffectedAssetList: 返回各检测项所影响的资产的列表。
        # @type AffectedAssetList: Array
        # @param TotalCount: 检测项影响的资产的总数。
        # @type TotalCount: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :AffectedAssetList, :TotalCount, :RequestId

        def initialize(affectedassetlist=nil, totalcount=nil, requestid=nil)
          @AffectedAssetList = affectedassetlist
          @TotalCount = totalcount
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['AffectedAssetList'].nil?
            @AffectedAssetList = []
            params['AffectedAssetList'].each do |i|
              complianceaffectedasset_tmp = ComplianceAffectedAsset.new
              complianceaffectedasset_tmp.deserialize(i)
              @AffectedAssetList << complianceaffectedasset_tmp
            end
          end
          @TotalCount = params['TotalCount']
          @RequestId = params['RequestId']
        end
      end

      # DescribeCompliancePolicyItemAffectedSummary请求参数结构体
      class DescribeCompliancePolicyItemAffectedSummaryRequest < TencentCloud::Common::AbstractModel
        # @param CustomerPolicyItemId: DescribeComplianceTaskPolicyItemSummaryList返回的CustomerPolicyItemId，表示检测项的ID。
        # @type CustomerPolicyItemId: Integer

        attr_accessor :CustomerPolicyItemId

        def initialize(customerpolicyitemid=nil)
          @CustomerPolicyItemId = customerpolicyitemid
        end

        def deserialize(params)
          @CustomerPolicyItemId = params['CustomerPolicyItemId']
        end
      end

      # DescribeCompliancePolicyItemAffectedSummary返回参数结构体
      class DescribeCompliancePolicyItemAffectedSummaryResponse < TencentCloud::Common::AbstractModel
        # @param PolicyItemSummary: 返回各检测项影响的资产的汇总信息。
        # @type PolicyItemSummary: :class:`Tencentcloud::Tcss.v20201101.models.CompliancePolicyItemSummary`
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :PolicyItemSummary, :RequestId

        def initialize(policyitemsummary=nil, requestid=nil)
          @PolicyItemSummary = policyitemsummary
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['PolicyItemSummary'].nil?
            @PolicyItemSummary = CompliancePolicyItemSummary.new
            @PolicyItemSummary.deserialize(params['PolicyItemSummary'])
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeComplianceScanFailedAssetList请求参数结构体
      class DescribeComplianceScanFailedAssetListRequest < TencentCloud::Common::AbstractModel
        # @param AssetTypeSet: 资产类型列表。
        # ASSET_CONTAINER, 容器
        # ASSET_IMAGE, 镜像
        # ASSET_HOST, 主机
        # ASSET_K8S, K8S资产
        # @type AssetTypeSet: Array
        # @param Offset: 起始偏移量，默认为0。
        # @type Offset: Integer
        # @param Limit: 返回的数据量，默认为10，最大为100。
        # @type Limit: Integer
        # @param Filters: 查询过滤器
        # @type Filters: Array

        attr_accessor :AssetTypeSet, :Offset, :Limit, :Filters

        def initialize(assettypeset=nil, offset=nil, limit=nil, filters=nil)
          @AssetTypeSet = assettypeset
          @Offset = offset
          @Limit = limit
          @Filters = filters
        end

        def deserialize(params)
          @AssetTypeSet = params['AssetTypeSet']
          @Offset = params['Offset']
          @Limit = params['Limit']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              compliancefilters_tmp = ComplianceFilters.new
              compliancefilters_tmp.deserialize(i)
              @Filters << compliancefilters_tmp
            end
          end
        end
      end

      # DescribeComplianceScanFailedAssetList返回参数结构体
      class DescribeComplianceScanFailedAssetListResponse < TencentCloud::Common::AbstractModel
        # @param TotalCount: 返回检测失败的资产的总数。
        # @type TotalCount: Integer
        # @param ScanFailedAssetList: 返回各类检测失败的资产的汇总信息的列表。
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ScanFailedAssetList: Array
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TotalCount, :ScanFailedAssetList, :RequestId

        def initialize(totalcount=nil, scanfailedassetlist=nil, requestid=nil)
          @TotalCount = totalcount
          @ScanFailedAssetList = scanfailedassetlist
          @RequestId = requestid
        end

        def deserialize(params)
          @TotalCount = params['TotalCount']
          unless params['ScanFailedAssetList'].nil?
            @ScanFailedAssetList = []
            params['ScanFailedAssetList'].each do |i|
              compliancescanfailedasset_tmp = ComplianceScanFailedAsset.new
              compliancescanfailedasset_tmp.deserialize(i)
              @ScanFailedAssetList << compliancescanfailedasset_tmp
            end
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeComplianceTaskAssetSummary请求参数结构体
      class DescribeComplianceTaskAssetSummaryRequest < TencentCloud::Common::AbstractModel
        # @param AssetTypeSet: 资产类型列表。
        # ASSET_CONTAINER, 容器
        # ASSET_IMAGE, 镜像
        # ASSET_HOST, 主机
        # ASSET_K8S, K8S资产
        # @type AssetTypeSet: Array

        attr_accessor :AssetTypeSet

        def initialize(assettypeset=nil)
          @AssetTypeSet = assettypeset
        end

        def deserialize(params)
          @AssetTypeSet = params['AssetTypeSet']
        end
      end

      # DescribeComplianceTaskAssetSummary返回参数结构体
      class DescribeComplianceTaskAssetSummaryResponse < TencentCloud::Common::AbstractModel
        # @param Status: 返回用户的状态，

        # USER_UNINIT: 用户未初始化。
        # USER_INITIALIZING，表示用户正在初始化环境。
        # USER_NORMAL: 正常状态。
        # @type Status: String
        # @param AssetSummaryList: 返回各类资产的汇总信息的列表。
        # @type AssetSummaryList: Array
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :Status, :AssetSummaryList, :RequestId

        def initialize(status=nil, assetsummarylist=nil, requestid=nil)
          @Status = status
          @AssetSummaryList = assetsummarylist
          @RequestId = requestid
        end

        def deserialize(params)
          @Status = params['Status']
          unless params['AssetSummaryList'].nil?
            @AssetSummaryList = []
            params['AssetSummaryList'].each do |i|
              complianceassetsummary_tmp = ComplianceAssetSummary.new
              complianceassetsummary_tmp.deserialize(i)
              @AssetSummaryList << complianceassetsummary_tmp
            end
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeComplianceTaskPolicyItemSummaryList请求参数结构体
      class DescribeComplianceTaskPolicyItemSummaryListRequest < TencentCloud::Common::AbstractModel
        # @param AssetType: 资产类型。仅查询与指定资产类型相关的检测项。

        # ASSET_CONTAINER, 容器

        # ASSET_IMAGE, 镜像

        # ASSET_HOST, 主机

        # ASSET_K8S, K8S资产
        # @type AssetType: String
        # @param Offset: 起始偏移量，默认为0。
        # @type Offset: Integer
        # @param Limit: 需要返回的数量，默认为10，最大值为100。
        # @type Limit: Integer
        # @param Filters: 过滤条件 <li>Name      string 检测项名字</li> <li>ItemType  string 检测项类型</li> <li>RiskLevel string 威胁等级</li> <li>IsOpen    int    是否开启</li>
        # @type Filters: Array

        attr_accessor :AssetType, :Offset, :Limit, :Filters

        def initialize(assettype=nil, offset=nil, limit=nil, filters=nil)
          @AssetType = assettype
          @Offset = offset
          @Limit = limit
          @Filters = filters
        end

        def deserialize(params)
          @AssetType = params['AssetType']
          @Offset = params['Offset']
          @Limit = params['Limit']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              compliancefilters_tmp = ComplianceFilters.new
              compliancefilters_tmp.deserialize(i)
              @Filters << compliancefilters_tmp
            end
          end
        end
      end

      # DescribeComplianceTaskPolicyItemSummaryList返回参数结构体
      class DescribeComplianceTaskPolicyItemSummaryListResponse < TencentCloud::Common::AbstractModel
        # @param TaskId: 返回最近一次合规检查任务的ID。这个任务为本次所展示数据的来源。
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type TaskId: Integer
        # @param TotalCount: 返回检测项的总数。
        # @type TotalCount: Integer
        # @param PolicyItemSummaryList: 返回各检测项对应的汇总信息的列表。
        # @type PolicyItemSummaryList: Array
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TaskId, :TotalCount, :PolicyItemSummaryList, :RequestId

        def initialize(taskid=nil, totalcount=nil, policyitemsummarylist=nil, requestid=nil)
          @TaskId = taskid
          @TotalCount = totalcount
          @PolicyItemSummaryList = policyitemsummarylist
          @RequestId = requestid
        end

        def deserialize(params)
          @TaskId = params['TaskId']
          @TotalCount = params['TotalCount']
          unless params['PolicyItemSummaryList'].nil?
            @PolicyItemSummaryList = []
            params['PolicyItemSummaryList'].each do |i|
              compliancepolicyitemsummary_tmp = CompliancePolicyItemSummary.new
              compliancepolicyitemsummary_tmp.deserialize(i)
              @PolicyItemSummaryList << compliancepolicyitemsummary_tmp
            end
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeComplianceWhitelistItemList请求参数结构体
      class DescribeComplianceWhitelistItemListRequest < TencentCloud::Common::AbstractModel
        # @param Offset: 起始偏移量，默认为0。
        # @type Offset: Integer
        # @param Limit: 要获取的数量，默认为10，最大为100。
        # @type Limit: Integer
        # @param AssetTypeSet: 资产类型列表。
        # @type AssetTypeSet: Array
        # @param Filters: 查询过滤器
        # @type Filters: Array
        # @param By: 排序字段
        # @type By: String
        # @param Order: 排序方式 desc asc
        # @type Order: String

        attr_accessor :Offset, :Limit, :AssetTypeSet, :Filters, :By, :Order

        def initialize(offset=nil, limit=nil, assettypeset=nil, filters=nil, by=nil, order=nil)
          @Offset = offset
          @Limit = limit
          @AssetTypeSet = assettypeset
          @Filters = filters
          @By = by
          @Order = order
        end

        def deserialize(params)
          @Offset = params['Offset']
          @Limit = params['Limit']
          @AssetTypeSet = params['AssetTypeSet']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              compliancefilters_tmp = ComplianceFilters.new
              compliancefilters_tmp.deserialize(i)
              @Filters << compliancefilters_tmp
            end
          end
          @By = params['By']
          @Order = params['Order']
        end
      end

      # DescribeComplianceWhitelistItemList返回参数结构体
      class DescribeComplianceWhitelistItemListResponse < TencentCloud::Common::AbstractModel
        # @param WhitelistItemSet: 白名单项的列表。
        # @type WhitelistItemSet: Array
        # @param TotalCount: 白名单项的总数。
        # @type TotalCount: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :WhitelistItemSet, :TotalCount, :RequestId

        def initialize(whitelistitemset=nil, totalcount=nil, requestid=nil)
          @WhitelistItemSet = whitelistitemset
          @TotalCount = totalcount
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['WhitelistItemSet'].nil?
            @WhitelistItemSet = []
            params['WhitelistItemSet'].each do |i|
              compliancewhitelistitem_tmp = ComplianceWhitelistItem.new
              compliancewhitelistitem_tmp.deserialize(i)
              @WhitelistItemSet << compliancewhitelistitem_tmp
            end
          end
          @TotalCount = params['TotalCount']
          @RequestId = params['RequestId']
        end
      end

      # DescribeContainerAssetSummary请求参数结构体
      class DescribeContainerAssetSummaryRequest < TencentCloud::Common::AbstractModel


        def initialize()
        end

        def deserialize(params)
        end
      end

      # DescribeContainerAssetSummary返回参数结构体
      class DescribeContainerAssetSummaryResponse < TencentCloud::Common::AbstractModel
        # @param ContainerTotalCnt: 容器总数
        # @type ContainerTotalCnt: Integer
        # @param ContainerRunningCnt: 正在运行容器数量
        # @type ContainerRunningCnt: Integer
        # @param ContainerPauseCnt: 暂停运行容器数量
        # @type ContainerPauseCnt: Integer
        # @param ContainerStopped: 停止运行容器数量
        # @type ContainerStopped: Integer
        # @param ImageCnt: 本地镜像数量
        # @type ImageCnt: Integer
        # @param HostCnt: 主机节点数量
        # @type HostCnt: Integer
        # @param HostRunningCnt: 主机正在运行节点数量
        # @type HostRunningCnt: Integer
        # @param HostOfflineCnt: 主机离线节点数量
        # @type HostOfflineCnt: Integer
        # @param ImageRegistryCnt: 镜像仓库数量
        # @type ImageRegistryCnt: Integer
        # @param ImageTotalCnt: 镜像总数
        # @type ImageTotalCnt: Integer
        # @param HostUnInstallCnt: 主机未安装agent数量
        # @type HostUnInstallCnt: Integer
        # @param HostSuperNodeCnt: 超级节点个数
        # @type HostSuperNodeCnt: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :ContainerTotalCnt, :ContainerRunningCnt, :ContainerPauseCnt, :ContainerStopped, :ImageCnt, :HostCnt, :HostRunningCnt, :HostOfflineCnt, :ImageRegistryCnt, :ImageTotalCnt, :HostUnInstallCnt, :HostSuperNodeCnt, :RequestId

        def initialize(containertotalcnt=nil, containerrunningcnt=nil, containerpausecnt=nil, containerstopped=nil, imagecnt=nil, hostcnt=nil, hostrunningcnt=nil, hostofflinecnt=nil, imageregistrycnt=nil, imagetotalcnt=nil, hostuninstallcnt=nil, hostsupernodecnt=nil, requestid=nil)
          @ContainerTotalCnt = containertotalcnt
          @ContainerRunningCnt = containerrunningcnt
          @ContainerPauseCnt = containerpausecnt
          @ContainerStopped = containerstopped
          @ImageCnt = imagecnt
          @HostCnt = hostcnt
          @HostRunningCnt = hostrunningcnt
          @HostOfflineCnt = hostofflinecnt
          @ImageRegistryCnt = imageregistrycnt
          @ImageTotalCnt = imagetotalcnt
          @HostUnInstallCnt = hostuninstallcnt
          @HostSuperNodeCnt = hostsupernodecnt
          @RequestId = requestid
        end

        def deserialize(params)
          @ContainerTotalCnt = params['ContainerTotalCnt']
          @ContainerRunningCnt = params['ContainerRunningCnt']
          @ContainerPauseCnt = params['ContainerPauseCnt']
          @ContainerStopped = params['ContainerStopped']
          @ImageCnt = params['ImageCnt']
          @HostCnt = params['HostCnt']
          @HostRunningCnt = params['HostRunningCnt']
          @HostOfflineCnt = params['HostOfflineCnt']
          @ImageRegistryCnt = params['ImageRegistryCnt']
          @ImageTotalCnt = params['ImageTotalCnt']
          @HostUnInstallCnt = params['HostUnInstallCnt']
          @HostSuperNodeCnt = params['HostSuperNodeCnt']
          @RequestId = params['RequestId']
        end
      end

      # DescribeContainerSecEventSummary请求参数结构体
      class DescribeContainerSecEventSummaryRequest < TencentCloud::Common::AbstractModel


        def initialize()
        end

        def deserialize(params)
        end
      end

      # DescribeContainerSecEventSummary返回参数结构体
      class DescribeContainerSecEventSummaryResponse < TencentCloud::Common::AbstractModel
        # @param UnhandledEscapeCnt: 未处理逃逸事件
        # @type UnhandledEscapeCnt: Integer
        # @param UnhandledReverseShellCnt: 未处理反弹shell事件
        # @type UnhandledReverseShellCnt: Integer
        # @param UnhandledRiskSyscallCnt: 未处理高危系统调用
        # @type UnhandledRiskSyscallCnt: Integer
        # @param UnhandledAbnormalProcessCnt: 未处理异常进程
        # @type UnhandledAbnormalProcessCnt: Integer
        # @param UnhandledFileCnt: 未处理文件篡改
        # @type UnhandledFileCnt: Integer
        # @param UnhandledVirusEventCnt: 未处理木马事件
        # @type UnhandledVirusEventCnt: Integer
        # @param UnhandledMaliciousConnectionEventCnt: 未处理恶意外连事件
        # @type UnhandledMaliciousConnectionEventCnt: Integer
        # @param UnhandledK8sApiEventCnt: 未处理k8sApi事件
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type UnhandledK8sApiEventCnt: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :UnhandledEscapeCnt, :UnhandledReverseShellCnt, :UnhandledRiskSyscallCnt, :UnhandledAbnormalProcessCnt, :UnhandledFileCnt, :UnhandledVirusEventCnt, :UnhandledMaliciousConnectionEventCnt, :UnhandledK8sApiEventCnt, :RequestId

        def initialize(unhandledescapecnt=nil, unhandledreverseshellcnt=nil, unhandledrisksyscallcnt=nil, unhandledabnormalprocesscnt=nil, unhandledfilecnt=nil, unhandledviruseventcnt=nil, unhandledmaliciousconnectioneventcnt=nil, unhandledk8sapieventcnt=nil, requestid=nil)
          @UnhandledEscapeCnt = unhandledescapecnt
          @UnhandledReverseShellCnt = unhandledreverseshellcnt
          @UnhandledRiskSyscallCnt = unhandledrisksyscallcnt
          @UnhandledAbnormalProcessCnt = unhandledabnormalprocesscnt
          @UnhandledFileCnt = unhandledfilecnt
          @UnhandledVirusEventCnt = unhandledviruseventcnt
          @UnhandledMaliciousConnectionEventCnt = unhandledmaliciousconnectioneventcnt
          @UnhandledK8sApiEventCnt = unhandledk8sapieventcnt
          @RequestId = requestid
        end

        def deserialize(params)
          @UnhandledEscapeCnt = params['UnhandledEscapeCnt']
          @UnhandledReverseShellCnt = params['UnhandledReverseShellCnt']
          @UnhandledRiskSyscallCnt = params['UnhandledRiskSyscallCnt']
          @UnhandledAbnormalProcessCnt = params['UnhandledAbnormalProcessCnt']
          @UnhandledFileCnt = params['UnhandledFileCnt']
          @UnhandledVirusEventCnt = params['UnhandledVirusEventCnt']
          @UnhandledMaliciousConnectionEventCnt = params['UnhandledMaliciousConnectionEventCnt']
          @UnhandledK8sApiEventCnt = params['UnhandledK8sApiEventCnt']
          @RequestId = params['RequestId']
        end
      end

      # DescribeESAggregations请求参数结构体
      class DescribeESAggregationsRequest < TencentCloud::Common::AbstractModel
        # @param Query: ES聚合条件JSON
        # @type Query: String

        attr_accessor :Query

        def initialize(query=nil)
          @Query = query
        end

        def deserialize(params)
          @Query = params['Query']
        end
      end

      # DescribeESAggregations返回参数结构体
      class DescribeESAggregationsResponse < TencentCloud::Common::AbstractModel
        # @param Data: ES聚合结果JSON
        # @type Data: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :Data, :RequestId

        def initialize(data=nil, requestid=nil)
          @Data = data
          @RequestId = requestid
        end

        def deserialize(params)
          @Data = params['Data']
          @RequestId = params['RequestId']
        end
      end

      # DescribeESHits请求参数结构体
      class DescribeESHitsRequest < TencentCloud::Common::AbstractModel
        # @param Query: ES查询条件JSON
        # @type Query: String
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Limit: 返回数量，最大值为100。
        # @type Limit: Integer

        attr_accessor :Query, :Offset, :Limit

        def initialize(query=nil, offset=nil, limit=nil)
          @Query = query
          @Offset = offset
          @Limit = limit
        end

        def deserialize(params)
          @Query = params['Query']
          @Offset = params['Offset']
          @Limit = params['Limit']
        end
      end

      # DescribeESHits返回参数结构体
      class DescribeESHitsResponse < TencentCloud::Common::AbstractModel
        # @param Data: ES查询结果JSON
        # @type Data: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :Data, :RequestId

        def initialize(data=nil, requestid=nil)
          @Data = data
          @RequestId = requestid
        end

        def deserialize(params)
          @Data = params['Data']
          @RequestId = params['RequestId']
        end
      end

      # DescribeEmergencyVulList请求参数结构体
      class DescribeEmergencyVulListRequest < TencentCloud::Common::AbstractModel
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Filters: 过滤条件。
        # <li>Level- String - 是否必填：否 - 威胁等级，CRITICAL:严重 HIGH:高/MIDDLE:中/LOW:低</li>
        # <li>Tags- string - 是否必填：否 - 漏洞标签，POC，EXP。</li>
        # <li>CanBeFixed- string - 是否必填：否 - 是否可修复true,false。</li>
        # <li>CVEID- string - 是否必填：否 - CVE编号</li>
        # <li>ImageID- string - 是否必填：否 - 镜像ID</li>
        # <li>ImageName- String -是否必填: 否 - 镜像名称</li>
        # <li>ContainerID- string -是否必填: 否 - 容器ID</li>
        # <li>ContainerName- string -是否必填: 否 - 容器名称</li>
        # <li>ComponentName- string -是否必填: 否 - 组件名称</li>
        # <li>ComponentVersion- string -是否必填: 否 - 组件版本</li>
        # <li>Name- string -是否必填: 否 - 漏洞名称</li>
        # @type Filters: Array
        # @param Order: 排序方式
        # @type Order: String
        # @param By: 排序字段
        # @type By: String

        attr_accessor :Limit, :Offset, :Filters, :Order, :By

        def initialize(limit=nil, offset=nil, filters=nil, order=nil, by=nil)
          @Limit = limit
          @Offset = offset
          @Filters = filters
          @Order = order
          @By = by
        end

        def deserialize(params)
          @Limit = params['Limit']
          @Offset = params['Offset']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              runtimefilters_tmp = RunTimeFilters.new
              runtimefilters_tmp.deserialize(i)
              @Filters << runtimefilters_tmp
            end
          end
          @Order = params['Order']
          @By = params['By']
        end
      end

      # DescribeEmergencyVulList返回参数结构体
      class DescribeEmergencyVulListResponse < TencentCloud::Common::AbstractModel
        # @param TotalCount: 漏洞总数
        # @type TotalCount: Integer
        # @param List: 漏洞列表
        # @type List: Array
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TotalCount, :List, :RequestId

        def initialize(totalcount=nil, list=nil, requestid=nil)
          @TotalCount = totalcount
          @List = list
          @RequestId = requestid
        end

        def deserialize(params)
          @TotalCount = params['TotalCount']
          unless params['List'].nil?
            @List = []
            params['List'].each do |i|
              emergencyvulinfo_tmp = EmergencyVulInfo.new
              emergencyvulinfo_tmp.deserialize(i)
              @List << emergencyvulinfo_tmp
            end
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeEscapeEventDetail请求参数结构体
      class DescribeEscapeEventDetailRequest < TencentCloud::Common::AbstractModel
        # @param EventId: 事件唯一id
        # @type EventId: String
        # @param EventType: 事件类型
        # @type EventType: String

        attr_accessor :EventId, :EventType

        def initialize(eventid=nil, eventtype=nil)
          @EventId = eventid
          @EventType = eventtype
        end

        def deserialize(params)
          @EventId = params['EventId']
          @EventType = params['EventType']
        end
      end

      # DescribeEscapeEventDetail返回参数结构体
      class DescribeEscapeEventDetailResponse < TencentCloud::Common::AbstractModel
        # @param EventBaseInfo: 事件基本信息
        # @type EventBaseInfo: :class:`Tencentcloud::Tcss.v20201101.models.RunTimeEventBaseInfo`
        # @param ProcessInfo: 进程信息
        # @type ProcessInfo: :class:`Tencentcloud::Tcss.v20201101.models.ProcessDetailInfo`
        # @param EventDetail: 事件描述
        # @type EventDetail: :class:`Tencentcloud::Tcss.v20201101.models.EscapeEventDescription`
        # @param ParentProcessInfo: 父进程信息
        # @type ParentProcessInfo: :class:`Tencentcloud::Tcss.v20201101.models.ProcessBaseInfo`
        # @param AncestorProcessInfo: 祖先进程信息
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type AncestorProcessInfo: :class:`Tencentcloud::Tcss.v20201101.models.ProcessBaseInfo`
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :EventBaseInfo, :ProcessInfo, :EventDetail, :ParentProcessInfo, :AncestorProcessInfo, :RequestId

        def initialize(eventbaseinfo=nil, processinfo=nil, eventdetail=nil, parentprocessinfo=nil, ancestorprocessinfo=nil, requestid=nil)
          @EventBaseInfo = eventbaseinfo
          @ProcessInfo = processinfo
          @EventDetail = eventdetail
          @ParentProcessInfo = parentprocessinfo
          @AncestorProcessInfo = ancestorprocessinfo
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['EventBaseInfo'].nil?
            @EventBaseInfo = RunTimeEventBaseInfo.new
            @EventBaseInfo.deserialize(params['EventBaseInfo'])
          end
          unless params['ProcessInfo'].nil?
            @ProcessInfo = ProcessDetailInfo.new
            @ProcessInfo.deserialize(params['ProcessInfo'])
          end
          unless params['EventDetail'].nil?
            @EventDetail = EscapeEventDescription.new
            @EventDetail.deserialize(params['EventDetail'])
          end
          unless params['ParentProcessInfo'].nil?
            @ParentProcessInfo = ProcessBaseInfo.new
            @ParentProcessInfo.deserialize(params['ParentProcessInfo'])
          end
          unless params['AncestorProcessInfo'].nil?
            @AncestorProcessInfo = ProcessBaseInfo.new
            @AncestorProcessInfo.deserialize(params['AncestorProcessInfo'])
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeEscapeEventInfo请求参数结构体
      class DescribeEscapeEventInfoRequest < TencentCloud::Common::AbstractModel
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Filters: 过滤参数,
        # Status：状态(EVENT_UNDEAL:未处理，EVENT_DEALED:已处理，EVENT_INGNORE:忽略)
        # EventType: 事件类型(MOUNT_SENSITIVE_PTAH:敏感路径挂载 PRIVILEGE_CONTAINER_START:特权容器 PRIVILEGE:提权事件
        #     ESCAPE_VUL_OCCURRED:逃逸漏洞利用 ESCAPE_DOCKER_API:访问Docker API接口逃逸 ESCAPE_TAMPER_SENSITIVE_FILE:篡改敏感文件逃逸 ESCAPE_CGROUPS:利用cgroup机制逃逸)
        # ContainerNetStatus: 容器隔离状态 (NORMAL:正常 ISOLATED:已隔离 ISOLATE_FAILED:隔离失败 ISOLATE_FAILED:解除隔离失败 RESTORING:解除隔离中 ISOLATING:隔离中)
        # ContainerStatus: 容器状态(CREATED:已创建 RUNNING:正常运行 PAUSED:暂停运行 STOPPED:停止运行 RESTARTING:重启中 REMOVING:迁移中 DEAD:DEAD UNKNOWN：未知 DESTROYED:已销毁)
        # ForeignUniqueKey:镜像ID及事件类型唯一值
        # @type Filters: Array
        # @param Order: 升序降序,asc desc
        # @type Order: String
        # @param By: 排序字段
        # @type By: String

        attr_accessor :Limit, :Offset, :Filters, :Order, :By

        def initialize(limit=nil, offset=nil, filters=nil, order=nil, by=nil)
          @Limit = limit
          @Offset = offset
          @Filters = filters
          @Order = order
          @By = by
        end

        def deserialize(params)
          @Limit = params['Limit']
          @Offset = params['Offset']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              runtimefilters_tmp = RunTimeFilters.new
              runtimefilters_tmp.deserialize(i)
              @Filters << runtimefilters_tmp
            end
          end
          @Order = params['Order']
          @By = params['By']
        end
      end

      # DescribeEscapeEventInfo返回参数结构体
      class DescribeEscapeEventInfoResponse < TencentCloud::Common::AbstractModel
        # @param EventSet: 逃逸事件数组
        # @type EventSet: Array
        # @param TotalCount: 事件总数量
        # @type TotalCount: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :EventSet, :TotalCount, :RequestId

        def initialize(eventset=nil, totalcount=nil, requestid=nil)
          @EventSet = eventset
          @TotalCount = totalcount
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['EventSet'].nil?
            @EventSet = []
            params['EventSet'].each do |i|
              escapeeventinfo_tmp = EscapeEventInfo.new
              escapeeventinfo_tmp.deserialize(i)
              @EventSet << escapeeventinfo_tmp
            end
          end
          @TotalCount = params['TotalCount']
          @RequestId = params['RequestId']
        end
      end

      # DescribeEscapeEventTendency请求参数结构体
      class DescribeEscapeEventTendencyRequest < TencentCloud::Common::AbstractModel
        # @param EndTime: 结束时间
        # @type EndTime: String
        # @param StartTime: 开始时间
        # @type StartTime: String

        attr_accessor :EndTime, :StartTime

        def initialize(endtime=nil, starttime=nil)
          @EndTime = endtime
          @StartTime = starttime
        end

        def deserialize(params)
          @EndTime = params['EndTime']
          @StartTime = params['StartTime']
        end
      end

      # DescribeEscapeEventTendency返回参数结构体
      class DescribeEscapeEventTendencyResponse < TencentCloud::Common::AbstractModel
        # @param List: 待处理逃逸事件趋势
        # @type List: Array
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :List, :RequestId

        def initialize(list=nil, requestid=nil)
          @List = list
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['List'].nil?
            @List = []
            params['List'].each do |i|
              escapeeventtendencyinfo_tmp = EscapeEventTendencyInfo.new
              escapeeventtendencyinfo_tmp.deserialize(i)
              @List << escapeeventtendencyinfo_tmp
            end
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeEscapeEventTypeSummary请求参数结构体
      class DescribeEscapeEventTypeSummaryRequest < TencentCloud::Common::AbstractModel


        def initialize()
        end

        def deserialize(params)
        end
      end

      # DescribeEscapeEventTypeSummary返回参数结构体
      class DescribeEscapeEventTypeSummaryResponse < TencentCloud::Common::AbstractModel
        # @param ContainerEscapeEventCount: 容器逃逸事件数
        # @type ContainerEscapeEventCount: Integer
        # @param ProcessPrivilegeEventCount: 程序提权事件数
        # @type ProcessPrivilegeEventCount: Integer
        # @param RiskContainerEventCount: 风险容器事件数
        # @type RiskContainerEventCount: Integer
        # @param PendingEscapeEventCount: 逃逸事件待处理数
        # @type PendingEscapeEventCount: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :ContainerEscapeEventCount, :ProcessPrivilegeEventCount, :RiskContainerEventCount, :PendingEscapeEventCount, :RequestId

        def initialize(containerescapeeventcount=nil, processprivilegeeventcount=nil, riskcontainereventcount=nil, pendingescapeeventcount=nil, requestid=nil)
          @ContainerEscapeEventCount = containerescapeeventcount
          @ProcessPrivilegeEventCount = processprivilegeeventcount
          @RiskContainerEventCount = riskcontainereventcount
          @PendingEscapeEventCount = pendingescapeeventcount
          @RequestId = requestid
        end

        def deserialize(params)
          @ContainerEscapeEventCount = params['ContainerEscapeEventCount']
          @ProcessPrivilegeEventCount = params['ProcessPrivilegeEventCount']
          @RiskContainerEventCount = params['RiskContainerEventCount']
          @PendingEscapeEventCount = params['PendingEscapeEventCount']
          @RequestId = params['RequestId']
        end
      end

      # DescribeEscapeEventsExport请求参数结构体
      class DescribeEscapeEventsExportRequest < TencentCloud::Common::AbstractModel
        # @param ExportField: 导出字段
        # @type ExportField: Array
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Filters: 过滤参数,"Filters":[{"Name":"Status","Values":["2"]}]
        # @type Filters: Array
        # @param Order: 升序降序,asc desc
        # @type Order: String
        # @param By: 排序字段
        # @type By: String

        attr_accessor :ExportField, :Limit, :Offset, :Filters, :Order, :By

        def initialize(exportfield=nil, limit=nil, offset=nil, filters=nil, order=nil, by=nil)
          @ExportField = exportfield
          @Limit = limit
          @Offset = offset
          @Filters = filters
          @Order = order
          @By = by
        end

        def deserialize(params)
          @ExportField = params['ExportField']
          @Limit = params['Limit']
          @Offset = params['Offset']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              runtimefilters_tmp = RunTimeFilters.new
              runtimefilters_tmp.deserialize(i)
              @Filters << runtimefilters_tmp
            end
          end
          @Order = params['Order']
          @By = params['By']
        end
      end

      # DescribeEscapeEventsExport返回参数结构体
      class DescribeEscapeEventsExportResponse < TencentCloud::Common::AbstractModel
        # @param DownloadUrl: execle下载地址
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type DownloadUrl: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :DownloadUrl, :RequestId

        def initialize(downloadurl=nil, requestid=nil)
          @DownloadUrl = downloadurl
          @RequestId = requestid
        end

        def deserialize(params)
          @DownloadUrl = params['DownloadUrl']
          @RequestId = params['RequestId']
        end
      end

      # DescribeEscapeRuleInfo请求参数结构体
      class DescribeEscapeRuleInfoRequest < TencentCloud::Common::AbstractModel


        def initialize()
        end

        def deserialize(params)
        end
      end

      # DescribeEscapeRuleInfo返回参数结构体
      class DescribeEscapeRuleInfoResponse < TencentCloud::Common::AbstractModel
        # @param RuleSet: 规则信息
        # @type RuleSet: Array
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RuleSet, :RequestId

        def initialize(ruleset=nil, requestid=nil)
          @RuleSet = ruleset
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['RuleSet'].nil?
            @RuleSet = []
            params['RuleSet'].each do |i|
              escaperule_tmp = EscapeRule.new
              escaperule_tmp.deserialize(i)
              @RuleSet << escaperule_tmp
            end
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeEscapeSafeState请求参数结构体
      class DescribeEscapeSafeStateRequest < TencentCloud::Common::AbstractModel


        def initialize()
        end

        def deserialize(params)
        end
      end

      # DescribeEscapeSafeState返回参数结构体
      class DescribeEscapeSafeStateResponse < TencentCloud::Common::AbstractModel
        # @param IsSafe: Unsafe：存在风险，Safe：暂无风险,UnKnown:未知风险
        # @type IsSafe: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :IsSafe, :RequestId

        def initialize(issafe=nil, requestid=nil)
          @IsSafe = issafe
          @RequestId = requestid
        end

        def deserialize(params)
          @IsSafe = params['IsSafe']
          @RequestId = params['RequestId']
        end
      end

      # DescribeEscapeWhiteList请求参数结构体
      class DescribeEscapeWhiteListRequest < TencentCloud::Common::AbstractModel
        # @param Filters: 过滤条件。
        # <li>EventType- String - 是否必填：否 - 加白事件类型，ESCAPE_CGROUPS：利用cgroup机制逃逸，ESCAPE_TAMPER_SENSITIVE_FILE：篡改敏感文件逃逸， ESCAPE_DOCKER_API：访问Docker API接口逃逸，ESCAPE_VUL_OCCURRED：逃逸漏洞利用，MOUNT_SENSITIVE_PTAH：敏感路径挂载，PRIVILEGE_CONTAINER_START：特权容器， PRIVILEGE：程序提权逃逸</li>
        # <li>ImageName- string - 是否必填：否 - 镜像名称。</li>
        # <li>ImageID- string - 是否必填：否 - 镜像ID。</li>
        # @type Filters: Array
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Order: 排序方式：asc/desc
        # @type Order: String
        # @param By: 排序字段：主机数量：HostCount，容器数量：ContainerCount，更新时间：UpdateTime
        # @type By: String

        attr_accessor :Filters, :Limit, :Offset, :Order, :By

        def initialize(filters=nil, limit=nil, offset=nil, order=nil, by=nil)
          @Filters = filters
          @Limit = limit
          @Offset = offset
          @Order = order
          @By = by
        end

        def deserialize(params)
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              runtimefilters_tmp = RunTimeFilters.new
              runtimefilters_tmp.deserialize(i)
              @Filters << runtimefilters_tmp
            end
          end
          @Limit = params['Limit']
          @Offset = params['Offset']
          @Order = params['Order']
          @By = params['By']
        end
      end

      # DescribeEscapeWhiteList返回参数结构体
      class DescribeEscapeWhiteListResponse < TencentCloud::Common::AbstractModel
        # @param TotalCount: 总数量
        # @type TotalCount: Integer
        # @param List: 逃逸白名单列表
        # @type List: Array
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TotalCount, :List, :RequestId

        def initialize(totalcount=nil, list=nil, requestid=nil)
          @TotalCount = totalcount
          @List = list
          @RequestId = requestid
        end

        def deserialize(params)
          @TotalCount = params['TotalCount']
          unless params['List'].nil?
            @List = []
            params['List'].each do |i|
              escapewhitelistinfo_tmp = EscapeWhiteListInfo.new
              escapewhitelistinfo_tmp.deserialize(i)
              @List << escapewhitelistinfo_tmp
            end
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeEventEscapeImageList请求参数结构体
      class DescribeEventEscapeImageListRequest < TencentCloud::Common::AbstractModel
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Filters: 过滤参数:
        # EventType: 事件类型(MOUNT_SENSITIVE_PTAH:敏感路径挂载 PRIVILEGE_CONTAINER_START:特权容器)
        # Status: 事件状态(EVENT_UNDEAL:未处理，EVENT_DEALED:已处理，EVENT_INGNORE:忽略)
        # ImageID: 镜像id
        # ImageName:镜像名称
        # @type Filters: Array
        # @param Order: 升序降序,asc desc
        # @type Order: String
        # @param By: 排序字段
        # @type By: String

        attr_accessor :Limit, :Offset, :Filters, :Order, :By

        def initialize(limit=nil, offset=nil, filters=nil, order=nil, by=nil)
          @Limit = limit
          @Offset = offset
          @Filters = filters
          @Order = order
          @By = by
        end

        def deserialize(params)
          @Limit = params['Limit']
          @Offset = params['Offset']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              runtimefilters_tmp = RunTimeFilters.new
              runtimefilters_tmp.deserialize(i)
              @Filters << runtimefilters_tmp
            end
          end
          @Order = params['Order']
          @By = params['By']
        end
      end

      # DescribeEventEscapeImageList返回参数结构体
      class DescribeEventEscapeImageListResponse < TencentCloud::Common::AbstractModel
        # @param List: 风险容器镜像列表
        # @type List: Array
        # @param TotalCount: 事件总数量
        # @type TotalCount: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :List, :TotalCount, :RequestId

        def initialize(list=nil, totalcount=nil, requestid=nil)
          @List = list
          @TotalCount = totalcount
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['List'].nil?
            @List = []
            params['List'].each do |i|
              eventescapeimageinfo_tmp = EventEscapeImageInfo.new
              eventescapeimageinfo_tmp.deserialize(i)
              @List << eventescapeimageinfo_tmp
            end
          end
          @TotalCount = params['TotalCount']
          @RequestId = params['RequestId']
        end
      end

      # DescribeExportJobDownloadURL请求参数结构体
      class DescribeExportJobDownloadURLRequest < TencentCloud::Common::AbstractModel
        # @param JobID: 任务ID
        # @type JobID: String

        attr_accessor :JobID

        def initialize(jobid=nil)
          @JobID = jobid
        end

        def deserialize(params)
          @JobID = params['JobID']
        end
      end

      # DescribeExportJobDownloadURL返回参数结构体
      class DescribeExportJobDownloadURLResponse < TencentCloud::Common::AbstractModel
        # @param DownloadURL: 下载链接
        # @type DownloadURL: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :DownloadURL, :RequestId

        def initialize(downloadurl=nil, requestid=nil)
          @DownloadURL = downloadurl
          @RequestId = requestid
        end

        def deserialize(params)
          @DownloadURL = params['DownloadURL']
          @RequestId = params['RequestId']
        end
      end

      # DescribeExportJobManageList请求参数结构体
      class DescribeExportJobManageListRequest < TencentCloud::Common::AbstractModel
        # @param Filters: 过滤条件。
        # <li>ExportStatus- string -是否必填: 否 - 导出状态 RUNNING: 导出中 SUCCESS:导出完成 FAILURE:失败
        # </li>
        # <li>ExportSource- string -是否必填: 否 - 导出来源 LocalImage: 本地镜像 RegistryImage: 仓库镜像
        # </li>
        # @type Filters: Array
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Order: 排序方式
        # @type Order: String
        # @param By: 排序字段
        # InsertTime: 创建时间
        # @type By: String

        attr_accessor :Filters, :Offset, :Limit, :Order, :By

        def initialize(filters=nil, offset=nil, limit=nil, order=nil, by=nil)
          @Filters = filters
          @Offset = offset
          @Limit = limit
          @Order = order
          @By = by
        end

        def deserialize(params)
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              runtimefilters_tmp = RunTimeFilters.new
              runtimefilters_tmp.deserialize(i)
              @Filters << runtimefilters_tmp
            end
          end
          @Offset = params['Offset']
          @Limit = params['Limit']
          @Order = params['Order']
          @By = params['By']
        end
      end

      # DescribeExportJobManageList返回参数结构体
      class DescribeExportJobManageListResponse < TencentCloud::Common::AbstractModel
        # @param TotalCount: 总数
        # @type TotalCount: Integer
        # @param List: 任务列表
        # @type List: Array
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TotalCount, :List, :RequestId

        def initialize(totalcount=nil, list=nil, requestid=nil)
          @TotalCount = totalcount
          @List = list
          @RequestId = requestid
        end

        def deserialize(params)
          @TotalCount = params['TotalCount']
          unless params['List'].nil?
            @List = []
            params['List'].each do |i|
              exportjobinfo_tmp = ExportJobInfo.new
              exportjobinfo_tmp.deserialize(i)
              @List << exportjobinfo_tmp
            end
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeExportJobResult请求参数结构体
      class DescribeExportJobResultRequest < TencentCloud::Common::AbstractModel
        # @param JobId: CreateExportComplianceStatusListJob返回的JobId字段的值
        # @type JobId: String

        attr_accessor :JobId

        def initialize(jobid=nil)
          @JobId = jobid
        end

        def deserialize(params)
          @JobId = params['JobId']
        end
      end

      # DescribeExportJobResult返回参数结构体
      class DescribeExportJobResultResponse < TencentCloud::Common::AbstractModel
        # @param ExportStatus: 导出的状态。取值为, SUCCESS:成功、FAILURE:失败，RUNNING: 进行中。
        # @type ExportStatus: String
        # @param DownloadURL: 返回下载URL
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type DownloadURL: String
        # @param ExportProgress: 当ExportStatus为RUNNING时，返回导出进度。0~100范围的浮点数。
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ExportProgress: Float
        # @param FailureMsg: 失败原因
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type FailureMsg: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :ExportStatus, :DownloadURL, :ExportProgress, :FailureMsg, :RequestId

        def initialize(exportstatus=nil, downloadurl=nil, exportprogress=nil, failuremsg=nil, requestid=nil)
          @ExportStatus = exportstatus
          @DownloadURL = downloadurl
          @ExportProgress = exportprogress
          @FailureMsg = failuremsg
          @RequestId = requestid
        end

        def deserialize(params)
          @ExportStatus = params['ExportStatus']
          @DownloadURL = params['DownloadURL']
          @ExportProgress = params['ExportProgress']
          @FailureMsg = params['FailureMsg']
          @RequestId = params['RequestId']
        end
      end

      # DescribeImageAuthorizedInfo请求参数结构体
      class DescribeImageAuthorizedInfoRequest < TencentCloud::Common::AbstractModel


        def initialize()
        end

        def deserialize(params)
        end
      end

      # DescribeImageAuthorizedInfo返回参数结构体
      class DescribeImageAuthorizedInfoResponse < TencentCloud::Common::AbstractModel
        # @param TotalAuthorizedCnt: 总共有效的镜像授权数
        # @type TotalAuthorizedCnt: Integer
        # @param UsedAuthorizedCnt: 已使用镜像授权数
        # @type UsedAuthorizedCnt: Integer
        # @param ScannedImageCnt: 已开启扫描镜像数
        # @type ScannedImageCnt: Integer
        # @param NotScannedImageCnt: 未开启扫描镜像数
        # @type NotScannedImageCnt: Integer
        # @param NotScannedLocalImageCnt: 本地未开启扫描镜像数
        # @type NotScannedLocalImageCnt: Integer
        # @param TrialAuthorizedCnt: 试用镜像授权数
        # @type TrialAuthorizedCnt: Integer
        # @param UsedTrialAuthorizedCnt: 已使用试用镜像授权数
        # @type UsedTrialAuthorizedCnt: Integer
        # @param PurchasedAuthorizedCnt: 已购镜像授权数
        # @type PurchasedAuthorizedCnt: Integer
        # @param UsedPurchasedAuthorizedCnt: 已使用已购镜像授权数
        # @type UsedPurchasedAuthorizedCnt: Integer
        # @param CanApplyFreeImageAuthorize: 是否可免费领取镜像授权数
        # @type CanApplyFreeImageAuthorize: Boolean
        # @param ImageScanInquireInfo: 镜像扫描计费信息
        # @type ImageScanInquireInfo: :class:`Tencentcloud::Tcss.v20201101.models.ImageScanInquireInfo`
        # @param RepeatImageIdCnt: 重复镜像数(本地镜像和仓库镜像)
        # @type RepeatImageIdCnt: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TotalAuthorizedCnt, :UsedAuthorizedCnt, :ScannedImageCnt, :NotScannedImageCnt, :NotScannedLocalImageCnt, :TrialAuthorizedCnt, :UsedTrialAuthorizedCnt, :PurchasedAuthorizedCnt, :UsedPurchasedAuthorizedCnt, :CanApplyFreeImageAuthorize, :ImageScanInquireInfo, :RepeatImageIdCnt, :RequestId

        def initialize(totalauthorizedcnt=nil, usedauthorizedcnt=nil, scannedimagecnt=nil, notscannedimagecnt=nil, notscannedlocalimagecnt=nil, trialauthorizedcnt=nil, usedtrialauthorizedcnt=nil, purchasedauthorizedcnt=nil, usedpurchasedauthorizedcnt=nil, canapplyfreeimageauthorize=nil, imagescaninquireinfo=nil, repeatimageidcnt=nil, requestid=nil)
          @TotalAuthorizedCnt = totalauthorizedcnt
          @UsedAuthorizedCnt = usedauthorizedcnt
          @ScannedImageCnt = scannedimagecnt
          @NotScannedImageCnt = notscannedimagecnt
          @NotScannedLocalImageCnt = notscannedlocalimagecnt
          @TrialAuthorizedCnt = trialauthorizedcnt
          @UsedTrialAuthorizedCnt = usedtrialauthorizedcnt
          @PurchasedAuthorizedCnt = purchasedauthorizedcnt
          @UsedPurchasedAuthorizedCnt = usedpurchasedauthorizedcnt
          @CanApplyFreeImageAuthorize = canapplyfreeimageauthorize
          @ImageScanInquireInfo = imagescaninquireinfo
          @RepeatImageIdCnt = repeatimageidcnt
          @RequestId = requestid
        end

        def deserialize(params)
          @TotalAuthorizedCnt = params['TotalAuthorizedCnt']
          @UsedAuthorizedCnt = params['UsedAuthorizedCnt']
          @ScannedImageCnt = params['ScannedImageCnt']
          @NotScannedImageCnt = params['NotScannedImageCnt']
          @NotScannedLocalImageCnt = params['NotScannedLocalImageCnt']
          @TrialAuthorizedCnt = params['TrialAuthorizedCnt']
          @UsedTrialAuthorizedCnt = params['UsedTrialAuthorizedCnt']
          @PurchasedAuthorizedCnt = params['PurchasedAuthorizedCnt']
          @UsedPurchasedAuthorizedCnt = params['UsedPurchasedAuthorizedCnt']
          @CanApplyFreeImageAuthorize = params['CanApplyFreeImageAuthorize']
          unless params['ImageScanInquireInfo'].nil?
            @ImageScanInquireInfo = ImageScanInquireInfo.new
            @ImageScanInquireInfo.deserialize(params['ImageScanInquireInfo'])
          end
          @RepeatImageIdCnt = params['RepeatImageIdCnt']
          @RequestId = params['RequestId']
        end
      end

      # DescribeImageAutoAuthorizedLogList请求参数结构体
      class DescribeImageAutoAuthorizedLogListRequest < TencentCloud::Common::AbstractModel
        # @param TaskId: 自动授权任务Id
        # @type TaskId: Integer
        # @param Filters: Status授权结果，SUCCESS:成功，REACH_LIMIT:达到授权上限，LICENSE_INSUFFICIENT:授权数不足
        # @type Filters: Array
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0
        # @type Offset: Integer
        # @param By: 排序字段：AuthorizedTime
        # @type By: String
        # @param Order: 排序方式，asc，desc
        # @type Order: String

        attr_accessor :TaskId, :Filters, :Limit, :Offset, :By, :Order

        def initialize(taskid=nil, filters=nil, limit=nil, offset=nil, by=nil, order=nil)
          @TaskId = taskid
          @Filters = filters
          @Limit = limit
          @Offset = offset
          @By = by
          @Order = order
        end

        def deserialize(params)
          @TaskId = params['TaskId']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              assetfilters_tmp = AssetFilters.new
              assetfilters_tmp.deserialize(i)
              @Filters << assetfilters_tmp
            end
          end
          @Limit = params['Limit']
          @Offset = params['Offset']
          @By = params['By']
          @Order = params['Order']
        end
      end

      # DescribeImageAutoAuthorizedLogList返回参数结构体
      class DescribeImageAutoAuthorizedLogListResponse < TencentCloud::Common::AbstractModel
        # @param TotalCount: 总数量
        # @type TotalCount: Integer
        # @param List: 自动授权结果镜像列表
        # @type List: Array
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TotalCount, :List, :RequestId

        def initialize(totalcount=nil, list=nil, requestid=nil)
          @TotalCount = totalcount
          @List = list
          @RequestId = requestid
        end

        def deserialize(params)
          @TotalCount = params['TotalCount']
          unless params['List'].nil?
            @List = []
            params['List'].each do |i|
              autoauthorizedimageinfo_tmp = AutoAuthorizedImageInfo.new
              autoauthorizedimageinfo_tmp.deserialize(i)
              @List << autoauthorizedimageinfo_tmp
            end
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeImageAutoAuthorizedRule请求参数结构体
      class DescribeImageAutoAuthorizedRuleRequest < TencentCloud::Common::AbstractModel


        def initialize()
        end

        def deserialize(params)
        end
      end

      # DescribeImageAutoAuthorizedRule返回参数结构体
      class DescribeImageAutoAuthorizedRuleResponse < TencentCloud::Common::AbstractModel
        # @param IsEnabled: 规则是否生效，0:不生效，1:已生效
        # @type IsEnabled: Integer
        # @param RangeType: 授权范围类别，MANUAL:自选主机节点，ALL:全部镜像
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type RangeType: String
        # @param HostCount: 授权范围是自选主机时的主机数量
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type HostCount: Integer
        # @param MaxDailyCount: 每天最大的镜像授权数限制, 0表示无限制
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type MaxDailyCount: Integer
        # @param RuleId: 规则id，用未设置时为0
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type RuleId: Integer
        # @param AutoScanEnabled: 自动扫描开关，0：关闭，1：开启
        # @type AutoScanEnabled: Integer
        # @param ScanType: 自动扫描范围
        # @type ScanType: Array
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :IsEnabled, :RangeType, :HostCount, :MaxDailyCount, :RuleId, :AutoScanEnabled, :ScanType, :RequestId

        def initialize(isenabled=nil, rangetype=nil, hostcount=nil, maxdailycount=nil, ruleid=nil, autoscanenabled=nil, scantype=nil, requestid=nil)
          @IsEnabled = isenabled
          @RangeType = rangetype
          @HostCount = hostcount
          @MaxDailyCount = maxdailycount
          @RuleId = ruleid
          @AutoScanEnabled = autoscanenabled
          @ScanType = scantype
          @RequestId = requestid
        end

        def deserialize(params)
          @IsEnabled = params['IsEnabled']
          @RangeType = params['RangeType']
          @HostCount = params['HostCount']
          @MaxDailyCount = params['MaxDailyCount']
          @RuleId = params['RuleId']
          @AutoScanEnabled = params['AutoScanEnabled']
          @ScanType = params['ScanType']
          @RequestId = params['RequestId']
        end
      end

      # DescribeImageAutoAuthorizedTaskList请求参数结构体
      class DescribeImageAutoAuthorizedTaskListRequest < TencentCloud::Common::AbstractModel
        # @param StartTime: 开始时间
        # @type StartTime: String
        # @param EndTime: 结束时间
        # @type EndTime: String
        # @param Filters: 过滤字段
        # Status授权结果，全部授权成功：ALLSUCCSESS，部分授权失败：PARTIALFAIL,全部授权失败：ALLFAIL
        # Type授权方式，AUTO:自动授权，MANUAL:手动授权
        # Source 镜像来源，LOCAL:本地镜像，REGISTRY:仓库镜像
        # @type Filters: Array
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0
        # @type Offset: Integer

        attr_accessor :StartTime, :EndTime, :Filters, :Limit, :Offset

        def initialize(starttime=nil, endtime=nil, filters=nil, limit=nil, offset=nil)
          @StartTime = starttime
          @EndTime = endtime
          @Filters = filters
          @Limit = limit
          @Offset = offset
        end

        def deserialize(params)
          @StartTime = params['StartTime']
          @EndTime = params['EndTime']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              assetfilters_tmp = AssetFilters.new
              assetfilters_tmp.deserialize(i)
              @Filters << assetfilters_tmp
            end
          end
          @Limit = params['Limit']
          @Offset = params['Offset']
        end
      end

      # DescribeImageAutoAuthorizedTaskList返回参数结构体
      class DescribeImageAutoAuthorizedTaskListResponse < TencentCloud::Common::AbstractModel
        # @param List: 自动授权任务列表
        # @type List: Array
        # @param TotalCount: 总数量
        # @type TotalCount: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :List, :TotalCount, :RequestId

        def initialize(list=nil, totalcount=nil, requestid=nil)
          @List = list
          @TotalCount = totalcount
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['List'].nil?
            @List = []
            params['List'].each do |i|
              imageautoauthorizedtask_tmp = ImageAutoAuthorizedTask.new
              imageautoauthorizedtask_tmp.deserialize(i)
              @List << imageautoauthorizedtask_tmp
            end
          end
          @TotalCount = params['TotalCount']
          @RequestId = params['RequestId']
        end
      end

      # DescribeImageComponentList请求参数结构体
      class DescribeImageComponentListRequest < TencentCloud::Common::AbstractModel
        # @param ImageID: 镜像ID
        # @type ImageID: String
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Filters: 过滤条件。
        # <li>ComponentName- String - 是否必填：否 - 镜像组件名称</li><li>ComponentVersion- String - 是否必填：否 - 镜像组件版本</li><li>ComponentType- String - 是否必填：否 - 镜像组件类型</li><li>VulLevel- String - 是否必填：否 - 漏洞威胁等级</li><li>HasVul- String - 是否必填：否 -是否有漏洞；true：是，false，否；不传或ALL ：全部</li>
        # @type Filters: Array
        # @param By: 排序字段
        # @type By: String
        # @param Order: 排序方式desc ，asc
        # @type Order: String

        attr_accessor :ImageID, :Limit, :Offset, :Filters, :By, :Order

        def initialize(imageid=nil, limit=nil, offset=nil, filters=nil, by=nil, order=nil)
          @ImageID = imageid
          @Limit = limit
          @Offset = offset
          @Filters = filters
          @By = by
          @Order = order
        end

        def deserialize(params)
          @ImageID = params['ImageID']
          @Limit = params['Limit']
          @Offset = params['Offset']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              assetfilters_tmp = AssetFilters.new
              assetfilters_tmp.deserialize(i)
              @Filters << assetfilters_tmp
            end
          end
          @By = params['By']
          @Order = params['Order']
        end
      end

      # DescribeImageComponentList返回参数结构体
      class DescribeImageComponentListResponse < TencentCloud::Common::AbstractModel
        # @param TotalCount: 总数量
        # @type TotalCount: Integer
        # @param List: 镜像组件列表
        # @type List: Array
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TotalCount, :List, :RequestId

        def initialize(totalcount=nil, list=nil, requestid=nil)
          @TotalCount = totalcount
          @List = list
          @RequestId = requestid
        end

        def deserialize(params)
          @TotalCount = params['TotalCount']
          unless params['List'].nil?
            @List = []
            params['List'].each do |i|
              imagecomponent_tmp = ImageComponent.new
              imagecomponent_tmp.deserialize(i)
              @List << imagecomponent_tmp
            end
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeImageRegistryNamespaceList请求参数结构体
      class DescribeImageRegistryNamespaceListRequest < TencentCloud::Common::AbstractModel
        # @param Offset: 本次查询的起始偏移量，默认为0。
        # @type Offset: Integer
        # @param Limit: 本次查询的数据量，默认为10，最大值为100。
        # @type Limit: Integer
        # @param Filters: 查询的过滤条件。Name字段可取值"Namespace"。
        # @type Filters: Array

        attr_accessor :Offset, :Limit, :Filters

        def initialize(offset=nil, limit=nil, filters=nil)
          @Offset = offset
          @Limit = limit
          @Filters = filters
        end

        def deserialize(params)
          @Offset = params['Offset']
          @Limit = params['Limit']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              assetfilters_tmp = AssetFilters.new
              assetfilters_tmp.deserialize(i)
              @Filters << assetfilters_tmp
            end
          end
        end
      end

      # DescribeImageRegistryNamespaceList返回参数结构体
      class DescribeImageRegistryNamespaceListResponse < TencentCloud::Common::AbstractModel
        # @param TotalCount: 可返回的命令空间的总量。
        # @type TotalCount: Integer
        # @param NamespaceList: 返回的命令空间列表
        # @type NamespaceList: Array
        # @param NamespaceDetail: 返回的命令空间详细信息列表
        # @type NamespaceDetail: Array
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TotalCount, :NamespaceList, :NamespaceDetail, :RequestId

        def initialize(totalcount=nil, namespacelist=nil, namespacedetail=nil, requestid=nil)
          @TotalCount = totalcount
          @NamespaceList = namespacelist
          @NamespaceDetail = namespacedetail
          @RequestId = requestid
        end

        def deserialize(params)
          @TotalCount = params['TotalCount']
          @NamespaceList = params['NamespaceList']
          unless params['NamespaceDetail'].nil?
            @NamespaceDetail = []
            params['NamespaceDetail'].each do |i|
              namespaceinfo_tmp = NamespaceInfo.new
              namespaceinfo_tmp.deserialize(i)
              @NamespaceDetail << namespaceinfo_tmp
            end
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeImageRegistryTimingScanTask请求参数结构体
      class DescribeImageRegistryTimingScanTaskRequest < TencentCloud::Common::AbstractModel


        def initialize()
        end

        def deserialize(params)
        end
      end

      # DescribeImageRegistryTimingScanTask返回参数结构体
      class DescribeImageRegistryTimingScanTaskResponse < TencentCloud::Common::AbstractModel
        # @param Enable: 定时扫描开关
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Enable: Boolean
        # @param ScanTime: 定时任务扫描时间
        # @type ScanTime: String
        # @param ScanPeriod: 定时扫描间隔
        # @type ScanPeriod: Integer
        # @param ScanType: 扫描类型数组
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ScanType: Array
        # @param All: 扫描全部镜像
        # @type All: Boolean
        # @param Images: 自定义扫描镜像
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Images: Array
        # @param Id: 自动以扫描镜像Id
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Id: Array
        # @param Latest: 是否扫描最新版本镜像
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Latest: Boolean
        # @param ScanEndTime: 扫描结束时间
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ScanEndTime: String
        # @param RegistryType: 仓库类型 tcr,ccr,harbor
        # @type RegistryType: Array
        # @param ContainerRunning: 是否存在运行中的容器
        # @type ContainerRunning: Boolean
        # @param ScanScope: 扫描范围 0全部镜像，1自选镜像，2推荐扫描镜像
        # @type ScanScope: Integer
        # @param Namespace: 命名空间
        # @type Namespace: Array
        # @param ExcludeImageAssetIds: 排除的镜像资产id
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ExcludeImageAssetIds: Array
        # @param LastScanTime: 最近扫描时间
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type LastScanTime: String
        # @param ScanResult: 扫描结果(Success|InsufficientLicense|ImageNeedIsEmpty|InternalError)
        # @type ScanResult: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :Enable, :ScanTime, :ScanPeriod, :ScanType, :All, :Images, :Id, :Latest, :ScanEndTime, :RegistryType, :ContainerRunning, :ScanScope, :Namespace, :ExcludeImageAssetIds, :LastScanTime, :ScanResult, :RequestId
        extend Gem::Deprecate
        deprecate :All, :none, 2024, 9
        deprecate :All=, :none, 2024, 9

        def initialize(enable=nil, scantime=nil, scanperiod=nil, scantype=nil, all=nil, images=nil, id=nil, latest=nil, scanendtime=nil, registrytype=nil, containerrunning=nil, scanscope=nil, namespace=nil, excludeimageassetids=nil, lastscantime=nil, scanresult=nil, requestid=nil)
          @Enable = enable
          @ScanTime = scantime
          @ScanPeriod = scanperiod
          @ScanType = scantype
          @All = all
          @Images = images
          @Id = id
          @Latest = latest
          @ScanEndTime = scanendtime
          @RegistryType = registrytype
          @ContainerRunning = containerrunning
          @ScanScope = scanscope
          @Namespace = namespace
          @ExcludeImageAssetIds = excludeimageassetids
          @LastScanTime = lastscantime
          @ScanResult = scanresult
          @RequestId = requestid
        end

        def deserialize(params)
          @Enable = params['Enable']
          @ScanTime = params['ScanTime']
          @ScanPeriod = params['ScanPeriod']
          @ScanType = params['ScanType']
          @All = params['All']
          unless params['Images'].nil?
            @Images = []
            params['Images'].each do |i|
              imageinfo_tmp = ImageInfo.new
              imageinfo_tmp.deserialize(i)
              @Images << imageinfo_tmp
            end
          end
          @Id = params['Id']
          @Latest = params['Latest']
          @ScanEndTime = params['ScanEndTime']
          @RegistryType = params['RegistryType']
          @ContainerRunning = params['ContainerRunning']
          @ScanScope = params['ScanScope']
          @Namespace = params['Namespace']
          @ExcludeImageAssetIds = params['ExcludeImageAssetIds']
          @LastScanTime = params['LastScanTime']
          @ScanResult = params['ScanResult']
          @RequestId = params['RequestId']
        end
      end

      # DescribeImageRiskSummary请求参数结构体
      class DescribeImageRiskSummaryRequest < TencentCloud::Common::AbstractModel


        def initialize()
        end

        def deserialize(params)
        end
      end

      # DescribeImageRiskSummary返回参数结构体
      class DescribeImageRiskSummaryResponse < TencentCloud::Common::AbstractModel
        # @param VulnerabilityCnt: 安全漏洞
        # @type VulnerabilityCnt: Array
        # @param MalwareVirusCnt: 木马病毒
        # @type MalwareVirusCnt: Array
        # @param RiskCnt: 敏感信息
        # @type RiskCnt: Array
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :VulnerabilityCnt, :MalwareVirusCnt, :RiskCnt, :RequestId

        def initialize(vulnerabilitycnt=nil, malwareviruscnt=nil, riskcnt=nil, requestid=nil)
          @VulnerabilityCnt = vulnerabilitycnt
          @MalwareVirusCnt = malwareviruscnt
          @RiskCnt = riskcnt
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['VulnerabilityCnt'].nil?
            @VulnerabilityCnt = []
            params['VulnerabilityCnt'].each do |i|
              runtimeriskinfo_tmp = RunTimeRiskInfo.new
              runtimeriskinfo_tmp.deserialize(i)
              @VulnerabilityCnt << runtimeriskinfo_tmp
            end
          end
          unless params['MalwareVirusCnt'].nil?
            @MalwareVirusCnt = []
            params['MalwareVirusCnt'].each do |i|
              runtimeriskinfo_tmp = RunTimeRiskInfo.new
              runtimeriskinfo_tmp.deserialize(i)
              @MalwareVirusCnt << runtimeriskinfo_tmp
            end
          end
          unless params['RiskCnt'].nil?
            @RiskCnt = []
            params['RiskCnt'].each do |i|
              runtimeriskinfo_tmp = RunTimeRiskInfo.new
              runtimeriskinfo_tmp.deserialize(i)
              @RiskCnt << runtimeriskinfo_tmp
            end
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeImageRiskTendency请求参数结构体
      class DescribeImageRiskTendencyRequest < TencentCloud::Common::AbstractModel
        # @param StartTime: 开始时间
        # @type StartTime: String
        # @param EndTime: 结束时间
        # @type EndTime: String

        attr_accessor :StartTime, :EndTime

        def initialize(starttime=nil, endtime=nil)
          @StartTime = starttime
          @EndTime = endtime
        end

        def deserialize(params)
          @StartTime = params['StartTime']
          @EndTime = params['EndTime']
        end
      end

      # DescribeImageRiskTendency返回参数结构体
      class DescribeImageRiskTendencyResponse < TencentCloud::Common::AbstractModel
        # @param ImageRiskTendencySet: 本地镜像新增风险趋势信息列表
        # @type ImageRiskTendencySet: Array
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :ImageRiskTendencySet, :RequestId

        def initialize(imagerisktendencyset=nil, requestid=nil)
          @ImageRiskTendencySet = imagerisktendencyset
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['ImageRiskTendencySet'].nil?
            @ImageRiskTendencySet = []
            params['ImageRiskTendencySet'].each do |i|
              imagerisktendencyinfo_tmp = ImageRiskTendencyInfo.new
              imagerisktendencyinfo_tmp.deserialize(i)
              @ImageRiskTendencySet << imagerisktendencyinfo_tmp
            end
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeImageSimpleList请求参数结构体
      class DescribeImageSimpleListRequest < TencentCloud::Common::AbstractModel
        # @param Filters: IsAuthorized 是否已经授权, 0:否 1:是 无:全部
        # @type Filters: Array
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Order: 排序方式
        # @type Order: String
        # @param By: 排序字段
        # @type By: String

        attr_accessor :Filters, :Limit, :Offset, :Order, :By

        def initialize(filters=nil, limit=nil, offset=nil, order=nil, by=nil)
          @Filters = filters
          @Limit = limit
          @Offset = offset
          @Order = order
          @By = by
        end

        def deserialize(params)
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              runtimefilters_tmp = RunTimeFilters.new
              runtimefilters_tmp.deserialize(i)
              @Filters << runtimefilters_tmp
            end
          end
          @Limit = params['Limit']
          @Offset = params['Offset']
          @Order = params['Order']
          @By = params['By']
        end
      end

      # DescribeImageSimpleList返回参数结构体
      class DescribeImageSimpleListResponse < TencentCloud::Common::AbstractModel
        # @param ImageList: 镜像列表
        # @type ImageList: Array
        # @param ImageCnt: 镜像数
        # @type ImageCnt: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :ImageList, :ImageCnt, :RequestId

        def initialize(imagelist=nil, imagecnt=nil, requestid=nil)
          @ImageList = imagelist
          @ImageCnt = imagecnt
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['ImageList'].nil?
            @ImageList = []
            params['ImageList'].each do |i|
              imagesimpleinfo_tmp = ImageSimpleInfo.new
              imagesimpleinfo_tmp.deserialize(i)
              @ImageList << imagesimpleinfo_tmp
            end
          end
          @ImageCnt = params['ImageCnt']
          @RequestId = params['RequestId']
        end
      end

      # DescribeIndexList请求参数结构体
      class DescribeIndexListRequest < TencentCloud::Common::AbstractModel


        def initialize()
        end

        def deserialize(params)
        end
      end

      # DescribeIndexList返回参数结构体
      class DescribeIndexListResponse < TencentCloud::Common::AbstractModel
        # @param Data: ES 索引信息
        # @type Data: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :Data, :RequestId

        def initialize(data=nil, requestid=nil)
          @Data = data
          @RequestId = requestid
        end

        def deserialize(params)
          @Data = params['Data']
          @RequestId = params['RequestId']
        end
      end

      # DescribeInspectionReport请求参数结构体
      class DescribeInspectionReportRequest < TencentCloud::Common::AbstractModel


        def initialize()
        end

        def deserialize(params)
        end
      end

      # DescribeInspectionReport返回参数结构体
      class DescribeInspectionReportResponse < TencentCloud::Common::AbstractModel
        # @param ReportName: 报告名称
        # @type ReportName: String
        # @param ReportUrl: 下载链接
        # @type ReportUrl: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :ReportName, :ReportUrl, :RequestId

        def initialize(reportname=nil, reporturl=nil, requestid=nil)
          @ReportName = reportname
          @ReportUrl = reporturl
          @RequestId = requestid
        end

        def deserialize(params)
          @ReportName = params['ReportName']
          @ReportUrl = params['ReportUrl']
          @RequestId = params['RequestId']
        end
      end

      # DescribeK8sApiAbnormalEventInfo请求参数结构体
      class DescribeK8sApiAbnormalEventInfoRequest < TencentCloud::Common::AbstractModel
        # @param ID: 事件ID
        # @type ID: Integer

        attr_accessor :ID

        def initialize(id=nil)
          @ID = id
        end

        def deserialize(params)
          @ID = params['ID']
        end
      end

      # DescribeK8sApiAbnormalEventInfo返回参数结构体
      class DescribeK8sApiAbnormalEventInfoResponse < TencentCloud::Common::AbstractModel
        # @param Info: 事件详情
        # @type Info: :class:`Tencentcloud::Tcss.v20201101.models.K8sApiAbnormalEventInfo`
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :Info, :RequestId

        def initialize(info=nil, requestid=nil)
          @Info = info
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['Info'].nil?
            @Info = K8sApiAbnormalEventInfo.new
            @Info.deserialize(params['Info'])
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeK8sApiAbnormalEventList请求参数结构体
      class DescribeK8sApiAbnormalEventListRequest < TencentCloud::Common::AbstractModel
        # @param Filters: 过滤条件。
        # <li>TimeRange - string -是否必填: 否 - 时间范围筛选 ["2022-03-31 16:55:00", "2022-03-31 17:00:00"]</li>
        # <li>MatchRules - string  - 是否必填: 否 -命中规则筛选</li>
        # <li>RiskLevel - string  - 是否必填: 否 -威胁等级筛选</li>
        # <li>Status - string  - 是否必填: 否 -事件状态筛选</li>
        # <li>MatchRuleType - string  - 是否必填: 否 -命中规则类型筛选</li>
        # <li>ClusterRunningStatus - string  - 是否必填: 否 -集群运行状态</li>
        # <li>ClusterName - string  - 是否必填: 否 -集群名称</li>
        # <li>ClusterID - string  - 是否必填: 否 -集群ID</li>
        # @type Filters: Array
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Order: 排序方式
        # @type Order: String
        # @param By: 排序字段
        # LatestFoundTime: 最近生成时间
        # AlarmCount: 告警数量
        # @type By: String

        attr_accessor :Filters, :Limit, :Offset, :Order, :By

        def initialize(filters=nil, limit=nil, offset=nil, order=nil, by=nil)
          @Filters = filters
          @Limit = limit
          @Offset = offset
          @Order = order
          @By = by
        end

        def deserialize(params)
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              runtimefilters_tmp = RunTimeFilters.new
              runtimefilters_tmp.deserialize(i)
              @Filters << runtimefilters_tmp
            end
          end
          @Limit = params['Limit']
          @Offset = params['Offset']
          @Order = params['Order']
          @By = params['By']
        end
      end

      # DescribeK8sApiAbnormalEventList返回参数结构体
      class DescribeK8sApiAbnormalEventListResponse < TencentCloud::Common::AbstractModel
        # @param List: 事件列表
        # @type List: Array
        # @param TotalCount: 总数量
        # @type TotalCount: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :List, :TotalCount, :RequestId

        def initialize(list=nil, totalcount=nil, requestid=nil)
          @List = list
          @TotalCount = totalcount
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['List'].nil?
            @List = []
            params['List'].each do |i|
              k8sapiabnormaleventlistitem_tmp = K8sApiAbnormalEventListItem.new
              k8sapiabnormaleventlistitem_tmp.deserialize(i)
              @List << k8sapiabnormaleventlistitem_tmp
            end
          end
          @TotalCount = params['TotalCount']
          @RequestId = params['RequestId']
        end
      end

      # DescribeK8sApiAbnormalRuleInfo请求参数结构体
      class DescribeK8sApiAbnormalRuleInfoRequest < TencentCloud::Common::AbstractModel
        # @param RuleID: 规则ID
        # @type RuleID: String

        attr_accessor :RuleID

        def initialize(ruleid=nil)
          @RuleID = ruleid
        end

        def deserialize(params)
          @RuleID = params['RuleID']
        end
      end

      # DescribeK8sApiAbnormalRuleInfo返回参数结构体
      class DescribeK8sApiAbnormalRuleInfoResponse < TencentCloud::Common::AbstractModel
        # @param Info: 规则详情
        # @type Info: :class:`Tencentcloud::Tcss.v20201101.models.K8sApiAbnormalRuleInfo`
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :Info, :RequestId

        def initialize(info=nil, requestid=nil)
          @Info = info
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['Info'].nil?
            @Info = K8sApiAbnormalRuleInfo.new
            @Info.deserialize(params['Info'])
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeK8sApiAbnormalRuleList请求参数结构体
      class DescribeK8sApiAbnormalRuleListRequest < TencentCloud::Common::AbstractModel
        # @param Filters: 过滤条件。
        # <li>RuleType - string  - 是否必填: 否 -规则类型</li>
        # <li>Status - string  - 是否必填: 否 -状态</li>
        # @type Filters: Array
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Order: 排序方式
        # @type Order: String
        # @param By: 排序字段。
        # <li>UpdateTime - string  - 是否必填: 否 -最后更新时间</li>
        # <li>EffectClusterCount - string  - 是否必填: 否 -影响集群数</li>
        # @type By: String

        attr_accessor :Filters, :Limit, :Offset, :Order, :By

        def initialize(filters=nil, limit=nil, offset=nil, order=nil, by=nil)
          @Filters = filters
          @Limit = limit
          @Offset = offset
          @Order = order
          @By = by
        end

        def deserialize(params)
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              runtimefilters_tmp = RunTimeFilters.new
              runtimefilters_tmp.deserialize(i)
              @Filters << runtimefilters_tmp
            end
          end
          @Limit = params['Limit']
          @Offset = params['Offset']
          @Order = params['Order']
          @By = params['By']
        end
      end

      # DescribeK8sApiAbnormalRuleList返回参数结构体
      class DescribeK8sApiAbnormalRuleListResponse < TencentCloud::Common::AbstractModel
        # @param List: 规则列表
        # @type List: Array
        # @param TotalCount: 总数量
        # @type TotalCount: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :List, :TotalCount, :RequestId

        def initialize(list=nil, totalcount=nil, requestid=nil)
          @List = list
          @TotalCount = totalcount
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['List'].nil?
            @List = []
            params['List'].each do |i|
              k8sapiabnormalrulelistitem_tmp = K8sApiAbnormalRuleListItem.new
              k8sapiabnormalrulelistitem_tmp.deserialize(i)
              @List << k8sapiabnormalrulelistitem_tmp
            end
          end
          @TotalCount = params['TotalCount']
          @RequestId = params['RequestId']
        end
      end

      # DescribeK8sApiAbnormalRuleScopeList请求参数结构体
      class DescribeK8sApiAbnormalRuleScopeListRequest < TencentCloud::Common::AbstractModel
        # @param RuleID: 规则ID
        # @type RuleID: String
        # @param Offset: 偏移量
        # @type Offset: Integer
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Filters: 过滤条件。
        # <li>Action - string -是否必填: 否 - 执行动作</li>
        # <li>RiskLevel - string  - 是否必填: 否 -威胁等级筛选</li>
        # @type Filters: Array

        attr_accessor :RuleID, :Offset, :Limit, :Filters

        def initialize(ruleid=nil, offset=nil, limit=nil, filters=nil)
          @RuleID = ruleid
          @Offset = offset
          @Limit = limit
          @Filters = filters
        end

        def deserialize(params)
          @RuleID = params['RuleID']
          @Offset = params['Offset']
          @Limit = params['Limit']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              runtimefilters_tmp = RunTimeFilters.new
              runtimefilters_tmp.deserialize(i)
              @Filters << runtimefilters_tmp
            end
          end
        end
      end

      # DescribeK8sApiAbnormalRuleScopeList返回参数结构体
      class DescribeK8sApiAbnormalRuleScopeListResponse < TencentCloud::Common::AbstractModel
        # @param TotalCount: 总数
        # @type TotalCount: Integer
        # @param List: 列表
        # @type List: Array
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TotalCount, :List, :RequestId

        def initialize(totalcount=nil, list=nil, requestid=nil)
          @TotalCount = totalcount
          @List = list
          @RequestId = requestid
        end

        def deserialize(params)
          @TotalCount = params['TotalCount']
          unless params['List'].nil?
            @List = []
            params['List'].each do |i|
              k8sapiabnormalrulescopeinfo_tmp = K8sApiAbnormalRuleScopeInfo.new
              k8sapiabnormalrulescopeinfo_tmp.deserialize(i)
              @List << k8sapiabnormalrulescopeinfo_tmp
            end
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeK8sApiAbnormalSummary请求参数结构体
      class DescribeK8sApiAbnormalSummaryRequest < TencentCloud::Common::AbstractModel


        def initialize()
        end

        def deserialize(params)
        end
      end

      # DescribeK8sApiAbnormalSummary返回参数结构体
      class DescribeK8sApiAbnormalSummaryResponse < TencentCloud::Common::AbstractModel
        # @param UnhandleEventCount: 待处理事件个数
        # @type UnhandleEventCount: Integer
        # @param UnhandleHighLevelEventCount: 待处理高危事件个数
        # @type UnhandleHighLevelEventCount: Integer
        # @param UnhandleMediumLevelEventCount: 待处理中危事件个数
        # @type UnhandleMediumLevelEventCount: Integer
        # @param UnhandleLowLevelEventCount: 待处理低危事件个数
        # @type UnhandleLowLevelEventCount: Integer
        # @param UnhandleNoticeLevelEventCount: 待处理提示级别事件个数
        # @type UnhandleNoticeLevelEventCount: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :UnhandleEventCount, :UnhandleHighLevelEventCount, :UnhandleMediumLevelEventCount, :UnhandleLowLevelEventCount, :UnhandleNoticeLevelEventCount, :RequestId

        def initialize(unhandleeventcount=nil, unhandlehighleveleventcount=nil, unhandlemediumleveleventcount=nil, unhandlelowleveleventcount=nil, unhandlenoticeleveleventcount=nil, requestid=nil)
          @UnhandleEventCount = unhandleeventcount
          @UnhandleHighLevelEventCount = unhandlehighleveleventcount
          @UnhandleMediumLevelEventCount = unhandlemediumleveleventcount
          @UnhandleLowLevelEventCount = unhandlelowleveleventcount
          @UnhandleNoticeLevelEventCount = unhandlenoticeleveleventcount
          @RequestId = requestid
        end

        def deserialize(params)
          @UnhandleEventCount = params['UnhandleEventCount']
          @UnhandleHighLevelEventCount = params['UnhandleHighLevelEventCount']
          @UnhandleMediumLevelEventCount = params['UnhandleMediumLevelEventCount']
          @UnhandleLowLevelEventCount = params['UnhandleLowLevelEventCount']
          @UnhandleNoticeLevelEventCount = params['UnhandleNoticeLevelEventCount']
          @RequestId = params['RequestId']
        end
      end

      # DescribeK8sApiAbnormalTendency请求参数结构体
      class DescribeK8sApiAbnormalTendencyRequest < TencentCloud::Common::AbstractModel
        # @param TendencyPeriod: 趋势周期(默认为7天)
        # @type TendencyPeriod: Integer

        attr_accessor :TendencyPeriod

        def initialize(tendencyperiod=nil)
          @TendencyPeriod = tendencyperiod
        end

        def deserialize(params)
          @TendencyPeriod = params['TendencyPeriod']
        end
      end

      # DescribeK8sApiAbnormalTendency返回参数结构体
      class DescribeK8sApiAbnormalTendencyResponse < TencentCloud::Common::AbstractModel
        # @param List: 趋势列表
        # @type List: Array
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :List, :RequestId

        def initialize(list=nil, requestid=nil)
          @List = list
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['List'].nil?
            @List = []
            params['List'].each do |i|
              k8sapiabnormaltendencyitem_tmp = K8sApiAbnormalTendencyItem.new
              k8sapiabnormaltendencyitem_tmp.deserialize(i)
              @List << k8sapiabnormaltendencyitem_tmp
            end
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeLogStorageStatistic请求参数结构体
      class DescribeLogStorageStatisticRequest < TencentCloud::Common::AbstractModel


        def initialize()
        end

        def deserialize(params)
        end
      end

      # DescribeLogStorageStatistic返回参数结构体
      class DescribeLogStorageStatisticResponse < TencentCloud::Common::AbstractModel
        # @param TotalSize: 总容量（单位：B）
        # @type TotalSize: Integer
        # @param UsedSize: 已使用容量（单位：B）
        # @type UsedSize: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TotalSize, :UsedSize, :RequestId

        def initialize(totalsize=nil, usedsize=nil, requestid=nil)
          @TotalSize = totalsize
          @UsedSize = usedsize
          @RequestId = requestid
        end

        def deserialize(params)
          @TotalSize = params['TotalSize']
          @UsedSize = params['UsedSize']
          @RequestId = params['RequestId']
        end
      end

      # DescribeNetworkFirewallAuditRecord请求参数结构体
      class DescribeNetworkFirewallAuditRecordRequest < TencentCloud::Common::AbstractModel
        # @param Offset: 偏移量
        # @type Offset: Integer
        # @param Limit: 每次查询的最大记录数量
        # @type Limit: Integer
        # @param Filters: Name - Action
        # Name 可取值：publish，unpublish，confirm，add，update，delete
        # @type Filters: Array
        # @param By: 排序字段
        # @type By: String
        # @param Order: 排序方式 asc,desc
        # @type Order: String

        attr_accessor :Offset, :Limit, :Filters, :By, :Order

        def initialize(offset=nil, limit=nil, filters=nil, by=nil, order=nil)
          @Offset = offset
          @Limit = limit
          @Filters = filters
          @By = by
          @Order = order
        end

        def deserialize(params)
          @Offset = params['Offset']
          @Limit = params['Limit']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              compliancefilters_tmp = ComplianceFilters.new
              compliancefilters_tmp.deserialize(i)
              @Filters << compliancefilters_tmp
            end
          end
          @By = params['By']
          @Order = params['Order']
        end
      end

      # DescribeNetworkFirewallAuditRecord返回参数结构体
      class DescribeNetworkFirewallAuditRecordResponse < TencentCloud::Common::AbstractModel
        # @param TotalCount: 集群审计总数
        # @type TotalCount: Integer
        # @param AuditList: 集群的审计详细信息
        # @type AuditList: Array
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TotalCount, :AuditList, :RequestId

        def initialize(totalcount=nil, auditlist=nil, requestid=nil)
          @TotalCount = totalcount
          @AuditList = auditlist
          @RequestId = requestid
        end

        def deserialize(params)
          @TotalCount = params['TotalCount']
          unless params['AuditList'].nil?
            @AuditList = []
            params['AuditList'].each do |i|
              networkauditrecord_tmp = NetworkAuditRecord.new
              networkauditrecord_tmp.deserialize(i)
              @AuditList << networkauditrecord_tmp
            end
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeNetworkFirewallClusterList请求参数结构体
      class DescribeNetworkFirewallClusterListRequest < TencentCloud::Common::AbstractModel
        # @param Offset: 偏移量
        # @type Offset: Integer
        # @param Limit: 每次查询的最大记录数量
        # @type Limit: Integer
        # @param Filters: Name - String
        # Name 可取值：ClusterName,ClusterId,ClusterType,Region,ClusterCheckMode,ClusterAutoCheck
        # @type Filters: Array
        # @param By: 排序字段
        # @type By: String
        # @param Order: 排序方式 asc,desc
        # @type Order: String

        attr_accessor :Offset, :Limit, :Filters, :By, :Order

        def initialize(offset=nil, limit=nil, filters=nil, by=nil, order=nil)
          @Offset = offset
          @Limit = limit
          @Filters = filters
          @By = by
          @Order = order
        end

        def deserialize(params)
          @Offset = params['Offset']
          @Limit = params['Limit']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              compliancefilters_tmp = ComplianceFilters.new
              compliancefilters_tmp.deserialize(i)
              @Filters << compliancefilters_tmp
            end
          end
          @By = params['By']
          @Order = params['Order']
        end
      end

      # DescribeNetworkFirewallClusterList返回参数结构体
      class DescribeNetworkFirewallClusterListResponse < TencentCloud::Common::AbstractModel
        # @param TotalCount: 集群总数
        # @type TotalCount: Integer
        # @param ClusterInfoList: 集群的详细信息
        # @type ClusterInfoList: Array
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TotalCount, :ClusterInfoList, :RequestId

        def initialize(totalcount=nil, clusterinfolist=nil, requestid=nil)
          @TotalCount = totalcount
          @ClusterInfoList = clusterinfolist
          @RequestId = requestid
        end

        def deserialize(params)
          @TotalCount = params['TotalCount']
          unless params['ClusterInfoList'].nil?
            @ClusterInfoList = []
            params['ClusterInfoList'].each do |i|
              networkclusterinfoitem_tmp = NetworkClusterInfoItem.new
              networkclusterinfoitem_tmp.deserialize(i)
              @ClusterInfoList << networkclusterinfoitem_tmp
            end
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeNetworkFirewallClusterRefreshStatus请求参数结构体
      class DescribeNetworkFirewallClusterRefreshStatusRequest < TencentCloud::Common::AbstractModel
        # @param TaskId: 任务ID
        # @type TaskId: Integer

        attr_accessor :TaskId

        def initialize(taskid=nil)
          @TaskId = taskid
        end

        def deserialize(params)
          @TaskId = params['TaskId']
        end
      end

      # DescribeNetworkFirewallClusterRefreshStatus返回参数结构体
      class DescribeNetworkFirewallClusterRefreshStatusResponse < TencentCloud::Common::AbstractModel
        # @param TaskStatus: 任务状态，可能为：Task_Running,Task_Succ,Task_Error,Task_NoExist
        # @type TaskStatus: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TaskStatus, :RequestId

        def initialize(taskstatus=nil, requestid=nil)
          @TaskStatus = taskstatus
          @RequestId = requestid
        end

        def deserialize(params)
          @TaskStatus = params['TaskStatus']
          @RequestId = params['RequestId']
        end
      end

      # DescribeNetworkFirewallNamespaceLabelList请求参数结构体
      class DescribeNetworkFirewallNamespaceLabelListRequest < TencentCloud::Common::AbstractModel
        # @param ClusterId: 集群id
        # @type ClusterId: String
        # @param Offset: 偏移量
        # @type Offset: Integer
        # @param Limit: 每次查询的最大记录数量
        # @type Limit: Integer
        # @param Filters: Name - String
        # Name 可取值：ClusterName,ClusterId,ClusterType,Region,ClusterCheckMode,ClusterAutoCheck
        # @type Filters: Array
        # @param By: 排序字段
        # @type By: String
        # @param Order: 排序方式 asc,desc
        # @type Order: String

        attr_accessor :ClusterId, :Offset, :Limit, :Filters, :By, :Order

        def initialize(clusterid=nil, offset=nil, limit=nil, filters=nil, by=nil, order=nil)
          @ClusterId = clusterid
          @Offset = offset
          @Limit = limit
          @Filters = filters
          @By = by
          @Order = order
        end

        def deserialize(params)
          @ClusterId = params['ClusterId']
          @Offset = params['Offset']
          @Limit = params['Limit']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              compliancefilters_tmp = ComplianceFilters.new
              compliancefilters_tmp.deserialize(i)
              @Filters << compliancefilters_tmp
            end
          end
          @By = params['By']
          @Order = params['Order']
        end
      end

      # DescribeNetworkFirewallNamespaceLabelList返回参数结构体
      class DescribeNetworkFirewallNamespaceLabelListResponse < TencentCloud::Common::AbstractModel
        # @param TotalCount: 集群总数
        # @type TotalCount: Integer
        # @param ClusterNamespaceLabelList: 集群空间标签详细信息
        # @type ClusterNamespaceLabelList: Array
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TotalCount, :ClusterNamespaceLabelList, :RequestId

        def initialize(totalcount=nil, clusternamespacelabellist=nil, requestid=nil)
          @TotalCount = totalcount
          @ClusterNamespaceLabelList = clusternamespacelabellist
          @RequestId = requestid
        end

        def deserialize(params)
          @TotalCount = params['TotalCount']
          unless params['ClusterNamespaceLabelList'].nil?
            @ClusterNamespaceLabelList = []
            params['ClusterNamespaceLabelList'].each do |i|
              networkclusternamespacelabelinfo_tmp = NetworkClusterNamespaceLabelInfo.new
              networkclusternamespacelabelinfo_tmp.deserialize(i)
              @ClusterNamespaceLabelList << networkclusternamespacelabelinfo_tmp
            end
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeNetworkFirewallNamespaceList请求参数结构体
      class DescribeNetworkFirewallNamespaceListRequest < TencentCloud::Common::AbstractModel
        # @param ClusterId: 集群id
        # @type ClusterId: String
        # @param Offset: 偏移量
        # @type Offset: Integer
        # @param Limit: 每次查询的最大记录数量
        # @type Limit: Integer
        # @param Filters: Name - String
        # Name 可取值：ClusterName,ClusterId,ClusterType,Region,ClusterCheckMode,ClusterAutoCheck
        # @type Filters: Array
        # @param By: 排序字段
        # @type By: String
        # @param Order: 排序方式 asc,desc
        # @type Order: String

        attr_accessor :ClusterId, :Offset, :Limit, :Filters, :By, :Order

        def initialize(clusterid=nil, offset=nil, limit=nil, filters=nil, by=nil, order=nil)
          @ClusterId = clusterid
          @Offset = offset
          @Limit = limit
          @Filters = filters
          @By = by
          @Order = order
        end

        def deserialize(params)
          @ClusterId = params['ClusterId']
          @Offset = params['Offset']
          @Limit = params['Limit']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              compliancefilters_tmp = ComplianceFilters.new
              compliancefilters_tmp.deserialize(i)
              @Filters << compliancefilters_tmp
            end
          end
          @By = params['By']
          @Order = params['Order']
        end
      end

      # DescribeNetworkFirewallNamespaceList返回参数结构体
      class DescribeNetworkFirewallNamespaceListResponse < TencentCloud::Common::AbstractModel
        # @param TotalCount: 集群总数
        # @type TotalCount: Integer
        # @param ClusterNamespaceList: 集群的详细信息
        # @type ClusterNamespaceList: Array
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TotalCount, :ClusterNamespaceList, :RequestId

        def initialize(totalcount=nil, clusternamespacelist=nil, requestid=nil)
          @TotalCount = totalcount
          @ClusterNamespaceList = clusternamespacelist
          @RequestId = requestid
        end

        def deserialize(params)
          @TotalCount = params['TotalCount']
          unless params['ClusterNamespaceList'].nil?
            @ClusterNamespaceList = []
            params['ClusterNamespaceList'].each do |i|
              networkclusternamespaceinfo_tmp = NetworkClusterNamespaceInfo.new
              networkclusternamespaceinfo_tmp.deserialize(i)
              @ClusterNamespaceList << networkclusternamespaceinfo_tmp
            end
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeNetworkFirewallPodLabelsList请求参数结构体
      class DescribeNetworkFirewallPodLabelsListRequest < TencentCloud::Common::AbstractModel
        # @param ClusterId: 集群id
        # @type ClusterId: String
        # @param Offset: 偏移量
        # @type Offset: Integer
        # @param Limit: 每次查询的最大记录数量
        # @type Limit: Integer
        # @param Filters: Name - String
        # Name 可取值：ClusterName,ClusterId,ClusterType,Region,ClusterCheckMode,ClusterAutoCheck
        # @type Filters: Array
        # @param By: 排序字段
        # @type By: String
        # @param Order: 排序方式 asc,desc
        # @type Order: String

        attr_accessor :ClusterId, :Offset, :Limit, :Filters, :By, :Order

        def initialize(clusterid=nil, offset=nil, limit=nil, filters=nil, by=nil, order=nil)
          @ClusterId = clusterid
          @Offset = offset
          @Limit = limit
          @Filters = filters
          @By = by
          @Order = order
        end

        def deserialize(params)
          @ClusterId = params['ClusterId']
          @Offset = params['Offset']
          @Limit = params['Limit']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              compliancefilters_tmp = ComplianceFilters.new
              compliancefilters_tmp.deserialize(i)
              @Filters << compliancefilters_tmp
            end
          end
          @By = params['By']
          @Order = params['Order']
        end
      end

      # DescribeNetworkFirewallPodLabelsList返回参数结构体
      class DescribeNetworkFirewallPodLabelsListResponse < TencentCloud::Common::AbstractModel
        # @param TotalCount: 集群pod总数
        # @type TotalCount: Integer
        # @param PodList: 集群pod详细信息
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type PodList: Array
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TotalCount, :PodList, :RequestId

        def initialize(totalcount=nil, podlist=nil, requestid=nil)
          @TotalCount = totalcount
          @PodList = podlist
          @RequestId = requestid
        end

        def deserialize(params)
          @TotalCount = params['TotalCount']
          unless params['PodList'].nil?
            @PodList = []
            params['PodList'].each do |i|
              networkclusterpodinfo_tmp = NetworkClusterPodInfo.new
              networkclusterpodinfo_tmp.deserialize(i)
              @PodList << networkclusterpodinfo_tmp
            end
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeNetworkFirewallPolicyDetail请求参数结构体
      class DescribeNetworkFirewallPolicyDetailRequest < TencentCloud::Common::AbstractModel
        # @param Id: 策略Id
        # @type Id: Integer

        attr_accessor :Id

        def initialize(id=nil)
          @Id = id
        end

        def deserialize(params)
          @Id = params['Id']
        end
      end

      # DescribeNetworkFirewallPolicyDetail返回参数结构体
      class DescribeNetworkFirewallPolicyDetailResponse < TencentCloud::Common::AbstractModel
        # @param ClusterId: 集群Id
        # @type ClusterId: String
        # @param PolicyName: 策略名
        # @type PolicyName: String
        # @param Namespace: 命名空间
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Namespace: String
        # @param FromPolicyRule: 入站类型
        # @type FromPolicyRule: Integer
        # @param ToPolicyRule: 出站类型
        # @type ToPolicyRule: Integer
        # @param CustomPolicy: 自定义规则
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type CustomPolicy: Array
        # @param PodSelector: pod选择器
        # @type PodSelector: String
        # @param Description: 策略描述
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Description: String
        # @param PolicyCreateTime: 策略创建时间
        # @type PolicyCreateTime: String
        # @param PolicySourceType: 策略源类型，分为System和Manual，分别代表手动和系统添加
        # @type PolicySourceType: String
        # @param NetworkPolicyPlugin: 网络策略对应的网络插件
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type NetworkPolicyPlugin: String
        # @param PublishStatus: 网络策略状态
        # @type PublishStatus: String
        # @param PublishResult: 网络发布结果
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type PublishResult: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :ClusterId, :PolicyName, :Namespace, :FromPolicyRule, :ToPolicyRule, :CustomPolicy, :PodSelector, :Description, :PolicyCreateTime, :PolicySourceType, :NetworkPolicyPlugin, :PublishStatus, :PublishResult, :RequestId

        def initialize(clusterid=nil, policyname=nil, namespace=nil, frompolicyrule=nil, topolicyrule=nil, custompolicy=nil, podselector=nil, description=nil, policycreatetime=nil, policysourcetype=nil, networkpolicyplugin=nil, publishstatus=nil, publishresult=nil, requestid=nil)
          @ClusterId = clusterid
          @PolicyName = policyname
          @Namespace = namespace
          @FromPolicyRule = frompolicyrule
          @ToPolicyRule = topolicyrule
          @CustomPolicy = custompolicy
          @PodSelector = podselector
          @Description = description
          @PolicyCreateTime = policycreatetime
          @PolicySourceType = policysourcetype
          @NetworkPolicyPlugin = networkpolicyplugin
          @PublishStatus = publishstatus
          @PublishResult = publishresult
          @RequestId = requestid
        end

        def deserialize(params)
          @ClusterId = params['ClusterId']
          @PolicyName = params['PolicyName']
          @Namespace = params['Namespace']
          @FromPolicyRule = params['FromPolicyRule']
          @ToPolicyRule = params['ToPolicyRule']
          unless params['CustomPolicy'].nil?
            @CustomPolicy = []
            params['CustomPolicy'].each do |i|
              networkcustompolicy_tmp = NetworkCustomPolicy.new
              networkcustompolicy_tmp.deserialize(i)
              @CustomPolicy << networkcustompolicy_tmp
            end
          end
          @PodSelector = params['PodSelector']
          @Description = params['Description']
          @PolicyCreateTime = params['PolicyCreateTime']
          @PolicySourceType = params['PolicySourceType']
          @NetworkPolicyPlugin = params['NetworkPolicyPlugin']
          @PublishStatus = params['PublishStatus']
          @PublishResult = params['PublishResult']
          @RequestId = params['RequestId']
        end
      end

      # DescribeNetworkFirewallPolicyDiscover请求参数结构体
      class DescribeNetworkFirewallPolicyDiscoverRequest < TencentCloud::Common::AbstractModel
        # @param TaskId: 任务ID
        # @type TaskId: Integer

        attr_accessor :TaskId

        def initialize(taskid=nil)
          @TaskId = taskid
        end

        def deserialize(params)
          @TaskId = params['TaskId']
        end
      end

      # DescribeNetworkFirewallPolicyDiscover返回参数结构体
      class DescribeNetworkFirewallPolicyDiscoverResponse < TencentCloud::Common::AbstractModel
        # @param TaskStatus: 任务状态，可能为：Task_Running,Task_Succ,Task_Error,Task_NoExist
        # @type TaskStatus: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TaskStatus, :RequestId

        def initialize(taskstatus=nil, requestid=nil)
          @TaskStatus = taskstatus
          @RequestId = requestid
        end

        def deserialize(params)
          @TaskStatus = params['TaskStatus']
          @RequestId = params['RequestId']
        end
      end

      # DescribeNetworkFirewallPolicyList请求参数结构体
      class DescribeNetworkFirewallPolicyListRequest < TencentCloud::Common::AbstractModel
        # @param ClusterId: 集群id
        # @type ClusterId: String
        # @param Offset: 偏移量
        # @type Offset: Integer
        # @param Limit: 每次查询的最大记录数量
        # @type Limit: Integer
        # @param Filters: Name - String
        # Name 可取值：ClusterName,ClusterId,ClusterType,Region,ClusterCheckMode,ClusterAutoCheck
        # @type Filters: Array
        # @param By: 排序字段
        # @type By: String
        # @param Order: 排序方式 asc,desc
        # @type Order: String

        attr_accessor :ClusterId, :Offset, :Limit, :Filters, :By, :Order

        def initialize(clusterid=nil, offset=nil, limit=nil, filters=nil, by=nil, order=nil)
          @ClusterId = clusterid
          @Offset = offset
          @Limit = limit
          @Filters = filters
          @By = by
          @Order = order
        end

        def deserialize(params)
          @ClusterId = params['ClusterId']
          @Offset = params['Offset']
          @Limit = params['Limit']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              compliancefilters_tmp = ComplianceFilters.new
              compliancefilters_tmp.deserialize(i)
              @Filters << compliancefilters_tmp
            end
          end
          @By = params['By']
          @Order = params['Order']
        end
      end

      # DescribeNetworkFirewallPolicyList返回参数结构体
      class DescribeNetworkFirewallPolicyListResponse < TencentCloud::Common::AbstractModel
        # @param TotalCount: 集群总数
        # @type TotalCount: Integer
        # @param NetPolicy: 集群的详细信息
        # @type NetPolicy: Array
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TotalCount, :NetPolicy, :RequestId

        def initialize(totalcount=nil, netpolicy=nil, requestid=nil)
          @TotalCount = totalcount
          @NetPolicy = netpolicy
          @RequestId = requestid
        end

        def deserialize(params)
          @TotalCount = params['TotalCount']
          unless params['NetPolicy'].nil?
            @NetPolicy = []
            params['NetPolicy'].each do |i|
              networkpolicyinfoitem_tmp = NetworkPolicyInfoItem.new
              networkpolicyinfoitem_tmp.deserialize(i)
              @NetPolicy << networkpolicyinfoitem_tmp
            end
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeNetworkFirewallPolicyStatus请求参数结构体
      class DescribeNetworkFirewallPolicyStatusRequest < TencentCloud::Common::AbstractModel
        # @param TaskId: 任务ID
        # @type TaskId: Integer

        attr_accessor :TaskId

        def initialize(taskid=nil)
          @TaskId = taskid
        end

        def deserialize(params)
          @TaskId = params['TaskId']
        end
      end

      # DescribeNetworkFirewallPolicyStatus返回参数结构体
      class DescribeNetworkFirewallPolicyStatusResponse < TencentCloud::Common::AbstractModel
        # @param TaskStatus: 任务状态，可能为：Task_Running,Task_Succ,Task_Error,Task_NoExist
        # @type TaskStatus: String
        # @param TaskResult: NameRepeat,K8sRuleIngressPortError等
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type TaskResult: Array
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TaskStatus, :TaskResult, :RequestId

        def initialize(taskstatus=nil, taskresult=nil, requestid=nil)
          @TaskStatus = taskstatus
          @TaskResult = taskresult
          @RequestId = requestid
        end

        def deserialize(params)
          @TaskStatus = params['TaskStatus']
          @TaskResult = params['TaskResult']
          @RequestId = params['RequestId']
        end
      end

      # DescribeNetworkFirewallPolicyYamlDetail请求参数结构体
      class DescribeNetworkFirewallPolicyYamlDetailRequest < TencentCloud::Common::AbstractModel
        # @param Id: 策略Id
        # @type Id: Integer

        attr_accessor :Id

        def initialize(id=nil)
          @Id = id
        end

        def deserialize(params)
          @Id = params['Id']
        end
      end

      # DescribeNetworkFirewallPolicyYamlDetail返回参数结构体
      class DescribeNetworkFirewallPolicyYamlDetailResponse < TencentCloud::Common::AbstractModel
        # @param ClusterId: 集群Id
        # @type ClusterId: String
        # @param PolicyName: 策略名
        # @type PolicyName: String
        # @param Yaml: base64编码的yaml字符串
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Yaml: String
        # @param Description: 策略描述
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Description: String
        # @param PolicyCreateTime: 策略创建时间
        # @type PolicyCreateTime: String
        # @param PolicySourceType: 策略源类型，分为System和Manual，分别代表手动和系统添加
        # @type PolicySourceType: String
        # @param NetworkPolicyPlugin: 网络策略对应的网络插件
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type NetworkPolicyPlugin: String
        # @param PublishStatus: 网络策略状态
        # @type PublishStatus: String
        # @param PublishResult: 网络发布结果
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type PublishResult: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :ClusterId, :PolicyName, :Yaml, :Description, :PolicyCreateTime, :PolicySourceType, :NetworkPolicyPlugin, :PublishStatus, :PublishResult, :RequestId

        def initialize(clusterid=nil, policyname=nil, yaml=nil, description=nil, policycreatetime=nil, policysourcetype=nil, networkpolicyplugin=nil, publishstatus=nil, publishresult=nil, requestid=nil)
          @ClusterId = clusterid
          @PolicyName = policyname
          @Yaml = yaml
          @Description = description
          @PolicyCreateTime = policycreatetime
          @PolicySourceType = policysourcetype
          @NetworkPolicyPlugin = networkpolicyplugin
          @PublishStatus = publishstatus
          @PublishResult = publishresult
          @RequestId = requestid
        end

        def deserialize(params)
          @ClusterId = params['ClusterId']
          @PolicyName = params['PolicyName']
          @Yaml = params['Yaml']
          @Description = params['Description']
          @PolicyCreateTime = params['PolicyCreateTime']
          @PolicySourceType = params['PolicySourceType']
          @NetworkPolicyPlugin = params['NetworkPolicyPlugin']
          @PublishStatus = params['PublishStatus']
          @PublishResult = params['PublishResult']
          @RequestId = params['RequestId']
        end
      end

      # DescribeNewestVul请求参数结构体
      class DescribeNewestVulRequest < TencentCloud::Common::AbstractModel


        def initialize()
        end

        def deserialize(params)
        end
      end

      # DescribeNewestVul返回参数结构体
      class DescribeNewestVulResponse < TencentCloud::Common::AbstractModel
        # @param PocID: 漏洞PocID
        # @type PocID: String
        # @param VulName: 漏洞名称
        # @type VulName: String
        # @param SubmitTime: 披露时间
        # @type SubmitTime: String
        # @param Status: 应急漏洞风险情况：NOT_SCAN：未扫描，SCANNING：扫描中，SCANNED：已扫描
        # @type Status: String
        # @param CVEID: 漏洞CVEID
        # @type CVEID: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :PocID, :VulName, :SubmitTime, :Status, :CVEID, :RequestId

        def initialize(pocid=nil, vulname=nil, submittime=nil, status=nil, cveid=nil, requestid=nil)
          @PocID = pocid
          @VulName = vulname
          @SubmitTime = submittime
          @Status = status
          @CVEID = cveid
          @RequestId = requestid
        end

        def deserialize(params)
          @PocID = params['PocID']
          @VulName = params['VulName']
          @SubmitTime = params['SubmitTime']
          @Status = params['Status']
          @CVEID = params['CVEID']
          @RequestId = params['RequestId']
        end
      end

      # DescribePostPayDetail请求参数结构体
      class DescribePostPayDetailRequest < TencentCloud::Common::AbstractModel
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer

        attr_accessor :Limit, :Offset

        def initialize(limit=nil, offset=nil)
          @Limit = limit
          @Offset = offset
        end

        def deserialize(params)
          @Limit = params['Limit']
          @Offset = params['Offset']
        end
      end

      # DescribePostPayDetail返回参数结构体
      class DescribePostPayDetailResponse < TencentCloud::Common::AbstractModel
        # @param SoftQuotaDayDetail: 弹性计费扣费详情
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type SoftQuotaDayDetail: Array
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :SoftQuotaDayDetail, :RequestId

        def initialize(softquotadaydetail=nil, requestid=nil)
          @SoftQuotaDayDetail = softquotadaydetail
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['SoftQuotaDayDetail'].nil?
            @SoftQuotaDayDetail = []
            params['SoftQuotaDayDetail'].each do |i|
              softquotadayinfo_tmp = SoftQuotaDayInfo.new
              softquotadayinfo_tmp.deserialize(i)
              @SoftQuotaDayDetail << softquotadayinfo_tmp
            end
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeProVersionInfo请求参数结构体
      class DescribeProVersionInfoRequest < TencentCloud::Common::AbstractModel


        def initialize()
        end

        def deserialize(params)
        end
      end

      # DescribeProVersionInfo返回参数结构体
      class DescribeProVersionInfoResponse < TencentCloud::Common::AbstractModel
        # @param StartTime: 专业版开始时间，补充购买时才不为空
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type StartTime: String
        # @param EndTime: 专业版结束时间，补充购买时才不为空
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type EndTime: String
        # @param CoresCnt: 需购买的机器核数
        # @type CoresCnt: Integer
        # @param MaxPostPayCoresCnt: 弹性计费上限
        # @type MaxPostPayCoresCnt: Integer
        # @param ResourceId: 资源ID
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ResourceId: String
        # @param BuyStatus: 购买状态
        # 待购: Pending
        # 已购: Normal
        # 隔离: Isolate
        # @type BuyStatus: String
        # @param IsPurchased: 是否曾经购买过(false:未曾 true:曾经购买过)
        # @type IsPurchased: Boolean
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :StartTime, :EndTime, :CoresCnt, :MaxPostPayCoresCnt, :ResourceId, :BuyStatus, :IsPurchased, :RequestId

        def initialize(starttime=nil, endtime=nil, corescnt=nil, maxpostpaycorescnt=nil, resourceid=nil, buystatus=nil, ispurchased=nil, requestid=nil)
          @StartTime = starttime
          @EndTime = endtime
          @CoresCnt = corescnt
          @MaxPostPayCoresCnt = maxpostpaycorescnt
          @ResourceId = resourceid
          @BuyStatus = buystatus
          @IsPurchased = ispurchased
          @RequestId = requestid
        end

        def deserialize(params)
          @StartTime = params['StartTime']
          @EndTime = params['EndTime']
          @CoresCnt = params['CoresCnt']
          @MaxPostPayCoresCnt = params['MaxPostPayCoresCnt']
          @ResourceId = params['ResourceId']
          @BuyStatus = params['BuyStatus']
          @IsPurchased = params['IsPurchased']
          @RequestId = params['RequestId']
        end
      end

      # DescribePromotionActivity请求参数结构体
      class DescribePromotionActivityRequest < TencentCloud::Common::AbstractModel
        # @param ActiveID: 活动ID
        # @type ActiveID: Integer

        attr_accessor :ActiveID

        def initialize(activeid=nil)
          @ActiveID = activeid
        end

        def deserialize(params)
          @ActiveID = params['ActiveID']
        end
      end

      # DescribePromotionActivity返回参数结构体
      class DescribePromotionActivityResponse < TencentCloud::Common::AbstractModel
        # @param List: 促销活动内容
        # @type List: Array
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :List, :RequestId

        def initialize(list=nil, requestid=nil)
          @List = list
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['List'].nil?
            @List = []
            params['List'].each do |i|
              promotionactivitycontent_tmp = PromotionActivityContent.new
              promotionactivitycontent_tmp.deserialize(i)
              @List << promotionactivitycontent_tmp
            end
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribePublicKey请求参数结构体
      class DescribePublicKeyRequest < TencentCloud::Common::AbstractModel


        def initialize()
        end

        def deserialize(params)
        end
      end

      # DescribePublicKey返回参数结构体
      class DescribePublicKeyResponse < TencentCloud::Common::AbstractModel
        # @param PublicKey: 公钥
        # @type PublicKey: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :PublicKey, :RequestId

        def initialize(publickey=nil, requestid=nil)
          @PublicKey = publickey
          @RequestId = requestid
        end

        def deserialize(params)
          @PublicKey = params['PublicKey']
          @RequestId = params['RequestId']
        end
      end

      # DescribePurchaseStateInfo请求参数结构体
      class DescribePurchaseStateInfoRequest < TencentCloud::Common::AbstractModel


        def initialize()
        end

        def deserialize(params)
        end
      end

      # DescribePurchaseStateInfo返回参数结构体
      class DescribePurchaseStateInfoResponse < TencentCloud::Common::AbstractModel
        # @param State: 0：可申请试用可购买；1：只可购买(含试用审核不通过和试用过期)；2：试用生效中；3：专业版生效中；4：专业版过期
        # @type State: Integer
        # @param AllCoresCnt: 总资源核数 = 总防护核数 + 未防护核数
        # @type AllCoresCnt: Integer
        # @param CoresCnt: 总防护核数 =已购核数+ 试用赠送核数 +弹性计费核数
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type CoresCnt: Integer
        # @param UndefendCoresCnt: 未防护核数(未开启防护资源核数)
        # @type UndefendCoresCnt: Integer
        # @param AuthorizedCoresCnt: 已购买核数
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type AuthorizedCoresCnt: Integer
        # @param GivenAuthorizedCoresCnt: 试用赠送专业版核心数
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type GivenAuthorizedCoresCnt: Integer
        # @param CurrentFlexibleCoresCnt: 当前弹性计费核数数量
        # @type CurrentFlexibleCoresCnt: Integer
        # @param ImageCnt: 镜像数
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ImageCnt: Integer
        # @param AuthorizedImageCnt: 已授权镜像数
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type AuthorizedImageCnt: Integer
        # @param ExpirationTime: 过期时间
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ExpirationTime: String
        # @param PurchasedAuthorizedCnt: 已购买镜像授权数
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type PurchasedAuthorizedCnt: Integer
        # @param AutomaticRenewal: 0表示默认状态(用户未设置，即初始状态)， 1表示自动续费，2表示明确不自动续费(用户设置)
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type AutomaticRenewal: Integer
        # @param GivenAuthorizedCnt: 试用期间赠送镜像授权数，可能会过期
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type GivenAuthorizedCnt: Integer
        # @param BeginTime: 起始时间
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type BeginTime: String
        # @param SubState: 子状态(具体意义依据State字段而定)
        # State为4时，有效值为: ISOLATE(隔离) DESTROED(已销毁)
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type SubState: String
        # @param InquireKey: 计费key
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type InquireKey: String
        # @param DefendPolicy: 防护策略
        # @type DefendPolicy: String
        # @param FlexibleCoresLimit: 弹性计费核数上限
        # @type FlexibleCoresLimit: Integer
        # @param DefendClusterCoresCnt: 已防护集群核数
        # @type DefendClusterCoresCnt: Integer
        # @param DefendHostCoresCnt: 已防护主机核数
        # @type DefendHostCoresCnt: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :State, :AllCoresCnt, :CoresCnt, :UndefendCoresCnt, :AuthorizedCoresCnt, :GivenAuthorizedCoresCnt, :CurrentFlexibleCoresCnt, :ImageCnt, :AuthorizedImageCnt, :ExpirationTime, :PurchasedAuthorizedCnt, :AutomaticRenewal, :GivenAuthorizedCnt, :BeginTime, :SubState, :InquireKey, :DefendPolicy, :FlexibleCoresLimit, :DefendClusterCoresCnt, :DefendHostCoresCnt, :RequestId

        def initialize(state=nil, allcorescnt=nil, corescnt=nil, undefendcorescnt=nil, authorizedcorescnt=nil, givenauthorizedcorescnt=nil, currentflexiblecorescnt=nil, imagecnt=nil, authorizedimagecnt=nil, expirationtime=nil, purchasedauthorizedcnt=nil, automaticrenewal=nil, givenauthorizedcnt=nil, begintime=nil, substate=nil, inquirekey=nil, defendpolicy=nil, flexiblecoreslimit=nil, defendclustercorescnt=nil, defendhostcorescnt=nil, requestid=nil)
          @State = state
          @AllCoresCnt = allcorescnt
          @CoresCnt = corescnt
          @UndefendCoresCnt = undefendcorescnt
          @AuthorizedCoresCnt = authorizedcorescnt
          @GivenAuthorizedCoresCnt = givenauthorizedcorescnt
          @CurrentFlexibleCoresCnt = currentflexiblecorescnt
          @ImageCnt = imagecnt
          @AuthorizedImageCnt = authorizedimagecnt
          @ExpirationTime = expirationtime
          @PurchasedAuthorizedCnt = purchasedauthorizedcnt
          @AutomaticRenewal = automaticrenewal
          @GivenAuthorizedCnt = givenauthorizedcnt
          @BeginTime = begintime
          @SubState = substate
          @InquireKey = inquirekey
          @DefendPolicy = defendpolicy
          @FlexibleCoresLimit = flexiblecoreslimit
          @DefendClusterCoresCnt = defendclustercorescnt
          @DefendHostCoresCnt = defendhostcorescnt
          @RequestId = requestid
        end

        def deserialize(params)
          @State = params['State']
          @AllCoresCnt = params['AllCoresCnt']
          @CoresCnt = params['CoresCnt']
          @UndefendCoresCnt = params['UndefendCoresCnt']
          @AuthorizedCoresCnt = params['AuthorizedCoresCnt']
          @GivenAuthorizedCoresCnt = params['GivenAuthorizedCoresCnt']
          @CurrentFlexibleCoresCnt = params['CurrentFlexibleCoresCnt']
          @ImageCnt = params['ImageCnt']
          @AuthorizedImageCnt = params['AuthorizedImageCnt']
          @ExpirationTime = params['ExpirationTime']
          @PurchasedAuthorizedCnt = params['PurchasedAuthorizedCnt']
          @AutomaticRenewal = params['AutomaticRenewal']
          @GivenAuthorizedCnt = params['GivenAuthorizedCnt']
          @BeginTime = params['BeginTime']
          @SubState = params['SubState']
          @InquireKey = params['InquireKey']
          @DefendPolicy = params['DefendPolicy']
          @FlexibleCoresLimit = params['FlexibleCoresLimit']
          @DefendClusterCoresCnt = params['DefendClusterCoresCnt']
          @DefendHostCoresCnt = params['DefendHostCoresCnt']
          @RequestId = params['RequestId']
        end
      end

      # DescribeRefreshTask请求参数结构体
      class DescribeRefreshTaskRequest < TencentCloud::Common::AbstractModel
        # @param TaskId: 任务ID
        # @type TaskId: Integer
        # @param NewTaskID: 新任务ID
        # @type NewTaskID: String

        attr_accessor :TaskId, :NewTaskID

        def initialize(taskid=nil, newtaskid=nil)
          @TaskId = taskid
          @NewTaskID = newtaskid
        end

        def deserialize(params)
          @TaskId = params['TaskId']
          @NewTaskID = params['NewTaskID']
        end
      end

      # DescribeRefreshTask返回参数结构体
      class DescribeRefreshTaskResponse < TencentCloud::Common::AbstractModel
        # @param TaskStatus: 刷新任务状态，可能为：Task_New,Task_Running,Task_Finish,Task_Error,Task_NoExist
        # @type TaskStatus: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TaskStatus, :RequestId

        def initialize(taskstatus=nil, requestid=nil)
          @TaskStatus = taskstatus
          @RequestId = requestid
        end

        def deserialize(params)
          @TaskStatus = params['TaskStatus']
          @RequestId = params['RequestId']
        end
      end

      # DescribeReverseShellDetail请求参数结构体
      class DescribeReverseShellDetailRequest < TencentCloud::Common::AbstractModel
        # @param EventId: 事件唯一id
        # @type EventId: String

        attr_accessor :EventId

        def initialize(eventid=nil)
          @EventId = eventid
        end

        def deserialize(params)
          @EventId = params['EventId']
        end
      end

      # DescribeReverseShellDetail返回参数结构体
      class DescribeReverseShellDetailResponse < TencentCloud::Common::AbstractModel
        # @param EventBaseInfo: 事件基本信息
        # @type EventBaseInfo: :class:`Tencentcloud::Tcss.v20201101.models.RunTimeEventBaseInfo`
        # @param ProcessInfo: 进程信息
        # @type ProcessInfo: :class:`Tencentcloud::Tcss.v20201101.models.ProcessDetailInfo`
        # @param ParentProcessInfo: 父进程信息
        # @type ParentProcessInfo: :class:`Tencentcloud::Tcss.v20201101.models.ProcessDetailBaseInfo`
        # @param EventDetail: 事件描述
        # @type EventDetail: :class:`Tencentcloud::Tcss.v20201101.models.ReverseShellEventDescription`
        # @param AncestorProcessInfo: 祖先进程信息
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type AncestorProcessInfo: :class:`Tencentcloud::Tcss.v20201101.models.ProcessBaseInfo`
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :EventBaseInfo, :ProcessInfo, :ParentProcessInfo, :EventDetail, :AncestorProcessInfo, :RequestId

        def initialize(eventbaseinfo=nil, processinfo=nil, parentprocessinfo=nil, eventdetail=nil, ancestorprocessinfo=nil, requestid=nil)
          @EventBaseInfo = eventbaseinfo
          @ProcessInfo = processinfo
          @ParentProcessInfo = parentprocessinfo
          @EventDetail = eventdetail
          @AncestorProcessInfo = ancestorprocessinfo
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['EventBaseInfo'].nil?
            @EventBaseInfo = RunTimeEventBaseInfo.new
            @EventBaseInfo.deserialize(params['EventBaseInfo'])
          end
          unless params['ProcessInfo'].nil?
            @ProcessInfo = ProcessDetailInfo.new
            @ProcessInfo.deserialize(params['ProcessInfo'])
          end
          unless params['ParentProcessInfo'].nil?
            @ParentProcessInfo = ProcessDetailBaseInfo.new
            @ParentProcessInfo.deserialize(params['ParentProcessInfo'])
          end
          unless params['EventDetail'].nil?
            @EventDetail = ReverseShellEventDescription.new
            @EventDetail.deserialize(params['EventDetail'])
          end
          unless params['AncestorProcessInfo'].nil?
            @AncestorProcessInfo = ProcessBaseInfo.new
            @AncestorProcessInfo.deserialize(params['AncestorProcessInfo'])
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeReverseShellEventsExport请求参数结构体
      class DescribeReverseShellEventsExportRequest < TencentCloud::Common::AbstractModel
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Filters: 过滤参数,"Filters":[{"Name":"Status","Values":["2"]}]
        # @type Filters: Array
        # @param Order: 升序降序,asc desc
        # @type Order: String
        # @param By: 排序字段
        # @type By: String
        # @param ExportField: 导出字段
        # @type ExportField: Array

        attr_accessor :Limit, :Offset, :Filters, :Order, :By, :ExportField

        def initialize(limit=nil, offset=nil, filters=nil, order=nil, by=nil, exportfield=nil)
          @Limit = limit
          @Offset = offset
          @Filters = filters
          @Order = order
          @By = by
          @ExportField = exportfield
        end

        def deserialize(params)
          @Limit = params['Limit']
          @Offset = params['Offset']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              runtimefilters_tmp = RunTimeFilters.new
              runtimefilters_tmp.deserialize(i)
              @Filters << runtimefilters_tmp
            end
          end
          @Order = params['Order']
          @By = params['By']
          @ExportField = params['ExportField']
        end
      end

      # DescribeReverseShellEventsExport返回参数结构体
      class DescribeReverseShellEventsExportResponse < TencentCloud::Common::AbstractModel
        # @param DownloadUrl: execle下载地址
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type DownloadUrl: String
        # @param JobId: 任务ID
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type JobId: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :DownloadUrl, :JobId, :RequestId

        def initialize(downloadurl=nil, jobid=nil, requestid=nil)
          @DownloadUrl = downloadurl
          @JobId = jobid
          @RequestId = requestid
        end

        def deserialize(params)
          @DownloadUrl = params['DownloadUrl']
          @JobId = params['JobId']
          @RequestId = params['RequestId']
        end
      end

      # DescribeReverseShellEvents请求参数结构体
      class DescribeReverseShellEventsRequest < TencentCloud::Common::AbstractModel
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Filters: 过滤参数
        # InnerNetAlarmShow- int - 是否必填：1 - 内网告警展示 0 - 不展示
        # @type Filters: Array
        # @param Order: 升序降序,asc desc
        # @type Order: String
        # @param By: 排序字段
        # @type By: String

        attr_accessor :Limit, :Offset, :Filters, :Order, :By

        def initialize(limit=nil, offset=nil, filters=nil, order=nil, by=nil)
          @Limit = limit
          @Offset = offset
          @Filters = filters
          @Order = order
          @By = by
        end

        def deserialize(params)
          @Limit = params['Limit']
          @Offset = params['Offset']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              runtimefilters_tmp = RunTimeFilters.new
              runtimefilters_tmp.deserialize(i)
              @Filters << runtimefilters_tmp
            end
          end
          @Order = params['Order']
          @By = params['By']
        end
      end

      # DescribeReverseShellEvents返回参数结构体
      class DescribeReverseShellEventsResponse < TencentCloud::Common::AbstractModel
        # @param TotalCount: 事件总数量
        # @type TotalCount: Integer
        # @param EventSet: 反弹shell数组
        # @type EventSet: Array
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TotalCount, :EventSet, :RequestId

        def initialize(totalcount=nil, eventset=nil, requestid=nil)
          @TotalCount = totalcount
          @EventSet = eventset
          @RequestId = requestid
        end

        def deserialize(params)
          @TotalCount = params['TotalCount']
          unless params['EventSet'].nil?
            @EventSet = []
            params['EventSet'].each do |i|
              reverseshelleventinfo_tmp = ReverseShellEventInfo.new
              reverseshelleventinfo_tmp.deserialize(i)
              @EventSet << reverseshelleventinfo_tmp
            end
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeReverseShellWhiteListDetail请求参数结构体
      class DescribeReverseShellWhiteListDetailRequest < TencentCloud::Common::AbstractModel
        # @param WhiteListId: 白名单id
        # @type WhiteListId: String

        attr_accessor :WhiteListId

        def initialize(whitelistid=nil)
          @WhiteListId = whitelistid
        end

        def deserialize(params)
          @WhiteListId = params['WhiteListId']
        end
      end

      # DescribeReverseShellWhiteListDetail返回参数结构体
      class DescribeReverseShellWhiteListDetailResponse < TencentCloud::Common::AbstractModel
        # @param WhiteListDetailInfo: 事件基本信息
        # @type WhiteListDetailInfo: :class:`Tencentcloud::Tcss.v20201101.models.ReverseShellWhiteListInfo`
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :WhiteListDetailInfo, :RequestId

        def initialize(whitelistdetailinfo=nil, requestid=nil)
          @WhiteListDetailInfo = whitelistdetailinfo
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['WhiteListDetailInfo'].nil?
            @WhiteListDetailInfo = ReverseShellWhiteListInfo.new
            @WhiteListDetailInfo.deserialize(params['WhiteListDetailInfo'])
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeReverseShellWhiteLists请求参数结构体
      class DescribeReverseShellWhiteListsRequest < TencentCloud::Common::AbstractModel
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Filters: 过滤参数,"Filters":[{"Name":"Status","Values":["2"]}]
        # @type Filters: Array
        # @param Order: 升序降序,asc desc
        # @type Order: String
        # @param By: 排序字段
        # @type By: String

        attr_accessor :Limit, :Offset, :Filters, :Order, :By

        def initialize(limit=nil, offset=nil, filters=nil, order=nil, by=nil)
          @Limit = limit
          @Offset = offset
          @Filters = filters
          @Order = order
          @By = by
        end

        def deserialize(params)
          @Limit = params['Limit']
          @Offset = params['Offset']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              runtimefilters_tmp = RunTimeFilters.new
              runtimefilters_tmp.deserialize(i)
              @Filters << runtimefilters_tmp
            end
          end
          @Order = params['Order']
          @By = params['By']
        end
      end

      # DescribeReverseShellWhiteLists返回参数结构体
      class DescribeReverseShellWhiteListsResponse < TencentCloud::Common::AbstractModel
        # @param TotalCount: 事件总数量
        # @type TotalCount: Integer
        # @param WhiteListSet: 白名单信息列表
        # @type WhiteListSet: Array
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TotalCount, :WhiteListSet, :RequestId

        def initialize(totalcount=nil, whitelistset=nil, requestid=nil)
          @TotalCount = totalcount
          @WhiteListSet = whitelistset
          @RequestId = requestid
        end

        def deserialize(params)
          @TotalCount = params['TotalCount']
          unless params['WhiteListSet'].nil?
            @WhiteListSet = []
            params['WhiteListSet'].each do |i|
              reverseshellwhitelistbaseinfo_tmp = ReverseShellWhiteListBaseInfo.new
              reverseshellwhitelistbaseinfo_tmp.deserialize(i)
              @WhiteListSet << reverseshellwhitelistbaseinfo_tmp
            end
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeRiskDnsEventDetail请求参数结构体
      class DescribeRiskDnsEventDetailRequest < TencentCloud::Common::AbstractModel
        # @param EventID: 事件ID
        # @type EventID: Integer

        attr_accessor :EventID

        def initialize(eventid=nil)
          @EventID = eventid
        end

        def deserialize(params)
          @EventID = params['EventID']
        end
      end

      # DescribeRiskDnsEventDetail返回参数结构体
      class DescribeRiskDnsEventDetailResponse < TencentCloud::Common::AbstractModel
        # @param EventID: 事件ID
        # @type EventID: Integer
        # @param EventType: 事件类型，恶意域名请求：DOMAIN，恶意IP请求：IP
        # @type EventType: String
        # @param EventCount: 恶意请求次数
        # @type EventCount: Integer
        # @param FoundTime: 首次发现时间
        # @type FoundTime: String
        # @param LatestFoundTime: 最近生成时间
        # @type LatestFoundTime: String
        # @param ContainerID: 容器ID
        # @type ContainerID: String
        # @param ContainerName: 容器名称
        # @type ContainerName: String
        # @param ContainerNetStatus: 隔离状态
        # 未隔离  	NORMAL
        # 已隔离		ISOLATED
        # 隔离中		ISOLATING
        # 隔离失败	ISOLATE_FAILED
        # 解除隔离中  RESTORING
        # 解除隔离失败 RESTORE_FAILED
        # @type ContainerNetStatus: String
        # @param ContainerStatus: 容器状态
        # 正在运行: RUNNING
        # 暂停: PAUSED
        # 停止: STOPPED
        # 已经创建: CREATED
        # 已经销毁: DESTROYED
        # 正在重启中: RESTARTING
        # 迁移中: REMOVING
        # @type ContainerStatus: String
        # @param ContainerNetSubStatus: 容器子状态
        # "AGENT_OFFLINE"       //Agent离线
        # "NODE_DESTROYED"      //节点已销毁
        # "CONTAINER_EXITED"    //容器已退出
        # "CONTAINER_DESTROYED" //容器已销毁
        # "SHARED_HOST"         // 容器与主机共享网络
        # "RESOURCE_LIMIT"      //隔离操作资源超限
        # "UNKNOW"              // 原因未知
        # @type ContainerNetSubStatus: String
        # @param ContainerIsolateOperationSrc: 容器隔离操作来源
        # @type ContainerIsolateOperationSrc: String
        # @param ImageID: 镜像ID
        # @type ImageID: String
        # @param ImageName: 镜像名称
        # @type ImageName: String
        # @param HostName: 主机名称
        # @type HostName: String
        # @param HostIP: 内网IP
        # @type HostIP: String
        # @param PublicIP: 外网IP
        # @type PublicIP: String
        # @param PodName: 节点名称
        # @type PodName: String
        # @param Description: 事件描述
        # @type Description: String
        # @param Solution: 解决方案
        # @type Solution: String
        # @param Reference: 参考链接
        # @type Reference: Array
        # @param Address: 恶意域名或IP
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Address: String
        # @param City: 恶意IP所属城市
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type City: String
        # @param MatchRuleType: 命中规则类型
        # SYSTEM：系统规则
        #  USER：用户自定义
        # @type MatchRuleType: String
        # @param FeatureLabel: 标签特征
        # @type FeatureLabel: String
        # @param ProcessAuthority: 进程权限
        # @type ProcessAuthority: String
        # @param ProcessMd5: 进程md5
        # @type ProcessMd5: String
        # @param ProcessStartUser: 进程启动用户
        # @type ProcessStartUser: String
        # @param ProcessUserGroup: 进程用户组
        # @type ProcessUserGroup: String
        # @param ProcessPath: 进程路径
        # @type ProcessPath: String
        # @param ProcessTree: 进程树
        # @type ProcessTree: String
        # @param ProcessParam: 进程命令行参数
        # @type ProcessParam: String
        # @param ParentProcessStartUser: 父进程启动用户
        # @type ParentProcessStartUser: String
        # @param ParentProcessUserGroup: 父进程用户组
        # @type ParentProcessUserGroup: String
        # @param ParentProcessPath: 父进程路径
        # @type ParentProcessPath: String
        # @param ParentProcessParam: 父进程命令行参数
        # @type ParentProcessParam: String
        # @param AncestorProcessStartUser: 祖先进程启动用户
        # @type AncestorProcessStartUser: String
        # @param AncestorProcessUserGroup: 祖先进程用户组
        # @type AncestorProcessUserGroup: String
        # @param AncestorProcessPath: 祖先进程路径
        # @type AncestorProcessPath: String
        # @param AncestorProcessParam: 祖先进程命令行参数
        # @type AncestorProcessParam: String
        # @param HostID: 主机ID
        # @type HostID: String
        # @param EventStatus: 事件状态
        # EVENT_UNDEAL： 待处理
        # EVENT_DEALED：已处理
        # EVENT_IGNORE： 已忽略
        # EVENT_ADD_WHITE：已加白
        # @type EventStatus: String
        # @param OperationTime: 操作时间
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type OperationTime: String
        # @param Remark: 备注
        # @type Remark: String
        # @param NodeType: 节点类型
        # @type NodeType: String
        # @param NodeName: 节点名称
        # @type NodeName: String
        # @param NodeSubNetID: 节点子网ID
        # @type NodeSubNetID: String
        # @param NodeSubNetName: 节点子网名称
        # @type NodeSubNetName: String
        # @param NodeSubNetCIDR: 节点子网网段
        # @type NodeSubNetCIDR: String
        # @param ClusterID: 集群ID
        # @type ClusterID: String
        # @param PodIP: podip
        # @type PodIP: String
        # @param PodStatus: pod状态
        # @type PodStatus: String
        # @param NodeUniqueID: 节点唯一id
        # @type NodeUniqueID: String
        # @param NodeID: 节点ID名称
        # @type NodeID: String
        # @param ClusterName: 集群名称
        # @type ClusterName: String
        # @param Namespace: Namespace
        # @type Namespace: String
        # @param WorkloadType: 工作负载类型
        # @type WorkloadType: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :EventID, :EventType, :EventCount, :FoundTime, :LatestFoundTime, :ContainerID, :ContainerName, :ContainerNetStatus, :ContainerStatus, :ContainerNetSubStatus, :ContainerIsolateOperationSrc, :ImageID, :ImageName, :HostName, :HostIP, :PublicIP, :PodName, :Description, :Solution, :Reference, :Address, :City, :MatchRuleType, :FeatureLabel, :ProcessAuthority, :ProcessMd5, :ProcessStartUser, :ProcessUserGroup, :ProcessPath, :ProcessTree, :ProcessParam, :ParentProcessStartUser, :ParentProcessUserGroup, :ParentProcessPath, :ParentProcessParam, :AncestorProcessStartUser, :AncestorProcessUserGroup, :AncestorProcessPath, :AncestorProcessParam, :HostID, :EventStatus, :OperationTime, :Remark, :NodeType, :NodeName, :NodeSubNetID, :NodeSubNetName, :NodeSubNetCIDR, :ClusterID, :PodIP, :PodStatus, :NodeUniqueID, :NodeID, :ClusterName, :Namespace, :WorkloadType, :RequestId

        def initialize(eventid=nil, eventtype=nil, eventcount=nil, foundtime=nil, latestfoundtime=nil, containerid=nil, containername=nil, containernetstatus=nil, containerstatus=nil, containernetsubstatus=nil, containerisolateoperationsrc=nil, imageid=nil, imagename=nil, hostname=nil, hostip=nil, publicip=nil, podname=nil, description=nil, solution=nil, reference=nil, address=nil, city=nil, matchruletype=nil, featurelabel=nil, processauthority=nil, processmd5=nil, processstartuser=nil, processusergroup=nil, processpath=nil, processtree=nil, processparam=nil, parentprocessstartuser=nil, parentprocessusergroup=nil, parentprocesspath=nil, parentprocessparam=nil, ancestorprocessstartuser=nil, ancestorprocessusergroup=nil, ancestorprocesspath=nil, ancestorprocessparam=nil, hostid=nil, eventstatus=nil, operationtime=nil, remark=nil, nodetype=nil, nodename=nil, nodesubnetid=nil, nodesubnetname=nil, nodesubnetcidr=nil, clusterid=nil, podip=nil, podstatus=nil, nodeuniqueid=nil, nodeid=nil, clustername=nil, namespace=nil, workloadtype=nil, requestid=nil)
          @EventID = eventid
          @EventType = eventtype
          @EventCount = eventcount
          @FoundTime = foundtime
          @LatestFoundTime = latestfoundtime
          @ContainerID = containerid
          @ContainerName = containername
          @ContainerNetStatus = containernetstatus
          @ContainerStatus = containerstatus
          @ContainerNetSubStatus = containernetsubstatus
          @ContainerIsolateOperationSrc = containerisolateoperationsrc
          @ImageID = imageid
          @ImageName = imagename
          @HostName = hostname
          @HostIP = hostip
          @PublicIP = publicip
          @PodName = podname
          @Description = description
          @Solution = solution
          @Reference = reference
          @Address = address
          @City = city
          @MatchRuleType = matchruletype
          @FeatureLabel = featurelabel
          @ProcessAuthority = processauthority
          @ProcessMd5 = processmd5
          @ProcessStartUser = processstartuser
          @ProcessUserGroup = processusergroup
          @ProcessPath = processpath
          @ProcessTree = processtree
          @ProcessParam = processparam
          @ParentProcessStartUser = parentprocessstartuser
          @ParentProcessUserGroup = parentprocessusergroup
          @ParentProcessPath = parentprocesspath
          @ParentProcessParam = parentprocessparam
          @AncestorProcessStartUser = ancestorprocessstartuser
          @AncestorProcessUserGroup = ancestorprocessusergroup
          @AncestorProcessPath = ancestorprocesspath
          @AncestorProcessParam = ancestorprocessparam
          @HostID = hostid
          @EventStatus = eventstatus
          @OperationTime = operationtime
          @Remark = remark
          @NodeType = nodetype
          @NodeName = nodename
          @NodeSubNetID = nodesubnetid
          @NodeSubNetName = nodesubnetname
          @NodeSubNetCIDR = nodesubnetcidr
          @ClusterID = clusterid
          @PodIP = podip
          @PodStatus = podstatus
          @NodeUniqueID = nodeuniqueid
          @NodeID = nodeid
          @ClusterName = clustername
          @Namespace = namespace
          @WorkloadType = workloadtype
          @RequestId = requestid
        end

        def deserialize(params)
          @EventID = params['EventID']
          @EventType = params['EventType']
          @EventCount = params['EventCount']
          @FoundTime = params['FoundTime']
          @LatestFoundTime = params['LatestFoundTime']
          @ContainerID = params['ContainerID']
          @ContainerName = params['ContainerName']
          @ContainerNetStatus = params['ContainerNetStatus']
          @ContainerStatus = params['ContainerStatus']
          @ContainerNetSubStatus = params['ContainerNetSubStatus']
          @ContainerIsolateOperationSrc = params['ContainerIsolateOperationSrc']
          @ImageID = params['ImageID']
          @ImageName = params['ImageName']
          @HostName = params['HostName']
          @HostIP = params['HostIP']
          @PublicIP = params['PublicIP']
          @PodName = params['PodName']
          @Description = params['Description']
          @Solution = params['Solution']
          @Reference = params['Reference']
          @Address = params['Address']
          @City = params['City']
          @MatchRuleType = params['MatchRuleType']
          @FeatureLabel = params['FeatureLabel']
          @ProcessAuthority = params['ProcessAuthority']
          @ProcessMd5 = params['ProcessMd5']
          @ProcessStartUser = params['ProcessStartUser']
          @ProcessUserGroup = params['ProcessUserGroup']
          @ProcessPath = params['ProcessPath']
          @ProcessTree = params['ProcessTree']
          @ProcessParam = params['ProcessParam']
          @ParentProcessStartUser = params['ParentProcessStartUser']
          @ParentProcessUserGroup = params['ParentProcessUserGroup']
          @ParentProcessPath = params['ParentProcessPath']
          @ParentProcessParam = params['ParentProcessParam']
          @AncestorProcessStartUser = params['AncestorProcessStartUser']
          @AncestorProcessUserGroup = params['AncestorProcessUserGroup']
          @AncestorProcessPath = params['AncestorProcessPath']
          @AncestorProcessParam = params['AncestorProcessParam']
          @HostID = params['HostID']
          @EventStatus = params['EventStatus']
          @OperationTime = params['OperationTime']
          @Remark = params['Remark']
          @NodeType = params['NodeType']
          @NodeName = params['NodeName']
          @NodeSubNetID = params['NodeSubNetID']
          @NodeSubNetName = params['NodeSubNetName']
          @NodeSubNetCIDR = params['NodeSubNetCIDR']
          @ClusterID = params['ClusterID']
          @PodIP = params['PodIP']
          @PodStatus = params['PodStatus']
          @NodeUniqueID = params['NodeUniqueID']
          @NodeID = params['NodeID']
          @ClusterName = params['ClusterName']
          @Namespace = params['Namespace']
          @WorkloadType = params['WorkloadType']
          @RequestId = params['RequestId']
        end
      end

      # DescribeRiskDnsList请求参数结构体
      class DescribeRiskDnsListRequest < TencentCloud::Common::AbstractModel
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Filters: 过滤条件。
        # <li>EventStatus- String - 是否必填：否 - 事件状态，待处理：EVENT_UNDEAL，EVENT_DEALED：已处理，已忽略：EVENT_IGNORE， EVENT_ADD_WHITE：已加白</li>
        # <li>ContainerStatus- String - 是否必填：否 - 容器运行状态筛选，已创建：CREATED,正常运行：RUNNING, 暂定运行：PAUSED, 停止运行：	STOPPED，重启中：RESTARTING, 迁移中：REMOVING, 销毁：DESTROYED </li>
        # <li>ContainerNetStatus- String -是否必填: 否 -  容器网络状态筛选 未隔离：NORMAL，已隔离：ISOLATED，隔离失败：ISOLATE_FAILED，解除隔离失败：RESTORE_FAILED，解除隔离中：RESTORING，隔离中：ISOLATING</li>
        # <li>EventType - String -是否必填: 否 -  事件类型，恶意域名请求：DOMAIN，恶意IP请求：IP</li>
        # <li>TimeRange- String -是否必填: 否 -  时间范围，第一个值表示开始时间，第二个值表示结束时间 </li>
        # <li>RiskDns- string - 是否必填：否 - 恶意域名。</li>
        # <li>RiskIP- string - 是否必填：否 - 恶意IP。</li>
        # <li>ContainerName- string - 是否必填：否 - 容器名称。</li>
        # <li>ContainerID- string - 是否必填：否 - 容器ID。</li>
        # <li>ImageName- string - 是否必填：否 - 镜像名称。</li>
        # <li>ImageID- string - 是否必填：否 - 镜像ID。</li>
        # <li>HostName- string - 是否必填：否 - 主机名称。</li>
        # <li>HostIP- string - 是否必填：否 - 内网IP。</li>
        # <li>PublicIP- string - 是否必填：否 - 外网IP。</li>
        # @type Filters: Array
        # @param Order: 排序方式：asc/desc
        # @type Order: String
        # @param By: 排序字段：告警数量：EventCount，最近生成时间：LatestFoundTime
        # @type By: String

        attr_accessor :Limit, :Offset, :Filters, :Order, :By

        def initialize(limit=nil, offset=nil, filters=nil, order=nil, by=nil)
          @Limit = limit
          @Offset = offset
          @Filters = filters
          @Order = order
          @By = by
        end

        def deserialize(params)
          @Limit = params['Limit']
          @Offset = params['Offset']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              runtimefilters_tmp = RunTimeFilters.new
              runtimefilters_tmp.deserialize(i)
              @Filters << runtimefilters_tmp
            end
          end
          @Order = params['Order']
          @By = params['By']
        end
      end

      # DescribeRiskDnsList返回参数结构体
      class DescribeRiskDnsListResponse < TencentCloud::Common::AbstractModel
        # @param List: 恶意请求事件列表
        # @type List: Array
        # @param TotalCount: 总数量
        # @type TotalCount: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :List, :TotalCount, :RequestId

        def initialize(list=nil, totalcount=nil, requestid=nil)
          @List = list
          @TotalCount = totalcount
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['List'].nil?
            @List = []
            params['List'].each do |i|
              riskdnseventinfo_tmp = RiskDnsEventInfo.new
              riskdnseventinfo_tmp.deserialize(i)
              @List << riskdnseventinfo_tmp
            end
          end
          @TotalCount = params['TotalCount']
          @RequestId = params['RequestId']
        end
      end

      # DescribeRiskList请求参数结构体
      class DescribeRiskListRequest < TencentCloud::Common::AbstractModel
        # @param ClusterId: 要查询的集群ID，如果不指定，则查询用户所有的风险项
        # @type ClusterId: String
        # @param Offset: 偏移量
        # @type Offset: Integer
        # @param Limit: 每次查询的最大记录数量
        # @type Limit: Integer
        # @param Filters: Name - String
        # Name 可取值：RiskLevel风险等级, RiskTarget检查对象，风险对象,RiskType风险类别,RiskAttribute检测项所属的风险类型,Name
        # @type Filters: Array
        # @param By: 排序字段
        # @type By: String
        # @param Order: 排序方式 asc,desc
        # @type Order: String

        attr_accessor :ClusterId, :Offset, :Limit, :Filters, :By, :Order

        def initialize(clusterid=nil, offset=nil, limit=nil, filters=nil, by=nil, order=nil)
          @ClusterId = clusterid
          @Offset = offset
          @Limit = limit
          @Filters = filters
          @By = by
          @Order = order
        end

        def deserialize(params)
          @ClusterId = params['ClusterId']
          @Offset = params['Offset']
          @Limit = params['Limit']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              compliancefilters_tmp = ComplianceFilters.new
              compliancefilters_tmp.deserialize(i)
              @Filters << compliancefilters_tmp
            end
          end
          @By = params['By']
          @Order = params['Order']
        end
      end

      # DescribeRiskList返回参数结构体
      class DescribeRiskListResponse < TencentCloud::Common::AbstractModel
        # @param ClusterRiskItems: 风险详情数组
        # @type ClusterRiskItems: Array
        # @param TotalCount: 风险项的总数
        # @type TotalCount: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :ClusterRiskItems, :TotalCount, :RequestId

        def initialize(clusterriskitems=nil, totalcount=nil, requestid=nil)
          @ClusterRiskItems = clusterriskitems
          @TotalCount = totalcount
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['ClusterRiskItems'].nil?
            @ClusterRiskItems = []
            params['ClusterRiskItems'].each do |i|
              clusterriskitem_tmp = ClusterRiskItem.new
              clusterriskitem_tmp.deserialize(i)
              @ClusterRiskItems << clusterriskitem_tmp
            end
          end
          @TotalCount = params['TotalCount']
          @RequestId = params['RequestId']
        end
      end

      # DescribeRiskSyscallDetail请求参数结构体
      class DescribeRiskSyscallDetailRequest < TencentCloud::Common::AbstractModel
        # @param EventId: 事件唯一id
        # @type EventId: String

        attr_accessor :EventId

        def initialize(eventid=nil)
          @EventId = eventid
        end

        def deserialize(params)
          @EventId = params['EventId']
        end
      end

      # DescribeRiskSyscallDetail返回参数结构体
      class DescribeRiskSyscallDetailResponse < TencentCloud::Common::AbstractModel
        # @param EventBaseInfo: 事件基本信息
        # @type EventBaseInfo: :class:`Tencentcloud::Tcss.v20201101.models.RunTimeEventBaseInfo`
        # @param ProcessInfo: 进程信息
        # @type ProcessInfo: :class:`Tencentcloud::Tcss.v20201101.models.ProcessDetailInfo`
        # @param ParentProcessInfo: 父进程信息
        # @type ParentProcessInfo: :class:`Tencentcloud::Tcss.v20201101.models.ProcessDetailBaseInfo`
        # @param EventDetail: 事件描述
        # @type EventDetail: :class:`Tencentcloud::Tcss.v20201101.models.RiskSyscallEventDescription`
        # @param AncestorProcessInfo: 祖先进程信息
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type AncestorProcessInfo: :class:`Tencentcloud::Tcss.v20201101.models.ProcessBaseInfo`
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :EventBaseInfo, :ProcessInfo, :ParentProcessInfo, :EventDetail, :AncestorProcessInfo, :RequestId

        def initialize(eventbaseinfo=nil, processinfo=nil, parentprocessinfo=nil, eventdetail=nil, ancestorprocessinfo=nil, requestid=nil)
          @EventBaseInfo = eventbaseinfo
          @ProcessInfo = processinfo
          @ParentProcessInfo = parentprocessinfo
          @EventDetail = eventdetail
          @AncestorProcessInfo = ancestorprocessinfo
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['EventBaseInfo'].nil?
            @EventBaseInfo = RunTimeEventBaseInfo.new
            @EventBaseInfo.deserialize(params['EventBaseInfo'])
          end
          unless params['ProcessInfo'].nil?
            @ProcessInfo = ProcessDetailInfo.new
            @ProcessInfo.deserialize(params['ProcessInfo'])
          end
          unless params['ParentProcessInfo'].nil?
            @ParentProcessInfo = ProcessDetailBaseInfo.new
            @ParentProcessInfo.deserialize(params['ParentProcessInfo'])
          end
          unless params['EventDetail'].nil?
            @EventDetail = RiskSyscallEventDescription.new
            @EventDetail.deserialize(params['EventDetail'])
          end
          unless params['AncestorProcessInfo'].nil?
            @AncestorProcessInfo = ProcessBaseInfo.new
            @AncestorProcessInfo.deserialize(params['AncestorProcessInfo'])
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeRiskSyscallEventsExport请求参数结构体
      class DescribeRiskSyscallEventsExportRequest < TencentCloud::Common::AbstractModel
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Filters: 过滤参数,"Filters":[{"Name":"Status","Values":["2"]}]
        # @type Filters: Array
        # @param Order: 升序降序,asc desc
        # @type Order: String
        # @param By: 排序字段
        # @type By: String
        # @param ExportField: 导出字段
        # @type ExportField: Array

        attr_accessor :Limit, :Offset, :Filters, :Order, :By, :ExportField

        def initialize(limit=nil, offset=nil, filters=nil, order=nil, by=nil, exportfield=nil)
          @Limit = limit
          @Offset = offset
          @Filters = filters
          @Order = order
          @By = by
          @ExportField = exportfield
        end

        def deserialize(params)
          @Limit = params['Limit']
          @Offset = params['Offset']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              runtimefilters_tmp = RunTimeFilters.new
              runtimefilters_tmp.deserialize(i)
              @Filters << runtimefilters_tmp
            end
          end
          @Order = params['Order']
          @By = params['By']
          @ExportField = params['ExportField']
        end
      end

      # DescribeRiskSyscallEventsExport返回参数结构体
      class DescribeRiskSyscallEventsExportResponse < TencentCloud::Common::AbstractModel
        # @param DownloadUrl: Excel下载地址
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type DownloadUrl: String
        # @param JobId: 任务Id
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type JobId: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :DownloadUrl, :JobId, :RequestId

        def initialize(downloadurl=nil, jobid=nil, requestid=nil)
          @DownloadUrl = downloadurl
          @JobId = jobid
          @RequestId = requestid
        end

        def deserialize(params)
          @DownloadUrl = params['DownloadUrl']
          @JobId = params['JobId']
          @RequestId = params['RequestId']
        end
      end

      # DescribeRiskSyscallEvents请求参数结构体
      class DescribeRiskSyscallEventsRequest < TencentCloud::Common::AbstractModel
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Filters: 过滤参数,"Filters":[{"Name":"Status","Values":["2"]}]
        # @type Filters: Array
        # @param Order: 升序降序,asc desc
        # @type Order: String
        # @param By: 排序字段
        # @type By: String

        attr_accessor :Limit, :Offset, :Filters, :Order, :By

        def initialize(limit=nil, offset=nil, filters=nil, order=nil, by=nil)
          @Limit = limit
          @Offset = offset
          @Filters = filters
          @Order = order
          @By = by
        end

        def deserialize(params)
          @Limit = params['Limit']
          @Offset = params['Offset']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              runtimefilters_tmp = RunTimeFilters.new
              runtimefilters_tmp.deserialize(i)
              @Filters << runtimefilters_tmp
            end
          end
          @Order = params['Order']
          @By = params['By']
        end
      end

      # DescribeRiskSyscallEvents返回参数结构体
      class DescribeRiskSyscallEventsResponse < TencentCloud::Common::AbstractModel
        # @param TotalCount: 事件总数量
        # @type TotalCount: Integer
        # @param EventSet: 高危系统调用数组
        # @type EventSet: Array
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TotalCount, :EventSet, :RequestId

        def initialize(totalcount=nil, eventset=nil, requestid=nil)
          @TotalCount = totalcount
          @EventSet = eventset
          @RequestId = requestid
        end

        def deserialize(params)
          @TotalCount = params['TotalCount']
          unless params['EventSet'].nil?
            @EventSet = []
            params['EventSet'].each do |i|
              risksyscalleventinfo_tmp = RiskSyscallEventInfo.new
              risksyscalleventinfo_tmp.deserialize(i)
              @EventSet << risksyscalleventinfo_tmp
            end
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeRiskSyscallNames请求参数结构体
      class DescribeRiskSyscallNamesRequest < TencentCloud::Common::AbstractModel


        def initialize()
        end

        def deserialize(params)
        end
      end

      # DescribeRiskSyscallNames返回参数结构体
      class DescribeRiskSyscallNamesResponse < TencentCloud::Common::AbstractModel
        # @param TotalCount: 事件总数量
        # @type TotalCount: Integer
        # @param SyscallNames: 系统调用名称列表
        # @type SyscallNames: Array
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TotalCount, :SyscallNames, :RequestId

        def initialize(totalcount=nil, syscallnames=nil, requestid=nil)
          @TotalCount = totalcount
          @SyscallNames = syscallnames
          @RequestId = requestid
        end

        def deserialize(params)
          @TotalCount = params['TotalCount']
          @SyscallNames = params['SyscallNames']
          @RequestId = params['RequestId']
        end
      end

      # DescribeRiskSyscallWhiteListDetail请求参数结构体
      class DescribeRiskSyscallWhiteListDetailRequest < TencentCloud::Common::AbstractModel
        # @param WhiteListId: 白名单id
        # @type WhiteListId: String

        attr_accessor :WhiteListId

        def initialize(whitelistid=nil)
          @WhiteListId = whitelistid
        end

        def deserialize(params)
          @WhiteListId = params['WhiteListId']
        end
      end

      # DescribeRiskSyscallWhiteListDetail返回参数结构体
      class DescribeRiskSyscallWhiteListDetailResponse < TencentCloud::Common::AbstractModel
        # @param WhiteListDetailInfo: 白名单基本信息
        # @type WhiteListDetailInfo: :class:`Tencentcloud::Tcss.v20201101.models.RiskSyscallWhiteListInfo`
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :WhiteListDetailInfo, :RequestId

        def initialize(whitelistdetailinfo=nil, requestid=nil)
          @WhiteListDetailInfo = whitelistdetailinfo
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['WhiteListDetailInfo'].nil?
            @WhiteListDetailInfo = RiskSyscallWhiteListInfo.new
            @WhiteListDetailInfo.deserialize(params['WhiteListDetailInfo'])
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeRiskSyscallWhiteLists请求参数结构体
      class DescribeRiskSyscallWhiteListsRequest < TencentCloud::Common::AbstractModel
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Filters: 过滤参数,"Filters":[{"Name":"Status","Values":["2"]}]
        # @type Filters: Array
        # @param Order: 升序降序,asc desc
        # @type Order: String
        # @param By: 排序字段
        # @type By: String

        attr_accessor :Limit, :Offset, :Filters, :Order, :By

        def initialize(limit=nil, offset=nil, filters=nil, order=nil, by=nil)
          @Limit = limit
          @Offset = offset
          @Filters = filters
          @Order = order
          @By = by
        end

        def deserialize(params)
          @Limit = params['Limit']
          @Offset = params['Offset']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              runtimefilters_tmp = RunTimeFilters.new
              runtimefilters_tmp.deserialize(i)
              @Filters << runtimefilters_tmp
            end
          end
          @Order = params['Order']
          @By = params['By']
        end
      end

      # DescribeRiskSyscallWhiteLists返回参数结构体
      class DescribeRiskSyscallWhiteListsResponse < TencentCloud::Common::AbstractModel
        # @param TotalCount: 事件总数量
        # @type TotalCount: Integer
        # @param WhiteListSet: 白名单信息列表
        # @type WhiteListSet: Array
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TotalCount, :WhiteListSet, :RequestId

        def initialize(totalcount=nil, whitelistset=nil, requestid=nil)
          @TotalCount = totalcount
          @WhiteListSet = whitelistset
          @RequestId = requestid
        end

        def deserialize(params)
          @TotalCount = params['TotalCount']
          unless params['WhiteListSet'].nil?
            @WhiteListSet = []
            params['WhiteListSet'].each do |i|
              risksyscallwhitelistbaseinfo_tmp = RiskSyscallWhiteListBaseInfo.new
              risksyscallwhitelistbaseinfo_tmp.deserialize(i)
              @WhiteListSet << risksyscallwhitelistbaseinfo_tmp
            end
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeScanIgnoreVulList请求参数结构体
      class DescribeScanIgnoreVulListRequest < TencentCloud::Common::AbstractModel
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Filters: 过滤条件。
        # <li>CVEID- string - 是否必填：否 - CVE编号</li>
        # <li>VulName- string - 是否必填：否 - 漏洞名称</li>
        # @type Filters: Array
        # @param Order: 排序方式:DESC,ACS
        # @type Order: String
        # @param By: 排序字段 UpdateTime
        # @type By: String

        attr_accessor :Limit, :Offset, :Filters, :Order, :By

        def initialize(limit=nil, offset=nil, filters=nil, order=nil, by=nil)
          @Limit = limit
          @Offset = offset
          @Filters = filters
          @Order = order
          @By = by
        end

        def deserialize(params)
          @Limit = params['Limit']
          @Offset = params['Offset']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              runtimefilters_tmp = RunTimeFilters.new
              runtimefilters_tmp.deserialize(i)
              @Filters << runtimefilters_tmp
            end
          end
          @Order = params['Order']
          @By = params['By']
        end
      end

      # DescribeScanIgnoreVulList返回参数结构体
      class DescribeScanIgnoreVulListResponse < TencentCloud::Common::AbstractModel
        # @param TotalCount: 总是
        # @type TotalCount: Integer
        # @param List: 漏洞列表
        # @type List: Array
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TotalCount, :List, :RequestId

        def initialize(totalcount=nil, list=nil, requestid=nil)
          @TotalCount = totalcount
          @List = list
          @RequestId = requestid
        end

        def deserialize(params)
          @TotalCount = params['TotalCount']
          unless params['List'].nil?
            @List = []
            params['List'].each do |i|
              scanignorevul_tmp = ScanIgnoreVul.new
              scanignorevul_tmp.deserialize(i)
              @List << scanignorevul_tmp
            end
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeSearchExportList请求参数结构体
      class DescribeSearchExportListRequest < TencentCloud::Common::AbstractModel
        # @param Query: ES查询条件JSON
        # @type Query: String

        attr_accessor :Query

        def initialize(query=nil)
          @Query = query
        end

        def deserialize(params)
          @Query = params['Query']
        end
      end

      # DescribeSearchExportList返回参数结构体
      class DescribeSearchExportListResponse < TencentCloud::Common::AbstractModel
        # @param JobId: 导出任务ID，前端拿着任务ID查询任务进度
        # @type JobId: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :JobId, :RequestId

        def initialize(jobid=nil, requestid=nil)
          @JobId = jobid
          @RequestId = requestid
        end

        def deserialize(params)
          @JobId = params['JobId']
          @RequestId = params['RequestId']
        end
      end

      # DescribeSearchLogs请求参数结构体
      class DescribeSearchLogsRequest < TencentCloud::Common::AbstractModel


        def initialize()
        end

        def deserialize(params)
        end
      end

      # DescribeSearchLogs返回参数结构体
      class DescribeSearchLogsResponse < TencentCloud::Common::AbstractModel
        # @param Data: 历史搜索记录 保留最新的10条
        # @type Data: Array
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :Data, :RequestId

        def initialize(data=nil, requestid=nil)
          @Data = data
          @RequestId = requestid
        end

        def deserialize(params)
          @Data = params['Data']
          @RequestId = params['RequestId']
        end
      end

      # DescribeSearchTemplates请求参数结构体
      class DescribeSearchTemplatesRequest < TencentCloud::Common::AbstractModel
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Limit: 返回数量，默认为10，最大值为100。
        # @type Limit: Integer

        attr_accessor :Offset, :Limit

        def initialize(offset=nil, limit=nil)
          @Offset = offset
          @Limit = limit
        end

        def deserialize(params)
          @Offset = params['Offset']
          @Limit = params['Limit']
        end
      end

      # DescribeSearchTemplates返回参数结构体
      class DescribeSearchTemplatesResponse < TencentCloud::Common::AbstractModel
        # @param TotalCount: 总数
        # @type TotalCount: Integer
        # @param List: 模板列表
        # @type List: Array
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TotalCount, :List, :RequestId

        def initialize(totalcount=nil, list=nil, requestid=nil)
          @TotalCount = totalcount
          @List = list
          @RequestId = requestid
        end

        def deserialize(params)
          @TotalCount = params['TotalCount']
          unless params['List'].nil?
            @List = []
            params['List'].each do |i|
              searchtemplate_tmp = SearchTemplate.new
              searchtemplate_tmp.deserialize(i)
              @List << searchtemplate_tmp
            end
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeSecEventsTendency请求参数结构体
      class DescribeSecEventsTendencyRequest < TencentCloud::Common::AbstractModel
        # @param StartTime: 开始时间
        # @type StartTime: String
        # @param EndTime: 结束时间
        # @type EndTime: String

        attr_accessor :StartTime, :EndTime

        def initialize(starttime=nil, endtime=nil)
          @StartTime = starttime
          @EndTime = endtime
        end

        def deserialize(params)
          @StartTime = params['StartTime']
          @EndTime = params['EndTime']
        end
      end

      # DescribeSecEventsTendency返回参数结构体
      class DescribeSecEventsTendencyResponse < TencentCloud::Common::AbstractModel
        # @param EventTendencySet: 运行时安全事件趋势信息列表
        # @type EventTendencySet: Array
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :EventTendencySet, :RequestId

        def initialize(eventtendencyset=nil, requestid=nil)
          @EventTendencySet = eventtendencyset
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['EventTendencySet'].nil?
            @EventTendencySet = []
            params['EventTendencySet'].each do |i|
              sectendencyeventinfo_tmp = SecTendencyEventInfo.new
              sectendencyeventinfo_tmp.deserialize(i)
              @EventTendencySet << sectendencyeventinfo_tmp
            end
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeSecLogAlertMsg请求参数结构体
      class DescribeSecLogAlertMsgRequest < TencentCloud::Common::AbstractModel
        # @param Type: 告警类型
        # 日志储量告警: log_reserve_full
        # 日志存储时间告警: log_save_day_limit
        # kafka实例/公网域名不可用: kafka_instance_domain_unavailable
        # kafka 用户名密码错误: kafka_user_passwd_wrong
        # kafka后台报错字段: kafka_field_wrong
        # @type Type: Array

        attr_accessor :Type

        def initialize(type=nil)
          @Type = type
        end

        def deserialize(params)
          @Type = params['Type']
        end
      end

      # DescribeSecLogAlertMsg返回参数结构体
      class DescribeSecLogAlertMsgResponse < TencentCloud::Common::AbstractModel
        # @param List: 告警消息队列
        # @type List: Array
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :List, :RequestId

        def initialize(list=nil, requestid=nil)
          @List = list
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['List'].nil?
            @List = []
            params['List'].each do |i|
              seclogalertmsginfo_tmp = SecLogAlertMsgInfo.new
              seclogalertmsginfo_tmp.deserialize(i)
              @List << seclogalertmsginfo_tmp
            end
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeSecLogCleanSettingInfo请求参数结构体
      class DescribeSecLogCleanSettingInfoRequest < TencentCloud::Common::AbstractModel


        def initialize()
        end

        def deserialize(params)
        end
      end

      # DescribeSecLogCleanSettingInfo返回参数结构体
      class DescribeSecLogCleanSettingInfoResponse < TencentCloud::Common::AbstractModel
        # @param ReservesLimit: 触发清理的储量底线
        # @type ReservesLimit: Integer
        # @param ReservesDeadline: 清理停止时的储量截至线
        # @type ReservesDeadline: Integer
        # @param DayLimit: 触发清理的存储天数
        # @type DayLimit: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :ReservesLimit, :ReservesDeadline, :DayLimit, :RequestId

        def initialize(reserveslimit=nil, reservesdeadline=nil, daylimit=nil, requestid=nil)
          @ReservesLimit = reserveslimit
          @ReservesDeadline = reservesdeadline
          @DayLimit = daylimit
          @RequestId = requestid
        end

        def deserialize(params)
          @ReservesLimit = params['ReservesLimit']
          @ReservesDeadline = params['ReservesDeadline']
          @DayLimit = params['DayLimit']
          @RequestId = params['RequestId']
        end
      end

      # DescribeSecLogDeliveryClsOptions请求参数结构体
      class DescribeSecLogDeliveryClsOptionsRequest < TencentCloud::Common::AbstractModel
        # @param ClsRegion: 地域
        # @type ClsRegion: String

        attr_accessor :ClsRegion

        def initialize(clsregion=nil)
          @ClsRegion = clsregion
        end

        def deserialize(params)
          @ClsRegion = params['ClsRegion']
        end
      end

      # DescribeSecLogDeliveryClsOptions返回参数结构体
      class DescribeSecLogDeliveryClsOptionsResponse < TencentCloud::Common::AbstractModel
        # @param LogSetList: cls可选日志集合列表(仅当入参ClsRegion不为空时返回)
        # @type LogSetList: Array
        # @param RegionList: 可选地域列表(仅当入参ClsRegion为空时返回)
        # @type RegionList: Array
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :LogSetList, :RegionList, :RequestId

        def initialize(logsetlist=nil, regionlist=nil, requestid=nil)
          @LogSetList = logsetlist
          @RegionList = regionlist
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['LogSetList'].nil?
            @LogSetList = []
            params['LogSetList'].each do |i|
              clslogsetinfo_tmp = ClsLogsetInfo.new
              clslogsetinfo_tmp.deserialize(i)
              @LogSetList << clslogsetinfo_tmp
            end
          end
          unless params['RegionList'].nil?
            @RegionList = []
            params['RegionList'].each do |i|
              regioninfo_tmp = RegionInfo.new
              regioninfo_tmp.deserialize(i)
              @RegionList << regioninfo_tmp
            end
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeSecLogDeliveryClsSetting请求参数结构体
      class DescribeSecLogDeliveryClsSettingRequest < TencentCloud::Common::AbstractModel


        def initialize()
        end

        def deserialize(params)
        end
      end

      # DescribeSecLogDeliveryClsSetting返回参数结构体
      class DescribeSecLogDeliveryClsSettingResponse < TencentCloud::Common::AbstractModel
        # @param LogTypeList: 日志类型列表
        # @type LogTypeList: Array
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :LogTypeList, :RequestId

        def initialize(logtypelist=nil, requestid=nil)
          @LogTypeList = logtypelist
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['LogTypeList'].nil?
            @LogTypeList = []
            params['LogTypeList'].each do |i|
              seclogdeliveryclssettinginfo_tmp = SecLogDeliveryClsSettingInfo.new
              seclogdeliveryclssettinginfo_tmp.deserialize(i)
              @LogTypeList << seclogdeliveryclssettinginfo_tmp
            end
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeSecLogDeliveryKafkaOptions请求参数结构体
      class DescribeSecLogDeliveryKafkaOptionsRequest < TencentCloud::Common::AbstractModel
        # @param RegionID: 地域，若为空则返回所有可选地域
        # @type RegionID: String

        attr_accessor :RegionID

        def initialize(regionid=nil)
          @RegionID = regionid
        end

        def deserialize(params)
          @RegionID = params['RegionID']
        end
      end

      # DescribeSecLogDeliveryKafkaOptions返回参数结构体
      class DescribeSecLogDeliveryKafkaOptionsResponse < TencentCloud::Common::AbstractModel
        # @param InstanceList: 实例列表
        # @type InstanceList: Array
        # @param RegionList: 地域列表
        # @type RegionList: Array
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :InstanceList, :RegionList, :RequestId

        def initialize(instancelist=nil, regionlist=nil, requestid=nil)
          @InstanceList = instancelist
          @RegionList = regionlist
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['InstanceList'].nil?
            @InstanceList = []
            params['InstanceList'].each do |i|
              ckafkainstanceinfo_tmp = CKafkaInstanceInfo.new
              ckafkainstanceinfo_tmp.deserialize(i)
              @InstanceList << ckafkainstanceinfo_tmp
            end
          end
          unless params['RegionList'].nil?
            @RegionList = []
            params['RegionList'].each do |i|
              regioninfo_tmp = RegionInfo.new
              regioninfo_tmp.deserialize(i)
              @RegionList << regioninfo_tmp
            end
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeSecLogDeliveryKafkaSetting请求参数结构体
      class DescribeSecLogDeliveryKafkaSettingRequest < TencentCloud::Common::AbstractModel


        def initialize()
        end

        def deserialize(params)
        end
      end

      # DescribeSecLogDeliveryKafkaSetting返回参数结构体
      class DescribeSecLogDeliveryKafkaSettingResponse < TencentCloud::Common::AbstractModel
        # @param InstanceID: 消息队列实例ID
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type InstanceID: String
        # @param InstanceName: 消息队列实例名称
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type InstanceName: String
        # @param Domain: 域名
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Domain: String
        # @param LogTypeList: 日志类型队列
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type LogTypeList: Array
        # @param User: 用户名
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type User: String
        # @param RegionID: 地域ID
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type RegionID: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :InstanceID, :InstanceName, :Domain, :LogTypeList, :User, :RegionID, :RequestId

        def initialize(instanceid=nil, instancename=nil, domain=nil, logtypelist=nil, user=nil, regionid=nil, requestid=nil)
          @InstanceID = instanceid
          @InstanceName = instancename
          @Domain = domain
          @LogTypeList = logtypelist
          @User = user
          @RegionID = regionid
          @RequestId = requestid
        end

        def deserialize(params)
          @InstanceID = params['InstanceID']
          @InstanceName = params['InstanceName']
          @Domain = params['Domain']
          unless params['LogTypeList'].nil?
            @LogTypeList = []
            params['LogTypeList'].each do |i|
              seclogdeliverykafkasettinginfo_tmp = SecLogDeliveryKafkaSettingInfo.new
              seclogdeliverykafkasettinginfo_tmp.deserialize(i)
              @LogTypeList << seclogdeliverykafkasettinginfo_tmp
            end
          end
          @User = params['User']
          @RegionID = params['RegionID']
          @RequestId = params['RequestId']
        end
      end

      # DescribeSecLogJoinObjectList请求参数结构体
      class DescribeSecLogJoinObjectListRequest < TencentCloud::Common::AbstractModel
        # @param LogType: 日志类型
        # bash: "container_bash",
        # 启动: "container_launch",
        # "k8s": "k8s_api"
        # @type LogType: String
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Filters: 过滤条件。
        # <li>Status- String - 是否必填：否 - 主机状态 </li>
        # <li>HostIP- String - 是否必填：否 - 主机内网IP </li>
        # <li>PublicIP- String - 是否必填：否 - 主机外网IP </li>
        # <li>HostName- String - 是否必填：否 - 主机名称 </li>
        # @type Filters: Array
        # @param By: 排序字段
        # @type By: String
        # @param Order: 排序方式
        # @type Order: String

        attr_accessor :LogType, :Limit, :Offset, :Filters, :By, :Order

        def initialize(logtype=nil, limit=nil, offset=nil, filters=nil, by=nil, order=nil)
          @LogType = logtype
          @Limit = limit
          @Offset = offset
          @Filters = filters
          @By = by
          @Order = order
        end

        def deserialize(params)
          @LogType = params['LogType']
          @Limit = params['Limit']
          @Offset = params['Offset']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              runtimefilters_tmp = RunTimeFilters.new
              runtimefilters_tmp.deserialize(i)
              @Filters << runtimefilters_tmp
            end
          end
          @By = params['By']
          @Order = params['Order']
        end
      end

      # DescribeSecLogJoinObjectList返回参数结构体
      class DescribeSecLogJoinObjectListResponse < TencentCloud::Common::AbstractModel
        # @param TotalCount: 总数
        # @type TotalCount: Integer
        # @param List: 接入对象列表
        # @type List: Array
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TotalCount, :List, :RequestId

        def initialize(totalcount=nil, list=nil, requestid=nil)
          @TotalCount = totalcount
          @List = list
          @RequestId = requestid
        end

        def deserialize(params)
          @TotalCount = params['TotalCount']
          unless params['List'].nil?
            @List = []
            params['List'].each do |i|
              seclogjoinobjectinfo_tmp = SecLogJoinObjectInfo.new
              seclogjoinobjectinfo_tmp.deserialize(i)
              @List << seclogjoinobjectinfo_tmp
            end
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeSecLogJoinTypeList请求参数结构体
      class DescribeSecLogJoinTypeListRequest < TencentCloud::Common::AbstractModel


        def initialize()
        end

        def deserialize(params)
        end
      end

      # DescribeSecLogJoinTypeList返回参数结构体
      class DescribeSecLogJoinTypeListResponse < TencentCloud::Common::AbstractModel
        # @param List: 接入日志列表
        # @type List: Array
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :List, :RequestId

        def initialize(list=nil, requestid=nil)
          @List = list
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['List'].nil?
            @List = []
            params['List'].each do |i|
              seclogjoininfo_tmp = SecLogJoinInfo.new
              seclogjoininfo_tmp.deserialize(i)
              @List << seclogjoininfo_tmp
            end
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeSecLogKafkaUIN请求参数结构体
      class DescribeSecLogKafkaUINRequest < TencentCloud::Common::AbstractModel


        def initialize()
        end

        def deserialize(params)
        end
      end

      # DescribeSecLogKafkaUIN返回参数结构体
      class DescribeSecLogKafkaUINResponse < TencentCloud::Common::AbstractModel
        # @param DstUIN: 目标UIN
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type DstUIN: String
        # @param Status: 授权状态
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Status: Boolean
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :DstUIN, :Status, :RequestId

        def initialize(dstuin=nil, status=nil, requestid=nil)
          @DstUIN = dstuin
          @Status = status
          @RequestId = requestid
        end

        def deserialize(params)
          @DstUIN = params['DstUIN']
          @Status = params['Status']
          @RequestId = params['RequestId']
        end
      end

      # DescribeSecLogVasInfo请求参数结构体
      class DescribeSecLogVasInfoRequest < TencentCloud::Common::AbstractModel


        def initialize()
        end

        def deserialize(params)
        end
      end

      # DescribeSecLogVasInfo返回参数结构体
      class DescribeSecLogVasInfoResponse < TencentCloud::Common::AbstractModel
        # @param BuyStatus: 购买状态
        # 待购: Pending
        # 已购: Normal
        # 隔离: Isolate
        # @type BuyStatus: String
        # @param LogSaveMonth: 存储时长(月)
        # @type LogSaveMonth: Integer
        # @param StartTime: 起始时间
        # @type StartTime: String
        # @param EndTime: 截止时间
        # @type EndTime: String
        # @param LogCapacity: 存储容量(GB)
        # @type LogCapacity: Integer
        # @param ResourceID: 资源ID
        # @type ResourceID: String
        # @param IsPurchased: 是否曾经购买过(false:未曾 true:曾经购买过)
        # @type IsPurchased: Boolean
        # @param TrialCapacity: 试用存储容量(GB)
        # @type TrialCapacity: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :BuyStatus, :LogSaveMonth, :StartTime, :EndTime, :LogCapacity, :ResourceID, :IsPurchased, :TrialCapacity, :RequestId

        def initialize(buystatus=nil, logsavemonth=nil, starttime=nil, endtime=nil, logcapacity=nil, resourceid=nil, ispurchased=nil, trialcapacity=nil, requestid=nil)
          @BuyStatus = buystatus
          @LogSaveMonth = logsavemonth
          @StartTime = starttime
          @EndTime = endtime
          @LogCapacity = logcapacity
          @ResourceID = resourceid
          @IsPurchased = ispurchased
          @TrialCapacity = trialcapacity
          @RequestId = requestid
        end

        def deserialize(params)
          @BuyStatus = params['BuyStatus']
          @LogSaveMonth = params['LogSaveMonth']
          @StartTime = params['StartTime']
          @EndTime = params['EndTime']
          @LogCapacity = params['LogCapacity']
          @ResourceID = params['ResourceID']
          @IsPurchased = params['IsPurchased']
          @TrialCapacity = params['TrialCapacity']
          @RequestId = params['RequestId']
        end
      end

      # DescribeSuperNodePodList请求参数结构体
      class DescribeSuperNodePodListRequest < TencentCloud::Common::AbstractModel
        # @param Filters: 过滤条件。
        # <li>NodeUniqueID- String - 是否必填：否 - 节点唯一id </li>
        # <li>PodName- String - 是否必填：否 - Pod示例名称 </li>
        # <li>PodIP- String - 是否必填：否 - POD IP </li>
        # <li>Namespace- String - 是否必填：否 - 命名空间 </li>
        # <li>Deployment- String - 是否必填：否 - 所属工作负载 </li>
        # <li>Status- String - 是否必填：否 - 状态 </li>
        # @type Filters: Array
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param By: 排序字段
        # @type By: String
        # @param Order: 排序方式 asc,desc
        # @type Order: String

        attr_accessor :Filters, :Limit, :Offset, :By, :Order

        def initialize(filters=nil, limit=nil, offset=nil, by=nil, order=nil)
          @Filters = filters
          @Limit = limit
          @Offset = offset
          @By = by
          @Order = order
        end

        def deserialize(params)
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              runtimefilters_tmp = RunTimeFilters.new
              runtimefilters_tmp.deserialize(i)
              @Filters << runtimefilters_tmp
            end
          end
          @Limit = params['Limit']
          @Offset = params['Offset']
          @By = params['By']
          @Order = params['Order']
        end
      end

      # DescribeSuperNodePodList返回参数结构体
      class DescribeSuperNodePodListResponse < TencentCloud::Common::AbstractModel
        # @param List: 列表
        # @type List: Array
        # @param TotalCount: 总数
        # @type TotalCount: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :List, :TotalCount, :RequestId

        def initialize(list=nil, totalcount=nil, requestid=nil)
          @List = list
          @TotalCount = totalcount
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['List'].nil?
            @List = []
            params['List'].each do |i|
              supernodepodlistitem_tmp = SuperNodePodListItem.new
              supernodepodlistitem_tmp.deserialize(i)
              @List << supernodepodlistitem_tmp
            end
          end
          @TotalCount = params['TotalCount']
          @RequestId = params['RequestId']
        end
      end

      # DescribeSupportDefenceVul请求参数结构体
      class DescribeSupportDefenceVulRequest < TencentCloud::Common::AbstractModel
        # @param Filters: 过滤条件。
        # <li>Level- String - 是否必填：否 - 威胁等级，CRITICAL:严重 HIGH:高/MIDDLE:中/LOW:低</li>
        # <li>CVEID- string - 是否必填：否 - CVE编号</li>
        # <li>Name- string -是否必填: 否 - 漏洞名称</li>
        # @type Filters: Array
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Order: 排序方式：asc/desc
        # @type Order: String
        # @param By: 排序字段：披露时间：SubmitTime
        # @type By: String

        attr_accessor :Filters, :Limit, :Offset, :Order, :By

        def initialize(filters=nil, limit=nil, offset=nil, order=nil, by=nil)
          @Filters = filters
          @Limit = limit
          @Offset = offset
          @Order = order
          @By = by
        end

        def deserialize(params)
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              runtimefilters_tmp = RunTimeFilters.new
              runtimefilters_tmp.deserialize(i)
              @Filters << runtimefilters_tmp
            end
          end
          @Limit = params['Limit']
          @Offset = params['Offset']
          @Order = params['Order']
          @By = params['By']
        end
      end

      # DescribeSupportDefenceVul返回参数结构体
      class DescribeSupportDefenceVulResponse < TencentCloud::Common::AbstractModel
        # @param List: 支持防御的漏洞列表
        # @type List: Array
        # @param TotalCount: 总数量
        # @type TotalCount: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :List, :TotalCount, :RequestId

        def initialize(list=nil, totalcount=nil, requestid=nil)
          @List = list
          @TotalCount = totalcount
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['List'].nil?
            @List = []
            params['List'].each do |i|
              supportdefencevul_tmp = SupportDefenceVul.new
              supportdefencevul_tmp.deserialize(i)
              @List << supportdefencevul_tmp
            end
          end
          @TotalCount = params['TotalCount']
          @RequestId = params['RequestId']
        end
      end

      # DescribeSystemVulList请求参数结构体
      class DescribeSystemVulListRequest < TencentCloud::Common::AbstractModel
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Filters: 过滤条件。
        # <li>OnlyAffectedContainer- string - 是否必填：否 - 仅展示影响容器的漏洞true,false</li>
        # <li>OnlyAffectedNewestImage-string - 是否必填：否 - 仅展示影响最新版本镜像的漏洞true,false</li>
        # <li>Level- String - 是否必填：否 - 威胁等级，CRITICAL:严重 HIGH:高/MIDDLE:中/LOW:低</li>
        # <li>Tags- string - 是否必填：否 - 漏洞标签，POC，EXP。</li>
        # <li>CanBeFixed- string - 是否必填：否 - 是否可修复true,false。</li>
        # <li>CVEID- string - 是否必填：否 - CVE编号</li>
        # <li>ImageID- string - 是否必填：否 - 镜像ID</li>
        # <li>ImageName- String -是否必填: 否 - 镜像名称</li>
        # <li>ContainerID- string -是否必填: 否 - 容器ID</li>
        # <li>ContainerName- string -是否必填: 否 - 容器名称</li>
        # <li>ComponentName- string -是否必填: 否 - 组件名称</li>
        # <li>ComponentVersion- string -是否必填: 否 - 组件版本</li>
        # <li>Name- string -是否必填: 否 - 漏洞名称</li>
        # <li>FocusOnType - string - 是否必填：否 -关注紧急度类型 。ALL :全部，SERIOUS_LEVEL： 严重和高危 ，IS_SUGGEST： 重点关注，POC_EXP 有Poc或Exp ，NETWORK_EXP: 远程Exp</li>
        # @type Filters: Array
        # @param Order: 排序方式
        # @type Order: String
        # @param By: 排序字段
        # @type By: String

        attr_accessor :Limit, :Offset, :Filters, :Order, :By

        def initialize(limit=nil, offset=nil, filters=nil, order=nil, by=nil)
          @Limit = limit
          @Offset = offset
          @Filters = filters
          @Order = order
          @By = by
        end

        def deserialize(params)
          @Limit = params['Limit']
          @Offset = params['Offset']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              runtimefilters_tmp = RunTimeFilters.new
              runtimefilters_tmp.deserialize(i)
              @Filters << runtimefilters_tmp
            end
          end
          @Order = params['Order']
          @By = params['By']
        end
      end

      # DescribeSystemVulList返回参数结构体
      class DescribeSystemVulListResponse < TencentCloud::Common::AbstractModel
        # @param TotalCount: 漏洞总数
        # @type TotalCount: Integer
        # @param List: 漏洞列表
        # @type List: Array
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TotalCount, :List, :RequestId

        def initialize(totalcount=nil, list=nil, requestid=nil)
          @TotalCount = totalcount
          @List = list
          @RequestId = requestid
        end

        def deserialize(params)
          @TotalCount = params['TotalCount']
          unless params['List'].nil?
            @List = []
            params['List'].each do |i|
              vulinfo_tmp = VulInfo.new
              vulinfo_tmp.deserialize(i)
              @List << vulinfo_tmp
            end
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeTaskResultSummary请求参数结构体
      class DescribeTaskResultSummaryRequest < TencentCloud::Common::AbstractModel


        def initialize()
        end

        def deserialize(params)
        end
      end

      # DescribeTaskResultSummary返回参数结构体
      class DescribeTaskResultSummaryResponse < TencentCloud::Common::AbstractModel
        # @param SeriousRiskNodeCount: 严重风险影响的节点数量,返回7天数据
        # @type SeriousRiskNodeCount: Array
        # @param HighRiskNodeCount: 高风险影响的节点的数量,返回7天数据
        # @type HighRiskNodeCount: Array
        # @param MiddleRiskNodeCount: 中风险检查项的节点数量,返回7天数据
        # @type MiddleRiskNodeCount: Array
        # @param HintRiskNodeCount: 提示风险检查项的节点数量,返回7天数据
        # @type HintRiskNodeCount: Array
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :SeriousRiskNodeCount, :HighRiskNodeCount, :MiddleRiskNodeCount, :HintRiskNodeCount, :RequestId

        def initialize(seriousrisknodecount=nil, highrisknodecount=nil, middlerisknodecount=nil, hintrisknodecount=nil, requestid=nil)
          @SeriousRiskNodeCount = seriousrisknodecount
          @HighRiskNodeCount = highrisknodecount
          @MiddleRiskNodeCount = middlerisknodecount
          @HintRiskNodeCount = hintrisknodecount
          @RequestId = requestid
        end

        def deserialize(params)
          @SeriousRiskNodeCount = params['SeriousRiskNodeCount']
          @HighRiskNodeCount = params['HighRiskNodeCount']
          @MiddleRiskNodeCount = params['MiddleRiskNodeCount']
          @HintRiskNodeCount = params['HintRiskNodeCount']
          @RequestId = params['RequestId']
        end
      end

      # DescribeTcssSummary请求参数结构体
      class DescribeTcssSummaryRequest < TencentCloud::Common::AbstractModel


        def initialize()
        end

        def deserialize(params)
        end
      end

      # DescribeTcssSummary返回参数结构体
      class DescribeTcssSummaryResponse < TencentCloud::Common::AbstractModel
        # @param ImageCnt: 镜像总数
        # @type ImageCnt: Integer
        # @param ScannedImageCnt: 已扫描镜像数
        # @type ScannedImageCnt: Integer
        # @param UnScannedImageCnt: 待扫描镜像个数
        # @type UnScannedImageCnt: Integer
        # @param LocalImageCnt: 本地镜像个数
        # @type LocalImageCnt: Integer
        # @param RepositoryImageCnt: 仓库镜像个数
        # @type RepositoryImageCnt: Integer
        # @param RiskLocalImageCnt: 风险本地镜像个数
        # @type RiskLocalImageCnt: Integer
        # @param RiskRepositoryImageCnt: 风险仓库镜像个数
        # @type RiskRepositoryImageCnt: Integer
        # @param ContainerCnt: 容器个数
        # @type ContainerCnt: Integer
        # @param RiskContainerCnt: 风险容器个数
        # @type RiskContainerCnt: Integer
        # @param ClusterCnt: 集群个数
        # @type ClusterCnt: Integer
        # @param RiskClusterCnt: 风险集群个数
        # @type RiskClusterCnt: Integer
        # @param UnScannedVulCnt: 待扫描漏洞个数
        # @type UnScannedVulCnt: Integer
        # @param RiskVulCnt: 风险漏洞个数
        # @type RiskVulCnt: Integer
        # @param UnScannedBaseLineCnt: 安全基线待扫描项个数
        # @type UnScannedBaseLineCnt: Integer
        # @param RiskBaseLineCnt: 安全基线风险个数
        # @type RiskBaseLineCnt: Integer
        # @param RuntimeUnhandleEventCnt: 运行时(高危)待处理事件个数
        # @type RuntimeUnhandleEventCnt: Integer
        # @param UnScannedClusterCnt: 待扫描集群个数
        # @type UnScannedClusterCnt: Integer
        # @param ScanImageStatus: 是否已扫描镜像
        # @type ScanImageStatus: Boolean
        # @param ScanClusterStatus: 是否已扫描集群
        # @type ScanClusterStatus: Boolean
        # @param ScanBaseLineStatus: 是否已扫描基线
        # @type ScanBaseLineStatus: Boolean
        # @param ScanVulStatus: 是否已扫描漏洞
        # @type ScanVulStatus: Boolean
        # @param VulRiskImageCnt: 漏洞影响镜像数
        # @type VulRiskImageCnt: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :ImageCnt, :ScannedImageCnt, :UnScannedImageCnt, :LocalImageCnt, :RepositoryImageCnt, :RiskLocalImageCnt, :RiskRepositoryImageCnt, :ContainerCnt, :RiskContainerCnt, :ClusterCnt, :RiskClusterCnt, :UnScannedVulCnt, :RiskVulCnt, :UnScannedBaseLineCnt, :RiskBaseLineCnt, :RuntimeUnhandleEventCnt, :UnScannedClusterCnt, :ScanImageStatus, :ScanClusterStatus, :ScanBaseLineStatus, :ScanVulStatus, :VulRiskImageCnt, :RequestId

        def initialize(imagecnt=nil, scannedimagecnt=nil, unscannedimagecnt=nil, localimagecnt=nil, repositoryimagecnt=nil, risklocalimagecnt=nil, riskrepositoryimagecnt=nil, containercnt=nil, riskcontainercnt=nil, clustercnt=nil, riskclustercnt=nil, unscannedvulcnt=nil, riskvulcnt=nil, unscannedbaselinecnt=nil, riskbaselinecnt=nil, runtimeunhandleeventcnt=nil, unscannedclustercnt=nil, scanimagestatus=nil, scanclusterstatus=nil, scanbaselinestatus=nil, scanvulstatus=nil, vulriskimagecnt=nil, requestid=nil)
          @ImageCnt = imagecnt
          @ScannedImageCnt = scannedimagecnt
          @UnScannedImageCnt = unscannedimagecnt
          @LocalImageCnt = localimagecnt
          @RepositoryImageCnt = repositoryimagecnt
          @RiskLocalImageCnt = risklocalimagecnt
          @RiskRepositoryImageCnt = riskrepositoryimagecnt
          @ContainerCnt = containercnt
          @RiskContainerCnt = riskcontainercnt
          @ClusterCnt = clustercnt
          @RiskClusterCnt = riskclustercnt
          @UnScannedVulCnt = unscannedvulcnt
          @RiskVulCnt = riskvulcnt
          @UnScannedBaseLineCnt = unscannedbaselinecnt
          @RiskBaseLineCnt = riskbaselinecnt
          @RuntimeUnhandleEventCnt = runtimeunhandleeventcnt
          @UnScannedClusterCnt = unscannedclustercnt
          @ScanImageStatus = scanimagestatus
          @ScanClusterStatus = scanclusterstatus
          @ScanBaseLineStatus = scanbaselinestatus
          @ScanVulStatus = scanvulstatus
          @VulRiskImageCnt = vulriskimagecnt
          @RequestId = requestid
        end

        def deserialize(params)
          @ImageCnt = params['ImageCnt']
          @ScannedImageCnt = params['ScannedImageCnt']
          @UnScannedImageCnt = params['UnScannedImageCnt']
          @LocalImageCnt = params['LocalImageCnt']
          @RepositoryImageCnt = params['RepositoryImageCnt']
          @RiskLocalImageCnt = params['RiskLocalImageCnt']
          @RiskRepositoryImageCnt = params['RiskRepositoryImageCnt']
          @ContainerCnt = params['ContainerCnt']
          @RiskContainerCnt = params['RiskContainerCnt']
          @ClusterCnt = params['ClusterCnt']
          @RiskClusterCnt = params['RiskClusterCnt']
          @UnScannedVulCnt = params['UnScannedVulCnt']
          @RiskVulCnt = params['RiskVulCnt']
          @UnScannedBaseLineCnt = params['UnScannedBaseLineCnt']
          @RiskBaseLineCnt = params['RiskBaseLineCnt']
          @RuntimeUnhandleEventCnt = params['RuntimeUnhandleEventCnt']
          @UnScannedClusterCnt = params['UnScannedClusterCnt']
          @ScanImageStatus = params['ScanImageStatus']
          @ScanClusterStatus = params['ScanClusterStatus']
          @ScanBaseLineStatus = params['ScanBaseLineStatus']
          @ScanVulStatus = params['ScanVulStatus']
          @VulRiskImageCnt = params['VulRiskImageCnt']
          @RequestId = params['RequestId']
        end
      end

      # DescribeUnauthorizedCoresTendency请求参数结构体
      class DescribeUnauthorizedCoresTendencyRequest < TencentCloud::Common::AbstractModel


        def initialize()
        end

        def deserialize(params)
        end
      end

      # DescribeUnauthorizedCoresTendency返回参数结构体
      class DescribeUnauthorizedCoresTendencyResponse < TencentCloud::Common::AbstractModel
        # @param List: 未授权核数趋势
        # @type List: Array
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :List, :RequestId

        def initialize(list=nil, requestid=nil)
          @List = list
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['List'].nil?
            @List = []
            params['List'].each do |i|
              unauthorizedcorestendency_tmp = UnauthorizedCoresTendency.new
              unauthorizedcorestendency_tmp.deserialize(i)
              @List << unauthorizedcorestendency_tmp
            end
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeUnfinishRefreshTask请求参数结构体
      class DescribeUnfinishRefreshTaskRequest < TencentCloud::Common::AbstractModel


        def initialize()
        end

        def deserialize(params)
        end
      end

      # DescribeUnfinishRefreshTask返回参数结构体
      class DescribeUnfinishRefreshTaskResponse < TencentCloud::Common::AbstractModel
        # @param TaskId: 返回最近的一次任务ID
        # @type TaskId: Integer
        # @param TaskStatus: 任务状态，为Task_New,Task_Running,Task_Finish,Task_Error,Task_NoExist.Task_New,Task_Running表示有任务存在，不允许新下发
        # @type TaskStatus: String
        # @param NewTaskID: 新任务ID
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type NewTaskID: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TaskId, :TaskStatus, :NewTaskID, :RequestId

        def initialize(taskid=nil, taskstatus=nil, newtaskid=nil, requestid=nil)
          @TaskId = taskid
          @TaskStatus = taskstatus
          @NewTaskID = newtaskid
          @RequestId = requestid
        end

        def deserialize(params)
          @TaskId = params['TaskId']
          @TaskStatus = params['TaskStatus']
          @NewTaskID = params['NewTaskID']
          @RequestId = params['RequestId']
        end
      end

      # DescribeUserCluster请求参数结构体
      class DescribeUserClusterRequest < TencentCloud::Common::AbstractModel
        # @param Offset: 偏移量
        # @type Offset: Integer
        # @param Limit: 每次查询的最大记录数量
        # @type Limit: Integer
        # @param Filters: Name - String
        # Name 可取值：ClusterName,ClusterId,ClusterType,Region,ClusterCheckMode,ClusterAutoCheck
        # @type Filters: Array
        # @param By: 排序字段
        # @type By: String
        # @param Order: 排序方式 asc,desc
        # @type Order: String

        attr_accessor :Offset, :Limit, :Filters, :By, :Order

        def initialize(offset=nil, limit=nil, filters=nil, by=nil, order=nil)
          @Offset = offset
          @Limit = limit
          @Filters = filters
          @By = by
          @Order = order
        end

        def deserialize(params)
          @Offset = params['Offset']
          @Limit = params['Limit']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              compliancefilters_tmp = ComplianceFilters.new
              compliancefilters_tmp.deserialize(i)
              @Filters << compliancefilters_tmp
            end
          end
          @By = params['By']
          @Order = params['Order']
        end
      end

      # DescribeUserCluster返回参数结构体
      class DescribeUserClusterResponse < TencentCloud::Common::AbstractModel
        # @param TotalCount: 集群总数
        # @type TotalCount: Integer
        # @param ClusterInfoList: 集群的详细信息
        # @type ClusterInfoList: Array
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TotalCount, :ClusterInfoList, :RequestId

        def initialize(totalcount=nil, clusterinfolist=nil, requestid=nil)
          @TotalCount = totalcount
          @ClusterInfoList = clusterinfolist
          @RequestId = requestid
        end

        def deserialize(params)
          @TotalCount = params['TotalCount']
          unless params['ClusterInfoList'].nil?
            @ClusterInfoList = []
            params['ClusterInfoList'].each do |i|
              clusterinfoitem_tmp = ClusterInfoItem.new
              clusterinfoitem_tmp.deserialize(i)
              @ClusterInfoList << clusterinfoitem_tmp
            end
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeUserPodList请求参数结构体
      class DescribeUserPodListRequest < TencentCloud::Common::AbstractModel
        # @param ClusterId: 集群Id,不填表示获取用户所有pod
        # @type ClusterId: String
        # @param Offset: 偏移量
        # @type Offset: Integer
        # @param Limit: 每次查询的最大记录数量
        # @type Limit: Integer
        # @param Filters: Name 可取值：ClusterId集群id,Namespace命名空间等
        # @type Filters: Array
        # @param By: 排序字段
        # @type By: String
        # @param Order: 排序方式 asc,desc
        # @type Order: String
        # @param ServiceName: Service名称
        # @type ServiceName: String
        # @param Namespace: 命名空间
        # @type Namespace: String

        attr_accessor :ClusterId, :Offset, :Limit, :Filters, :By, :Order, :ServiceName, :Namespace

        def initialize(clusterid=nil, offset=nil, limit=nil, filters=nil, by=nil, order=nil, servicename=nil, namespace=nil)
          @ClusterId = clusterid
          @Offset = offset
          @Limit = limit
          @Filters = filters
          @By = by
          @Order = order
          @ServiceName = servicename
          @Namespace = namespace
        end

        def deserialize(params)
          @ClusterId = params['ClusterId']
          @Offset = params['Offset']
          @Limit = params['Limit']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              compliancefilters_tmp = ComplianceFilters.new
              compliancefilters_tmp.deserialize(i)
              @Filters << compliancefilters_tmp
            end
          end
          @By = params['By']
          @Order = params['Order']
          @ServiceName = params['ServiceName']
          @Namespace = params['Namespace']
        end
      end

      # DescribeUserPodList返回参数结构体
      class DescribeUserPodListResponse < TencentCloud::Common::AbstractModel
        # @param PodList: Pod列表详细信息
        # @type PodList: Array
        # @param TotalCount: Pod列表总数量
        # @type TotalCount: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :PodList, :TotalCount, :RequestId

        def initialize(podlist=nil, totalcount=nil, requestid=nil)
          @PodList = podlist
          @TotalCount = totalcount
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['PodList'].nil?
            @PodList = []
            params['PodList'].each do |i|
              clusterpodinfo_tmp = ClusterPodInfo.new
              clusterpodinfo_tmp.deserialize(i)
              @PodList << clusterpodinfo_tmp
            end
          end
          @TotalCount = params['TotalCount']
          @RequestId = params['RequestId']
        end
      end

      # DescribeValueAddedSrvInfo请求参数结构体
      class DescribeValueAddedSrvInfoRequest < TencentCloud::Common::AbstractModel


        def initialize()
        end

        def deserialize(params)
        end
      end

      # DescribeValueAddedSrvInfo返回参数结构体
      class DescribeValueAddedSrvInfoResponse < TencentCloud::Common::AbstractModel
        # @param RegistryImageCnt: 仓库镜像未授权数量
        # @type RegistryImageCnt: Integer
        # @param LocalImageCnt: 本地镜像未授权数量
        # @type LocalImageCnt: Integer
        # @param UnusedAuthorizedCnt: 未使用的镜像安全扫描授权数
        # @type UnusedAuthorizedCnt: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RegistryImageCnt, :LocalImageCnt, :UnusedAuthorizedCnt, :RequestId

        def initialize(registryimagecnt=nil, localimagecnt=nil, unusedauthorizedcnt=nil, requestid=nil)
          @RegistryImageCnt = registryimagecnt
          @LocalImageCnt = localimagecnt
          @UnusedAuthorizedCnt = unusedauthorizedcnt
          @RequestId = requestid
        end

        def deserialize(params)
          @RegistryImageCnt = params['RegistryImageCnt']
          @LocalImageCnt = params['LocalImageCnt']
          @UnusedAuthorizedCnt = params['UnusedAuthorizedCnt']
          @RequestId = params['RequestId']
        end
      end

      # DescribeVirusAutoIsolateSampleDetail请求参数结构体
      class DescribeVirusAutoIsolateSampleDetailRequest < TencentCloud::Common::AbstractModel
        # @param MD5: 文件MD5值
        # @type MD5: String

        attr_accessor :MD5

        def initialize(md5=nil)
          @MD5 = md5
        end

        def deserialize(params)
          @MD5 = params['MD5']
        end
      end

      # DescribeVirusAutoIsolateSampleDetail返回参数结构体
      class DescribeVirusAutoIsolateSampleDetailResponse < TencentCloud::Common::AbstractModel
        # @param MD5: 文件Md5值
        # @type MD5: String
        # @param Size: 文件大小(B)
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Size: Integer
        # @param VirusName: 病毒名
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type VirusName: String
        # @param RiskLevel: 风险等级 RISK_CRITICAL, RISK_HIGH, RISK_MEDIUM, RISK_LOW, RISK_NOTICE。
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type RiskLevel: String
        # @param KillEngine: 查杀引擎
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type KillEngine: Array
        # @param Tags: 标签
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Tags: Array
        # @param HarmDescribe: 事件描述
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type HarmDescribe: String
        # @param SuggestScheme: 建议方案
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type SuggestScheme: String
        # @param ReferenceLink: 参考链接
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ReferenceLink: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :MD5, :Size, :VirusName, :RiskLevel, :KillEngine, :Tags, :HarmDescribe, :SuggestScheme, :ReferenceLink, :RequestId

        def initialize(md5=nil, size=nil, virusname=nil, risklevel=nil, killengine=nil, tags=nil, harmdescribe=nil, suggestscheme=nil, referencelink=nil, requestid=nil)
          @MD5 = md5
          @Size = size
          @VirusName = virusname
          @RiskLevel = risklevel
          @KillEngine = killengine
          @Tags = tags
          @HarmDescribe = harmdescribe
          @SuggestScheme = suggestscheme
          @ReferenceLink = referencelink
          @RequestId = requestid
        end

        def deserialize(params)
          @MD5 = params['MD5']
          @Size = params['Size']
          @VirusName = params['VirusName']
          @RiskLevel = params['RiskLevel']
          @KillEngine = params['KillEngine']
          @Tags = params['Tags']
          @HarmDescribe = params['HarmDescribe']
          @SuggestScheme = params['SuggestScheme']
          @ReferenceLink = params['ReferenceLink']
          @RequestId = params['RequestId']
        end
      end

      # DescribeVirusAutoIsolateSampleDownloadURL请求参数结构体
      class DescribeVirusAutoIsolateSampleDownloadURLRequest < TencentCloud::Common::AbstractModel
        # @param MD5: 样本Md5值
        # @type MD5: String

        attr_accessor :MD5

        def initialize(md5=nil)
          @MD5 = md5
        end

        def deserialize(params)
          @MD5 = params['MD5']
        end
      end

      # DescribeVirusAutoIsolateSampleDownloadURL返回参数结构体
      class DescribeVirusAutoIsolateSampleDownloadURLResponse < TencentCloud::Common::AbstractModel
        # @param FileUrl: 样本下载链接
        # @type FileUrl: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :FileUrl, :RequestId

        def initialize(fileurl=nil, requestid=nil)
          @FileUrl = fileurl
          @RequestId = requestid
        end

        def deserialize(params)
          @FileUrl = params['FileUrl']
          @RequestId = params['RequestId']
        end
      end

      # DescribeVirusAutoIsolateSampleList请求参数结构体
      class DescribeVirusAutoIsolateSampleListRequest < TencentCloud::Common::AbstractModel
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Filters: 过滤条件。
        # <li>MD5- String - 是否必填：否 - md5 </li>
        # <li>AutoIsolateSwitch- String - 是否必填：否 - 自动隔离开关 </li>
        # <li>VirusName- String - 是否必填：否 - 病毒名 </li>
        # @type Filters: Array
        # @param By: 排序字段
        # @type By: String
        # @param Order: 排序方式
        # @type Order: String

        attr_accessor :Limit, :Offset, :Filters, :By, :Order

        def initialize(limit=nil, offset=nil, filters=nil, by=nil, order=nil)
          @Limit = limit
          @Offset = offset
          @Filters = filters
          @By = by
          @Order = order
        end

        def deserialize(params)
          @Limit = params['Limit']
          @Offset = params['Offset']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              runtimefilters_tmp = RunTimeFilters.new
              runtimefilters_tmp.deserialize(i)
              @Filters << runtimefilters_tmp
            end
          end
          @By = params['By']
          @Order = params['Order']
        end
      end

      # DescribeVirusAutoIsolateSampleList返回参数结构体
      class DescribeVirusAutoIsolateSampleListResponse < TencentCloud::Common::AbstractModel
        # @param TotalCount: 总数
        # @type TotalCount: Integer
        # @param List: 木马自动隔离样本列表
        # @type List: Array
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TotalCount, :List, :RequestId

        def initialize(totalcount=nil, list=nil, requestid=nil)
          @TotalCount = totalcount
          @List = list
          @RequestId = requestid
        end

        def deserialize(params)
          @TotalCount = params['TotalCount']
          unless params['List'].nil?
            @List = []
            params['List'].each do |i|
              virusautoisolatesampleinfo_tmp = VirusAutoIsolateSampleInfo.new
              virusautoisolatesampleinfo_tmp.deserialize(i)
              @List << virusautoisolatesampleinfo_tmp
            end
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeVirusAutoIsolateSetting请求参数结构体
      class DescribeVirusAutoIsolateSettingRequest < TencentCloud::Common::AbstractModel


        def initialize()
        end

        def deserialize(params)
        end
      end

      # DescribeVirusAutoIsolateSetting返回参数结构体
      class DescribeVirusAutoIsolateSettingResponse < TencentCloud::Common::AbstractModel
        # @param AutoIsolateSwitch: 自动隔离开关(true:开 false:关)
        # @type AutoIsolateSwitch: Boolean
        # @param IsKillProgress: 是否中断隔离文件关联的进程(true:是 false:否)
        # @type IsKillProgress: Boolean
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :AutoIsolateSwitch, :IsKillProgress, :RequestId

        def initialize(autoisolateswitch=nil, iskillprogress=nil, requestid=nil)
          @AutoIsolateSwitch = autoisolateswitch
          @IsKillProgress = iskillprogress
          @RequestId = requestid
        end

        def deserialize(params)
          @AutoIsolateSwitch = params['AutoIsolateSwitch']
          @IsKillProgress = params['IsKillProgress']
          @RequestId = params['RequestId']
        end
      end

      # DescribeVirusDetail请求参数结构体
      class DescribeVirusDetailRequest < TencentCloud::Common::AbstractModel
        # @param Id: 木马文件id
        # @type Id: String

        attr_accessor :Id

        def initialize(id=nil)
          @Id = id
        end

        def deserialize(params)
          @Id = params['Id']
        end
      end

      # DescribeVirusDetail返回参数结构体
      class DescribeVirusDetailResponse < TencentCloud::Common::AbstractModel
        # @param ImageId: 镜像ID
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ImageId: String
        # @param ImageName: 镜像名称
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ImageName: String
        # @param CreateTime: 创建时间
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type CreateTime: String
        # @param Size: 木马文件大小
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Size: Integer
        # @param FilePath: 木马文件路径
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type FilePath: String
        # @param ModifyTime: 最近生成时间
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ModifyTime: String
        # @param VirusName: 病毒名称
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type VirusName: String
        # @param RiskLevel: 风险等级 RISK_CRITICAL, RISK_HIGH, RISK_MEDIUM, RISK_LOW, RISK_NOTICE。
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type RiskLevel: String
        # @param ContainerName: 容器名称
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ContainerName: String
        # @param ContainerId: 容器id
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ContainerId: String
        # @param HostName: 主机名称
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type HostName: String
        # @param HostId: 主机id
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type HostId: String
        # @param ProcessName: 进程名称
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ProcessName: String
        # @param ProcessPath: 进程路径
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ProcessPath: String
        # @param ProcessMd5: 进程md5
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ProcessMd5: String
        # @param ProcessId: 进程id
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ProcessId: Integer
        # @param ProcessArgv: 进程参数
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ProcessArgv: String
        # @param ProcessChan: 进程链
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ProcessChan: String
        # @param ProcessAccountGroup: 进程组
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ProcessAccountGroup: String
        # @param ProcessStartAccount: 进程启动用户
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ProcessStartAccount: String
        # @param ProcessFileAuthority: 进程文件权限
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ProcessFileAuthority: String
        # @param SourceType: 来源：0：一键扫描， 1：定时扫描 2：实时监控
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type SourceType: Integer
        # @param Tags: 标签
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Tags: Array
        # @param HarmDescribe: 事件描述
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type HarmDescribe: String
        # @param SuggestScheme: 建议方案
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type SuggestScheme: String
        # @param Mark: 备注
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Mark: String
        # @param FileName: 风险文件名称
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type FileName: String
        # @param FileMd5: 文件MD5
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type FileMd5: String
        # @param EventType: 事件类型
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type EventType: String
        # @param PodName: 集群名称
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type PodName: String
        # @param Status: DEAL_NONE:文件待处理
        # DEAL_IGNORE:已经忽略
        # DEAL_ADD_WHITELIST:加白
        # DEAL_DEL:文件已经删除
        # DEAL_ISOLATE:已经隔离
        # DEAL_ISOLATING:隔离中
        # DEAL_ISOLATE_FAILED:隔离失败
        # DEAL_RECOVERING:恢复中
        # DEAL_RECOVER_FAILED: 恢复失败
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Status: String
        # @param SubStatus: 失败子状态:
        # FILE_NOT_FOUND:文件不存在
        # FILE_ABNORMAL:文件异常
        # FILE_ABNORMAL_DEAL_RECOVER:恢复文件时，文件异常
        # BACKUP_FILE_NOT_FOUND:备份文件不存在
        # CONTAINER_NOT_FOUND_DEAL_ISOLATE:隔离时，容器不存在
        # CONTAINER_NOT_FOUND_DEAL_RECOVER:恢复时，容器不存在
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type SubStatus: String
        # @param HostIP: 内网ip
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type HostIP: String
        # @param ClientIP: 外网ip
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ClientIP: String
        # @param PProcessStartUser: 父进程启动用户
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type PProcessStartUser: String
        # @param PProcessUserGroup: 父进程用户组
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type PProcessUserGroup: String
        # @param PProcessPath: 父进程路径
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type PProcessPath: String
        # @param PProcessParam: 父进程命令行参数
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type PProcessParam: String
        # @param AncestorProcessStartUser: 祖先进程启动用户
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type AncestorProcessStartUser: String
        # @param AncestorProcessUserGroup: 祖先进程用户组
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type AncestorProcessUserGroup: String
        # @param AncestorProcessPath: 祖先进程路径
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type AncestorProcessPath: String
        # @param AncestorProcessParam: 祖先进程命令行参数
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type AncestorProcessParam: String
        # @param OperationTime: 事件最后一次处理的时间
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type OperationTime: String
        # @param ContainerNetStatus: 容器隔离状态
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ContainerNetStatus: String
        # @param ContainerNetSubStatus: 容器隔离子状态
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ContainerNetSubStatus: String
        # @param ContainerIsolateOperationSrc: 容器隔离操作来源
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ContainerIsolateOperationSrc: String
        # @param CheckPlatform: 检测平台
        # 1: 云查杀引擎
        # 2: tav
        # 3: binaryAi
        # 4: 异常行为
        # 5: 威胁情报
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type CheckPlatform: Array
        # @param FileAccessTime: 文件访问时间
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type FileAccessTime: String
        # @param FileModifyTime: 文件修改时间
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type FileModifyTime: String
        # @param NodeSubNetID: 节点子网ID
        # @type NodeSubNetID: String
        # @param NodeSubNetName: 节点子网名称
        # @type NodeSubNetName: String
        # @param NodeSubNetCIDR: 节点子网网段
        # @type NodeSubNetCIDR: String
        # @param ClusterID: 集群id
        # @type ClusterID: String
        # @param PodIP: pod ip
        # @type PodIP: String
        # @param PodStatus: pod状态
        # @type PodStatus: String
        # @param NodeUniqueID: 节点唯一ID
        # @type NodeUniqueID: String
        # @param NodeType: 节点类型：NORMAL普通节点、SUPER超级节点
        # @type NodeType: String
        # @param NodeID: 节点ID
        # @type NodeID: String
        # @param ClusterName: 集群名称
        # @type ClusterName: String
        # @param Namespace: Namespace
        # @type Namespace: String
        # @param WorkloadType: 工作负载类型
        # @type WorkloadType: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :ImageId, :ImageName, :CreateTime, :Size, :FilePath, :ModifyTime, :VirusName, :RiskLevel, :ContainerName, :ContainerId, :HostName, :HostId, :ProcessName, :ProcessPath, :ProcessMd5, :ProcessId, :ProcessArgv, :ProcessChan, :ProcessAccountGroup, :ProcessStartAccount, :ProcessFileAuthority, :SourceType, :Tags, :HarmDescribe, :SuggestScheme, :Mark, :FileName, :FileMd5, :EventType, :PodName, :Status, :SubStatus, :HostIP, :ClientIP, :PProcessStartUser, :PProcessUserGroup, :PProcessPath, :PProcessParam, :AncestorProcessStartUser, :AncestorProcessUserGroup, :AncestorProcessPath, :AncestorProcessParam, :OperationTime, :ContainerNetStatus, :ContainerNetSubStatus, :ContainerIsolateOperationSrc, :CheckPlatform, :FileAccessTime, :FileModifyTime, :NodeSubNetID, :NodeSubNetName, :NodeSubNetCIDR, :ClusterID, :PodIP, :PodStatus, :NodeUniqueID, :NodeType, :NodeID, :ClusterName, :Namespace, :WorkloadType, :RequestId

        def initialize(imageid=nil, imagename=nil, createtime=nil, size=nil, filepath=nil, modifytime=nil, virusname=nil, risklevel=nil, containername=nil, containerid=nil, hostname=nil, hostid=nil, processname=nil, processpath=nil, processmd5=nil, processid=nil, processargv=nil, processchan=nil, processaccountgroup=nil, processstartaccount=nil, processfileauthority=nil, sourcetype=nil, tags=nil, harmdescribe=nil, suggestscheme=nil, mark=nil, filename=nil, filemd5=nil, eventtype=nil, podname=nil, status=nil, substatus=nil, hostip=nil, clientip=nil, pprocessstartuser=nil, pprocessusergroup=nil, pprocesspath=nil, pprocessparam=nil, ancestorprocessstartuser=nil, ancestorprocessusergroup=nil, ancestorprocesspath=nil, ancestorprocessparam=nil, operationtime=nil, containernetstatus=nil, containernetsubstatus=nil, containerisolateoperationsrc=nil, checkplatform=nil, fileaccesstime=nil, filemodifytime=nil, nodesubnetid=nil, nodesubnetname=nil, nodesubnetcidr=nil, clusterid=nil, podip=nil, podstatus=nil, nodeuniqueid=nil, nodetype=nil, nodeid=nil, clustername=nil, namespace=nil, workloadtype=nil, requestid=nil)
          @ImageId = imageid
          @ImageName = imagename
          @CreateTime = createtime
          @Size = size
          @FilePath = filepath
          @ModifyTime = modifytime
          @VirusName = virusname
          @RiskLevel = risklevel
          @ContainerName = containername
          @ContainerId = containerid
          @HostName = hostname
          @HostId = hostid
          @ProcessName = processname
          @ProcessPath = processpath
          @ProcessMd5 = processmd5
          @ProcessId = processid
          @ProcessArgv = processargv
          @ProcessChan = processchan
          @ProcessAccountGroup = processaccountgroup
          @ProcessStartAccount = processstartaccount
          @ProcessFileAuthority = processfileauthority
          @SourceType = sourcetype
          @Tags = tags
          @HarmDescribe = harmdescribe
          @SuggestScheme = suggestscheme
          @Mark = mark
          @FileName = filename
          @FileMd5 = filemd5
          @EventType = eventtype
          @PodName = podname
          @Status = status
          @SubStatus = substatus
          @HostIP = hostip
          @ClientIP = clientip
          @PProcessStartUser = pprocessstartuser
          @PProcessUserGroup = pprocessusergroup
          @PProcessPath = pprocesspath
          @PProcessParam = pprocessparam
          @AncestorProcessStartUser = ancestorprocessstartuser
          @AncestorProcessUserGroup = ancestorprocessusergroup
          @AncestorProcessPath = ancestorprocesspath
          @AncestorProcessParam = ancestorprocessparam
          @OperationTime = operationtime
          @ContainerNetStatus = containernetstatus
          @ContainerNetSubStatus = containernetsubstatus
          @ContainerIsolateOperationSrc = containerisolateoperationsrc
          @CheckPlatform = checkplatform
          @FileAccessTime = fileaccesstime
          @FileModifyTime = filemodifytime
          @NodeSubNetID = nodesubnetid
          @NodeSubNetName = nodesubnetname
          @NodeSubNetCIDR = nodesubnetcidr
          @ClusterID = clusterid
          @PodIP = podip
          @PodStatus = podstatus
          @NodeUniqueID = nodeuniqueid
          @NodeType = nodetype
          @NodeID = nodeid
          @ClusterName = clustername
          @Namespace = namespace
          @WorkloadType = workloadtype
          @RequestId = requestid
        end

        def deserialize(params)
          @ImageId = params['ImageId']
          @ImageName = params['ImageName']
          @CreateTime = params['CreateTime']
          @Size = params['Size']
          @FilePath = params['FilePath']
          @ModifyTime = params['ModifyTime']
          @VirusName = params['VirusName']
          @RiskLevel = params['RiskLevel']
          @ContainerName = params['ContainerName']
          @ContainerId = params['ContainerId']
          @HostName = params['HostName']
          @HostId = params['HostId']
          @ProcessName = params['ProcessName']
          @ProcessPath = params['ProcessPath']
          @ProcessMd5 = params['ProcessMd5']
          @ProcessId = params['ProcessId']
          @ProcessArgv = params['ProcessArgv']
          @ProcessChan = params['ProcessChan']
          @ProcessAccountGroup = params['ProcessAccountGroup']
          @ProcessStartAccount = params['ProcessStartAccount']
          @ProcessFileAuthority = params['ProcessFileAuthority']
          @SourceType = params['SourceType']
          @Tags = params['Tags']
          @HarmDescribe = params['HarmDescribe']
          @SuggestScheme = params['SuggestScheme']
          @Mark = params['Mark']
          @FileName = params['FileName']
          @FileMd5 = params['FileMd5']
          @EventType = params['EventType']
          @PodName = params['PodName']
          @Status = params['Status']
          @SubStatus = params['SubStatus']
          @HostIP = params['HostIP']
          @ClientIP = params['ClientIP']
          @PProcessStartUser = params['PProcessStartUser']
          @PProcessUserGroup = params['PProcessUserGroup']
          @PProcessPath = params['PProcessPath']
          @PProcessParam = params['PProcessParam']
          @AncestorProcessStartUser = params['AncestorProcessStartUser']
          @AncestorProcessUserGroup = params['AncestorProcessUserGroup']
          @AncestorProcessPath = params['AncestorProcessPath']
          @AncestorProcessParam = params['AncestorProcessParam']
          @OperationTime = params['OperationTime']
          @ContainerNetStatus = params['ContainerNetStatus']
          @ContainerNetSubStatus = params['ContainerNetSubStatus']
          @ContainerIsolateOperationSrc = params['ContainerIsolateOperationSrc']
          @CheckPlatform = params['CheckPlatform']
          @FileAccessTime = params['FileAccessTime']
          @FileModifyTime = params['FileModifyTime']
          @NodeSubNetID = params['NodeSubNetID']
          @NodeSubNetName = params['NodeSubNetName']
          @NodeSubNetCIDR = params['NodeSubNetCIDR']
          @ClusterID = params['ClusterID']
          @PodIP = params['PodIP']
          @PodStatus = params['PodStatus']
          @NodeUniqueID = params['NodeUniqueID']
          @NodeType = params['NodeType']
          @NodeID = params['NodeID']
          @ClusterName = params['ClusterName']
          @Namespace = params['Namespace']
          @WorkloadType = params['WorkloadType']
          @RequestId = params['RequestId']
        end
      end

      # DescribeVirusEventTendency请求参数结构体
      class DescribeVirusEventTendencyRequest < TencentCloud::Common::AbstractModel
        # @param TendencyPeriod: 趋势周期(默认为7天)
        # @type TendencyPeriod: Integer

        attr_accessor :TendencyPeriod

        def initialize(tendencyperiod=nil)
          @TendencyPeriod = tendencyperiod
        end

        def deserialize(params)
          @TendencyPeriod = params['TendencyPeriod']
        end
      end

      # DescribeVirusEventTendency返回参数结构体
      class DescribeVirusEventTendencyResponse < TencentCloud::Common::AbstractModel
        # @param List: 趋势列表
        # @type List: Array
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :List, :RequestId

        def initialize(list=nil, requestid=nil)
          @List = list
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['List'].nil?
            @List = []
            params['List'].each do |i|
              virustendencyinfo_tmp = VirusTendencyInfo.new
              virustendencyinfo_tmp.deserialize(i)
              @List << virustendencyinfo_tmp
            end
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeVirusList请求参数结构体
      class DescribeVirusListRequest < TencentCloud::Common::AbstractModel
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Filters: 过滤条件。
        # <li>FileName - String - 是否必填：否 - 文件名称</li>
        # <li>FilePath - String - 是否必填：否 - 文件路径</li>
        # <li>VirusName - String - 是否必填：否 - 病毒名称</li>
        # <li>ContainerName- String - 是否必填：是 - 容器名称</li>
        # <li>ContainerId- string - 是否必填：否 - 容器id</li>
        # <li>ImageName- string - 是否必填：否 - 镜像名称</li>
        # <li>ImageId- string - 是否必填：否 - 镜像id</li>
        # <li>IsRealTime- int - 是否必填：否 - 过滤是否实时监控数据</li>
        # <li>TaskId- string - 是否必填：否 - 任务ID</li>
        # <li>ContainerNetStatus - String -是否必填: 否 -  容器网络状态筛选 NORMAL ISOLATED ISOLATING RESTORING RESTORE_FAILED</li>
        # <li>TimeRange - string -是否必填: 否 - 时间范围筛选 ["2022-03-31 16:55:00", "2022-03-31 17:00:00"]</li>
        # <li>ContainerStatus - string -是否必填: 否 - 容器状态 RUNNING PAUSED STOPPED CREATED DESTROYED RESTARTING REMOVING</li>
        # <li>AutoIsolateMode - string -是否必填: 否 - 隔离方式 MANUAL AUTO</li>
        # <li>MD5 - string -是否必填: 否 - md5 </li>
        # @type Filters: Array
        # @param Order: 排序方式
        # @type Order: String
        # @param By: 排序字段
        # @type By: String

        attr_accessor :Limit, :Offset, :Filters, :Order, :By

        def initialize(limit=nil, offset=nil, filters=nil, order=nil, by=nil)
          @Limit = limit
          @Offset = offset
          @Filters = filters
          @Order = order
          @By = by
        end

        def deserialize(params)
          @Limit = params['Limit']
          @Offset = params['Offset']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              runtimefilters_tmp = RunTimeFilters.new
              runtimefilters_tmp.deserialize(i)
              @Filters << runtimefilters_tmp
            end
          end
          @Order = params['Order']
          @By = params['By']
        end
      end

      # DescribeVirusList返回参数结构体
      class DescribeVirusListResponse < TencentCloud::Common::AbstractModel
        # @param List: 木马列表
        # @type List: Array
        # @param TotalCount: 总数量
        # @type TotalCount: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :List, :TotalCount, :RequestId

        def initialize(list=nil, totalcount=nil, requestid=nil)
          @List = list
          @TotalCount = totalcount
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['List'].nil?
            @List = []
            params['List'].each do |i|
              virusinfo_tmp = VirusInfo.new
              virusinfo_tmp.deserialize(i)
              @List << virusinfo_tmp
            end
          end
          @TotalCount = params['TotalCount']
          @RequestId = params['RequestId']
        end
      end

      # DescribeVirusManualScanEstimateTimeout请求参数结构体
      class DescribeVirusManualScanEstimateTimeoutRequest < TencentCloud::Common::AbstractModel
        # @param ScanRangeType: 扫描范围0容器1主机节点
        # @type ScanRangeType: Integer
        # @param ScanRangeAll: true 全选，false 自选
        # @type ScanRangeAll: Boolean
        # @param ScanIds: 自选扫描范围的容器id或者主机id 根据ScanRangeType决定
        # @type ScanIds: Array

        attr_accessor :ScanRangeType, :ScanRangeAll, :ScanIds

        def initialize(scanrangetype=nil, scanrangeall=nil, scanids=nil)
          @ScanRangeType = scanrangetype
          @ScanRangeAll = scanrangeall
          @ScanIds = scanids
        end

        def deserialize(params)
          @ScanRangeType = params['ScanRangeType']
          @ScanRangeAll = params['ScanRangeAll']
          @ScanIds = params['ScanIds']
        end
      end

      # DescribeVirusManualScanEstimateTimeout返回参数结构体
      class DescribeVirusManualScanEstimateTimeoutResponse < TencentCloud::Common::AbstractModel
        # @param Timeout: 预估超时时间(h)
        # @type Timeout: Float
        # @param ContainerScanConcurrencyCount: 单台主机并行扫描容器数
        # @type ContainerScanConcurrencyCount: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :Timeout, :ContainerScanConcurrencyCount, :RequestId

        def initialize(timeout=nil, containerscanconcurrencycount=nil, requestid=nil)
          @Timeout = timeout
          @ContainerScanConcurrencyCount = containerscanconcurrencycount
          @RequestId = requestid
        end

        def deserialize(params)
          @Timeout = params['Timeout']
          @ContainerScanConcurrencyCount = params['ContainerScanConcurrencyCount']
          @RequestId = params['RequestId']
        end
      end

      # DescribeVirusMonitorSetting请求参数结构体
      class DescribeVirusMonitorSettingRequest < TencentCloud::Common::AbstractModel


        def initialize()
        end

        def deserialize(params)
        end
      end

      # DescribeVirusMonitorSetting返回参数结构体
      class DescribeVirusMonitorSettingResponse < TencentCloud::Common::AbstractModel
        # @param EnableScan: 是否开启实时监控
        # @type EnableScan: Boolean
        # @param ScanPathAll: 扫描全部路径
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ScanPathAll: Boolean
        # @param ScanPathType: 当ScanPathAll为true 生效 0扫描以下路径 1、扫描除以下路径
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ScanPathType: Integer
        # @param ScanPath: 自选排除或扫描的地址
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ScanPath: Array
        # @param ScanPathMode: 扫描路径模式：
        # SCAN_PATH_ALL：全部路径
        # SCAN_PATH_DEFAULT：默认路径
        # SCAN_PATH_USER_DEFINE：用户自定义路径
        # @type ScanPathMode: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :EnableScan, :ScanPathAll, :ScanPathType, :ScanPath, :ScanPathMode, :RequestId

        def initialize(enablescan=nil, scanpathall=nil, scanpathtype=nil, scanpath=nil, scanpathmode=nil, requestid=nil)
          @EnableScan = enablescan
          @ScanPathAll = scanpathall
          @ScanPathType = scanpathtype
          @ScanPath = scanpath
          @ScanPathMode = scanpathmode
          @RequestId = requestid
        end

        def deserialize(params)
          @EnableScan = params['EnableScan']
          @ScanPathAll = params['ScanPathAll']
          @ScanPathType = params['ScanPathType']
          @ScanPath = params['ScanPath']
          @ScanPathMode = params['ScanPathMode']
          @RequestId = params['RequestId']
        end
      end

      # DescribeVirusSampleDownloadUrl请求参数结构体
      class DescribeVirusSampleDownloadUrlRequest < TencentCloud::Common::AbstractModel
        # @param ID: 木马id
        # @type ID: String

        attr_accessor :ID

        def initialize(id=nil)
          @ID = id
        end

        def deserialize(params)
          @ID = params['ID']
        end
      end

      # DescribeVirusSampleDownloadUrl返回参数结构体
      class DescribeVirusSampleDownloadUrlResponse < TencentCloud::Common::AbstractModel
        # @param FileUrl: 样本下载地址
        # @type FileUrl: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :FileUrl, :RequestId

        def initialize(fileurl=nil, requestid=nil)
          @FileUrl = fileurl
          @RequestId = requestid
        end

        def deserialize(params)
          @FileUrl = params['FileUrl']
          @RequestId = params['RequestId']
        end
      end

      # DescribeVirusScanSetting请求参数结构体
      class DescribeVirusScanSettingRequest < TencentCloud::Common::AbstractModel


        def initialize()
        end

        def deserialize(params)
        end
      end

      # DescribeVirusScanSetting返回参数结构体
      class DescribeVirusScanSettingResponse < TencentCloud::Common::AbstractModel
        # @param EnableScan: 是否开启定期扫描
        # @type EnableScan: Boolean
        # @param Cycle: 检测周期每隔多少天
        # @type Cycle: Integer
        # @param BeginScanAt: 扫描开始时间
        # @type BeginScanAt: String
        # @param ScanPathAll: 扫描全部路径
        # @type ScanPathAll: Boolean
        # @param ScanPathType: 当ScanPathAll为true 生效 0扫描以下路径 1、扫描除以下路径
        # @type ScanPathType: Integer
        # @param Timeout: 超时时长，单位小时
        # @type Timeout: Integer
        # @param ScanRangeType: 扫描范围0容器1主机节点
        # @type ScanRangeType: Integer
        # @param ScanRangeAll: true 全选，false 自选
        # @type ScanRangeAll: Boolean
        # @param ScanIds: 自选扫描范围的容器id或者主机id 根据ScanRangeType决定
        # @type ScanIds: Array
        # @param ScanPath: 自选排除或扫描的地址
        # @type ScanPath: Array
        # @param ClickTimeout: 一键检测的超时设置
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ClickTimeout: Integer
        # @param ScanPathMode: 扫描路径模式：
        # SCAN_PATH_ALL：全部路径
        # SCAN_PATH_DEFAULT：默认路径
        # SCAN_PATH_USER_DEFINE：用户自定义路径
        # @type ScanPathMode: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :EnableScan, :Cycle, :BeginScanAt, :ScanPathAll, :ScanPathType, :Timeout, :ScanRangeType, :ScanRangeAll, :ScanIds, :ScanPath, :ClickTimeout, :ScanPathMode, :RequestId

        def initialize(enablescan=nil, cycle=nil, beginscanat=nil, scanpathall=nil, scanpathtype=nil, timeout=nil, scanrangetype=nil, scanrangeall=nil, scanids=nil, scanpath=nil, clicktimeout=nil, scanpathmode=nil, requestid=nil)
          @EnableScan = enablescan
          @Cycle = cycle
          @BeginScanAt = beginscanat
          @ScanPathAll = scanpathall
          @ScanPathType = scanpathtype
          @Timeout = timeout
          @ScanRangeType = scanrangetype
          @ScanRangeAll = scanrangeall
          @ScanIds = scanids
          @ScanPath = scanpath
          @ClickTimeout = clicktimeout
          @ScanPathMode = scanpathmode
          @RequestId = requestid
        end

        def deserialize(params)
          @EnableScan = params['EnableScan']
          @Cycle = params['Cycle']
          @BeginScanAt = params['BeginScanAt']
          @ScanPathAll = params['ScanPathAll']
          @ScanPathType = params['ScanPathType']
          @Timeout = params['Timeout']
          @ScanRangeType = params['ScanRangeType']
          @ScanRangeAll = params['ScanRangeAll']
          @ScanIds = params['ScanIds']
          @ScanPath = params['ScanPath']
          @ClickTimeout = params['ClickTimeout']
          @ScanPathMode = params['ScanPathMode']
          @RequestId = params['RequestId']
        end
      end

      # DescribeVirusScanTaskStatus请求参数结构体
      class DescribeVirusScanTaskStatusRequest < TencentCloud::Common::AbstractModel
        # @param TaskID: 任务id
        # @type TaskID: String

        attr_accessor :TaskID

        def initialize(taskid=nil)
          @TaskID = taskid
        end

        def deserialize(params)
          @TaskID = params['TaskID']
        end
      end

      # DescribeVirusScanTaskStatus返回参数结构体
      class DescribeVirusScanTaskStatusResponse < TencentCloud::Common::AbstractModel
        # @param ContainerTotal: 查杀容器个数
        # @type ContainerTotal: Integer
        # @param RiskContainerCnt: 风险容器个数
        # @type RiskContainerCnt: Integer
        # @param Status: 扫描状态 任务状态:
        # SCAN_NONE:无，
        # SCAN_SCANNING:正在扫描中，
        # SCAN_FINISH：扫描完成，
        # SCAN_TIMEOUT：扫描超时
        # SCAN_CANCELING: 取消中
        # SCAN_CANCELED:已取消
        # @type Status: String
        # @param Schedule: 扫描进度 I
        # @type Schedule: Integer
        # @param ContainerScanCnt: 已经扫描了的容器个数
        # @type ContainerScanCnt: Integer
        # @param RiskCnt: 风险个数
        # @type RiskCnt: Integer
        # @param LeftSeconds: 剩余扫描时间
        # @type LeftSeconds: Integer
        # @param StartTime: 扫描开始时间
        # @type StartTime: String
        # @param EndTime: 扫描结束时间
        # @type EndTime: String
        # @param ScanType: 扫描类型，"CYCLE"：周期扫描， "MANUAL"：手动扫描
        # @type ScanType: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :ContainerTotal, :RiskContainerCnt, :Status, :Schedule, :ContainerScanCnt, :RiskCnt, :LeftSeconds, :StartTime, :EndTime, :ScanType, :RequestId

        def initialize(containertotal=nil, riskcontainercnt=nil, status=nil, schedule=nil, containerscancnt=nil, riskcnt=nil, leftseconds=nil, starttime=nil, endtime=nil, scantype=nil, requestid=nil)
          @ContainerTotal = containertotal
          @RiskContainerCnt = riskcontainercnt
          @Status = status
          @Schedule = schedule
          @ContainerScanCnt = containerscancnt
          @RiskCnt = riskcnt
          @LeftSeconds = leftseconds
          @StartTime = starttime
          @EndTime = endtime
          @ScanType = scantype
          @RequestId = requestid
        end

        def deserialize(params)
          @ContainerTotal = params['ContainerTotal']
          @RiskContainerCnt = params['RiskContainerCnt']
          @Status = params['Status']
          @Schedule = params['Schedule']
          @ContainerScanCnt = params['ContainerScanCnt']
          @RiskCnt = params['RiskCnt']
          @LeftSeconds = params['LeftSeconds']
          @StartTime = params['StartTime']
          @EndTime = params['EndTime']
          @ScanType = params['ScanType']
          @RequestId = params['RequestId']
        end
      end

      # DescribeVirusScanTimeoutSetting请求参数结构体
      class DescribeVirusScanTimeoutSettingRequest < TencentCloud::Common::AbstractModel
        # @param ScanType: 设置类型0一键检测，1定时检测
        # @type ScanType: Integer

        attr_accessor :ScanType

        def initialize(scantype=nil)
          @ScanType = scantype
        end

        def deserialize(params)
          @ScanType = params['ScanType']
        end
      end

      # DescribeVirusScanTimeoutSetting返回参数结构体
      class DescribeVirusScanTimeoutSettingResponse < TencentCloud::Common::AbstractModel
        # @param Timeout: 超时时长单位小时
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Timeout: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :Timeout, :RequestId

        def initialize(timeout=nil, requestid=nil)
          @Timeout = timeout
          @RequestId = requestid
        end

        def deserialize(params)
          @Timeout = params['Timeout']
          @RequestId = params['RequestId']
        end
      end

      # DescribeVirusSummary请求参数结构体
      class DescribeVirusSummaryRequest < TencentCloud::Common::AbstractModel


        def initialize()
        end

        def deserialize(params)
        end
      end

      # DescribeVirusSummary返回参数结构体
      class DescribeVirusSummaryResponse < TencentCloud::Common::AbstractModel
        # @param TaskId: 最近的一次扫描任务id
        # @type TaskId: String
        # @param RiskContainerCnt: 木马影响容器个数
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type RiskContainerCnt: Integer
        # @param RiskCnt: 待处理风险个数
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type RiskCnt: Integer
        # @param VirusDataBaseModifyTime: 病毒库更新时间
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type VirusDataBaseModifyTime: String
        # @param RiskContainerIncrease: 木马影响容器个数较昨日增长
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type RiskContainerIncrease: Integer
        # @param RiskIncrease: 待处理风险个数较昨日增长
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type RiskIncrease: Integer
        # @param IsolateIncrease: 隔离事件个数较昨日新增
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type IsolateIncrease: Integer
        # @param IsolateCnt: 隔离事件总数
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type IsolateCnt: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TaskId, :RiskContainerCnt, :RiskCnt, :VirusDataBaseModifyTime, :RiskContainerIncrease, :RiskIncrease, :IsolateIncrease, :IsolateCnt, :RequestId

        def initialize(taskid=nil, riskcontainercnt=nil, riskcnt=nil, virusdatabasemodifytime=nil, riskcontainerincrease=nil, riskincrease=nil, isolateincrease=nil, isolatecnt=nil, requestid=nil)
          @TaskId = taskid
          @RiskContainerCnt = riskcontainercnt
          @RiskCnt = riskcnt
          @VirusDataBaseModifyTime = virusdatabasemodifytime
          @RiskContainerIncrease = riskcontainerincrease
          @RiskIncrease = riskincrease
          @IsolateIncrease = isolateincrease
          @IsolateCnt = isolatecnt
          @RequestId = requestid
        end

        def deserialize(params)
          @TaskId = params['TaskId']
          @RiskContainerCnt = params['RiskContainerCnt']
          @RiskCnt = params['RiskCnt']
          @VirusDataBaseModifyTime = params['VirusDataBaseModifyTime']
          @RiskContainerIncrease = params['RiskContainerIncrease']
          @RiskIncrease = params['RiskIncrease']
          @IsolateIncrease = params['IsolateIncrease']
          @IsolateCnt = params['IsolateCnt']
          @RequestId = params['RequestId']
        end
      end

      # DescribeVirusTaskList请求参数结构体
      class DescribeVirusTaskListRequest < TencentCloud::Common::AbstractModel
        # @param TaskId: 任务id
        # @type TaskId: String
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Filters: 过滤条件。
        # <li>ContainerName - String - 是否必填：否 - 容器名称</li>
        # <li>ContainerId - String - 是否必填：否 - 容器id</li>
        # <li>Hostname - String - 是否必填：否 - 主机名称</li>
        # <li>HostIp- String - 是否必填：否 - 主机IP</li>
        # <li>ImageId- String - 是否必填：否 - 镜像ID</li>
        # <li>ImageName- String - 是否必填：否 - 镜像名称</li>
        # <li>Status- String - 是否必填：否 - 状态</li>
        # @type Filters: Array
        # @param By: 排序字段
        # @type By: String
        # @param Order: 排序方式
        # @type Order: String

        attr_accessor :TaskId, :Limit, :Offset, :Filters, :By, :Order

        def initialize(taskid=nil, limit=nil, offset=nil, filters=nil, by=nil, order=nil)
          @TaskId = taskid
          @Limit = limit
          @Offset = offset
          @Filters = filters
          @By = by
          @Order = order
        end

        def deserialize(params)
          @TaskId = params['TaskId']
          @Limit = params['Limit']
          @Offset = params['Offset']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              runtimefilters_tmp = RunTimeFilters.new
              runtimefilters_tmp.deserialize(i)
              @Filters << runtimefilters_tmp
            end
          end
          @By = params['By']
          @Order = params['Order']
        end
      end

      # DescribeVirusTaskList返回参数结构体
      class DescribeVirusTaskListResponse < TencentCloud::Common::AbstractModel
        # @param List: 文件查杀列表
        # @type List: Array
        # @param TotalCount: 总数量(容器任务数量)
        # @type TotalCount: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :List, :TotalCount, :RequestId

        def initialize(list=nil, totalcount=nil, requestid=nil)
          @List = list
          @TotalCount = totalcount
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['List'].nil?
            @List = []
            params['List'].each do |i|
              virustaskinfo_tmp = VirusTaskInfo.new
              virustaskinfo_tmp.deserialize(i)
              @List << virustaskinfo_tmp
            end
          end
          @TotalCount = params['TotalCount']
          @RequestId = params['RequestId']
        end
      end

      # DescribeVulContainerList请求参数结构体
      class DescribeVulContainerListRequest < TencentCloud::Common::AbstractModel
        # @param PocID: 漏洞PocID
        # @type PocID: String
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Filters: 过滤条件。
        # <li>OnlyAffectedNewestImage- Bool- 是否必填：否 - 仅展示影响最新版本镜像的漏洞</li>
        # <li>ContainerID- string - 是否必填：否 - 容器ID</li>
        # <li>ContainerName- String -是否必填: 否 - 容器名称</li>
        # @type Filters: Array

        attr_accessor :PocID, :Limit, :Offset, :Filters

        def initialize(pocid=nil, limit=nil, offset=nil, filters=nil)
          @PocID = pocid
          @Limit = limit
          @Offset = offset
          @Filters = filters
        end

        def deserialize(params)
          @PocID = params['PocID']
          @Limit = params['Limit']
          @Offset = params['Offset']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              runtimefilters_tmp = RunTimeFilters.new
              runtimefilters_tmp.deserialize(i)
              @Filters << runtimefilters_tmp
            end
          end
        end
      end

      # DescribeVulContainerList返回参数结构体
      class DescribeVulContainerListResponse < TencentCloud::Common::AbstractModel
        # @param List: 容器列表
        # @type List: Array
        # @param TotalCount: 容器总数
        # @type TotalCount: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :List, :TotalCount, :RequestId

        def initialize(list=nil, totalcount=nil, requestid=nil)
          @List = list
          @TotalCount = totalcount
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['List'].nil?
            @List = []
            params['List'].each do |i|
              vulaffectedcontainerinfo_tmp = VulAffectedContainerInfo.new
              vulaffectedcontainerinfo_tmp.deserialize(i)
              @List << vulaffectedcontainerinfo_tmp
            end
          end
          @TotalCount = params['TotalCount']
          @RequestId = params['RequestId']
        end
      end

      # DescribeVulDefenceEventDetail请求参数结构体
      class DescribeVulDefenceEventDetailRequest < TencentCloud::Common::AbstractModel
        # @param EventID: 事件ID
        # @type EventID: Integer

        attr_accessor :EventID

        def initialize(eventid=nil)
          @EventID = eventid
        end

        def deserialize(params)
          @EventID = params['EventID']
        end
      end

      # DescribeVulDefenceEventDetail返回参数结构体
      class DescribeVulDefenceEventDetailResponse < TencentCloud::Common::AbstractModel
        # @param EventDetail: 漏洞防御事件详细
        # @type EventDetail: :class:`Tencentcloud::Tcss.v20201101.models.VulDefenceEventDetail`
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :EventDetail, :RequestId

        def initialize(eventdetail=nil, requestid=nil)
          @EventDetail = eventdetail
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['EventDetail'].nil?
            @EventDetail = VulDefenceEventDetail.new
            @EventDetail.deserialize(params['EventDetail'])
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeVulDefenceEvent请求参数结构体
      class DescribeVulDefenceEventRequest < TencentCloud::Common::AbstractModel
        # @param Filters: 过滤条件。
        # <li>Status- String - 是否必填：否 - 插件状态，待处理：EVENT_UNDEAL，EVENT_DEALED：已处理，已忽略：EVENT_IGNORE， EVENT_DEFENDED：已防御</li>
        # <li>ContainerStatus- String - 是否必填：否 - 容器运行状态筛选，已创建：CREATED,正常运行：RUNNING, 暂定运行：PAUSED, 停止运行：	STOPPED，重启中：RESTARTING, 迁移中：REMOVING, 销毁：DESTROYED </li>
        # <li>ContainerNetStatus- String -是否必填: 否 -  容器网络状态筛选 未隔离：NORMAL，已隔离：ISOLATED，隔离失败：ISOLATE_FAILED，解除隔离失败：RESTORE_FAILED，解除隔离中：RESTORING，隔离中：ISOLATING</li>
        # <li>EventType - String -是否必填: 否 -  入侵状态，防御成功：EVENT_DEFENDED，尝试攻击：EVENT_ATTACK </li>
        # <li>TimeRange- String -是否必填: 否 -  时间范围，第一个值表示开始时间，第二个值表示结束时间 </li>
        # <li>VulName- string - 是否必填：否 - 漏洞名称。</li>
        # <li>CVEID- string - 是否必填：否 - CVE编号。</li>
        # <li>SourceIP- string - 是否必填：否 - 攻击源IP。</li>
        # <li>ContainerName- string - 是否必填：否 - 容器名称。</li>
        # <li>ContainerID- string - 是否必填：否 - 容器ID。</li>
        # <li>ImageName- string - 是否必填：否 - 镜像名称。</li>
        # <li>ImageID- string - 是否必填：否 - 镜像ID。</li>
        # <li>HostName- string - 是否必填：否 - 主机名称。</li>
        # <li>HostIP- string - 是否必填：否 - 内网IP。</li>
        # @type Filters: Array
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Order: 排序方式：asc/desc
        # @type Order: String
        # @param By: 排序字段：事件数量：EventCount
        # @type By: String

        attr_accessor :Filters, :Limit, :Offset, :Order, :By

        def initialize(filters=nil, limit=nil, offset=nil, order=nil, by=nil)
          @Filters = filters
          @Limit = limit
          @Offset = offset
          @Order = order
          @By = by
        end

        def deserialize(params)
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              runtimefilters_tmp = RunTimeFilters.new
              runtimefilters_tmp.deserialize(i)
              @Filters << runtimefilters_tmp
            end
          end
          @Limit = params['Limit']
          @Offset = params['Offset']
          @Order = params['Order']
          @By = params['By']
        end
      end

      # DescribeVulDefenceEvent返回参数结构体
      class DescribeVulDefenceEventResponse < TencentCloud::Common::AbstractModel
        # @param List: 漏洞防御事件列表
        # @type List: Array
        # @param TotalCount: 总数量
        # @type TotalCount: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :List, :TotalCount, :RequestId

        def initialize(list=nil, totalcount=nil, requestid=nil)
          @List = list
          @TotalCount = totalcount
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['List'].nil?
            @List = []
            params['List'].each do |i|
              vuldefenceevent_tmp = VulDefenceEvent.new
              vuldefenceevent_tmp.deserialize(i)
              @List << vuldefenceevent_tmp
            end
          end
          @TotalCount = params['TotalCount']
          @RequestId = params['RequestId']
        end
      end

      # DescribeVulDefenceEventTendency请求参数结构体
      class DescribeVulDefenceEventTendencyRequest < TencentCloud::Common::AbstractModel
        # @param StartTime: 开始时间
        # @type StartTime: String
        # @param EndTime: 结束时间
        # @type EndTime: String

        attr_accessor :StartTime, :EndTime

        def initialize(starttime=nil, endtime=nil)
          @StartTime = starttime
          @EndTime = endtime
        end

        def deserialize(params)
          @StartTime = params['StartTime']
          @EndTime = params['EndTime']
        end
      end

      # DescribeVulDefenceEventTendency返回参数结构体
      class DescribeVulDefenceEventTendencyResponse < TencentCloud::Common::AbstractModel
        # @param DefendedList: 漏洞防御事件趋势
        # @type DefendedList: Array
        # @param AttackList: 漏洞攻击事件趋势
        # @type AttackList: Array
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :DefendedList, :AttackList, :RequestId

        def initialize(defendedlist=nil, attacklist=nil, requestid=nil)
          @DefendedList = defendedlist
          @AttackList = attacklist
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['DefendedList'].nil?
            @DefendedList = []
            params['DefendedList'].each do |i|
              vuldefenceeventtendency_tmp = VulDefenceEventTendency.new
              vuldefenceeventtendency_tmp.deserialize(i)
              @DefendedList << vuldefenceeventtendency_tmp
            end
          end
          unless params['AttackList'].nil?
            @AttackList = []
            params['AttackList'].each do |i|
              vuldefenceeventtendency_tmp = VulDefenceEventTendency.new
              vuldefenceeventtendency_tmp.deserialize(i)
              @AttackList << vuldefenceeventtendency_tmp
            end
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeVulDefenceHost请求参数结构体
      class DescribeVulDefenceHostRequest < TencentCloud::Common::AbstractModel
        # @param Filters: 过滤条件。
        # <li>Status- String - 是否必填：否 - 插件状态，正常：SUCCESS，异常：FAIL， NO_DEFENCE:未防御</li>
        # <li>HostName- String - 是否必填：否 - 主机名称/超级节点名称</li>
        # <li>HostIP- String - 是否必填：否 - 主机IP</li>
        # <li>NodeType- String - 是否必填：否 - 节点类型</li>
        # <li>HostName- String - 是否必填：否 - 超级节点名称</li>
        # <li>NodeSubNetCIDR- String - 是否必填：否 - 超级节点CIDR</li>
        # @type Filters: Array
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Order: 排序方式：asc/desc
        # @type Order: String
        # @param By: 排序字段：更新时间：ModifyTime/首次开启时间：CreateTime
        # @type By: String

        attr_accessor :Filters, :Limit, :Offset, :Order, :By

        def initialize(filters=nil, limit=nil, offset=nil, order=nil, by=nil)
          @Filters = filters
          @Limit = limit
          @Offset = offset
          @Order = order
          @By = by
        end

        def deserialize(params)
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              runtimefilters_tmp = RunTimeFilters.new
              runtimefilters_tmp.deserialize(i)
              @Filters << runtimefilters_tmp
            end
          end
          @Limit = params['Limit']
          @Offset = params['Offset']
          @Order = params['Order']
          @By = params['By']
        end
      end

      # DescribeVulDefenceHost返回参数结构体
      class DescribeVulDefenceHostResponse < TencentCloud::Common::AbstractModel
        # @param TotalCount: 总数量
        # @type TotalCount: Integer
        # @param List: 漏洞防御的主机列表
        # @type List: Array
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TotalCount, :List, :RequestId

        def initialize(totalcount=nil, list=nil, requestid=nil)
          @TotalCount = totalcount
          @List = list
          @RequestId = requestid
        end

        def deserialize(params)
          @TotalCount = params['TotalCount']
          unless params['List'].nil?
            @List = []
            params['List'].each do |i|
              vuldefencehost_tmp = VulDefenceHost.new
              vuldefencehost_tmp.deserialize(i)
              @List << vuldefencehost_tmp
            end
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeVulDefencePlugin请求参数结构体
      class DescribeVulDefencePluginRequest < TencentCloud::Common::AbstractModel
        # @param HostID: 主机HostID或超级节点UniqueId
        # @type HostID: String
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Filters: 过滤条件。
        # <li>
        # Status- String - 是否必填：否 -插件运行状态：注入中:INJECTING，注入成功：SUCCESS，注入失败：FAIL，插件超时：TIMEOUT，插件退出：QUIT
        # </li>
        # @type Filters: Array

        attr_accessor :HostID, :Limit, :Offset, :Filters

        def initialize(hostid=nil, limit=nil, offset=nil, filters=nil)
          @HostID = hostid
          @Limit = limit
          @Offset = offset
          @Filters = filters
        end

        def deserialize(params)
          @HostID = params['HostID']
          @Limit = params['Limit']
          @Offset = params['Offset']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              runtimefilters_tmp = RunTimeFilters.new
              runtimefilters_tmp.deserialize(i)
              @Filters << runtimefilters_tmp
            end
          end
        end
      end

      # DescribeVulDefencePlugin返回参数结构体
      class DescribeVulDefencePluginResponse < TencentCloud::Common::AbstractModel
        # @param TotalCount: 总数量
        # @type TotalCount: Integer
        # @param List: 漏洞防御插件列表
        # @type List: Array
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TotalCount, :List, :RequestId

        def initialize(totalcount=nil, list=nil, requestid=nil)
          @TotalCount = totalcount
          @List = list
          @RequestId = requestid
        end

        def deserialize(params)
          @TotalCount = params['TotalCount']
          unless params['List'].nil?
            @List = []
            params['List'].each do |i|
              vuldefenceplugin_tmp = VulDefencePlugin.new
              vuldefenceplugin_tmp.deserialize(i)
              @List << vuldefenceplugin_tmp
            end
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeVulDefenceSetting请求参数结构体
      class DescribeVulDefenceSettingRequest < TencentCloud::Common::AbstractModel


        def initialize()
        end

        def deserialize(params)
        end
      end

      # DescribeVulDefenceSetting返回参数结构体
      class DescribeVulDefenceSettingResponse < TencentCloud::Common::AbstractModel
        # @param IsEnabled: 是否开启:0: 关闭 1:开启
        # @type IsEnabled: Integer
        # @param Scope: 漏洞防御主机范围: 0:自选主机节点，1:全部
        # @type Scope: Integer
        # @param HostCount: 漏洞防御主机数量
        # @type HostCount: Integer
        # @param ExceptionHostCount: 开启漏洞防御异常主机数量
        # @type ExceptionHostCount: Integer
        # @param HostIDs: 自选漏洞防御主机
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type HostIDs: Array
        # @param HostTotalCount: 开通容器安全的主机总数
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type HostTotalCount: Integer
        # @param SupportDefenseVulCount: 支持防御的漏洞数
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type SupportDefenseVulCount: Integer
        # @param HostNodeCount: 普通节点个数
        # @type HostNodeCount: Integer
        # @param SuperScope: 超级节点范围
        # @type SuperScope: Integer
        # @param SuperNodeCount: 超级节点个数
        # @type SuperNodeCount: Integer
        # @param SuperNodeIds: 超级节点Id列表
        # @type SuperNodeIds: Array
        # @param NodeTotalCount: 开通容器安全的超级结点总数
        # @type NodeTotalCount: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :IsEnabled, :Scope, :HostCount, :ExceptionHostCount, :HostIDs, :HostTotalCount, :SupportDefenseVulCount, :HostNodeCount, :SuperScope, :SuperNodeCount, :SuperNodeIds, :NodeTotalCount, :RequestId

        def initialize(isenabled=nil, scope=nil, hostcount=nil, exceptionhostcount=nil, hostids=nil, hosttotalcount=nil, supportdefensevulcount=nil, hostnodecount=nil, superscope=nil, supernodecount=nil, supernodeids=nil, nodetotalcount=nil, requestid=nil)
          @IsEnabled = isenabled
          @Scope = scope
          @HostCount = hostcount
          @ExceptionHostCount = exceptionhostcount
          @HostIDs = hostids
          @HostTotalCount = hosttotalcount
          @SupportDefenseVulCount = supportdefensevulcount
          @HostNodeCount = hostnodecount
          @SuperScope = superscope
          @SuperNodeCount = supernodecount
          @SuperNodeIds = supernodeids
          @NodeTotalCount = nodetotalcount
          @RequestId = requestid
        end

        def deserialize(params)
          @IsEnabled = params['IsEnabled']
          @Scope = params['Scope']
          @HostCount = params['HostCount']
          @ExceptionHostCount = params['ExceptionHostCount']
          @HostIDs = params['HostIDs']
          @HostTotalCount = params['HostTotalCount']
          @SupportDefenseVulCount = params['SupportDefenseVulCount']
          @HostNodeCount = params['HostNodeCount']
          @SuperScope = params['SuperScope']
          @SuperNodeCount = params['SuperNodeCount']
          @SuperNodeIds = params['SuperNodeIds']
          @NodeTotalCount = params['NodeTotalCount']
          @RequestId = params['RequestId']
        end
      end

      # DescribeVulDetail请求参数结构体
      class DescribeVulDetailRequest < TencentCloud::Common::AbstractModel
        # @param PocID: 漏洞PocID
        # @type PocID: String

        attr_accessor :PocID

        def initialize(pocid=nil)
          @PocID = pocid
        end

        def deserialize(params)
          @PocID = params['PocID']
        end
      end

      # DescribeVulDetail返回参数结构体
      class DescribeVulDetailResponse < TencentCloud::Common::AbstractModel
        # @param VulInfo: 漏洞详情信息
        # @type VulInfo: :class:`Tencentcloud::Tcss.v20201101.models.VulDetailInfo`
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :VulInfo, :RequestId

        def initialize(vulinfo=nil, requestid=nil)
          @VulInfo = vulinfo
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['VulInfo'].nil?
            @VulInfo = VulDetailInfo.new
            @VulInfo.deserialize(params['VulInfo'])
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeVulIgnoreLocalImageList请求参数结构体
      class DescribeVulIgnoreLocalImageListRequest < TencentCloud::Common::AbstractModel
        # @param PocID: 漏洞PocID
        # @type PocID: String
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Order: 排序方式:DESC,ACS
        # @type Order: String
        # @param By: 排序字段 ImageSize
        # @type By: String

        attr_accessor :PocID, :Limit, :Offset, :Order, :By

        def initialize(pocid=nil, limit=nil, offset=nil, order=nil, by=nil)
          @PocID = pocid
          @Limit = limit
          @Offset = offset
          @Order = order
          @By = by
        end

        def deserialize(params)
          @PocID = params['PocID']
          @Limit = params['Limit']
          @Offset = params['Offset']
          @Order = params['Order']
          @By = params['By']
        end
      end

      # DescribeVulIgnoreLocalImageList返回参数结构体
      class DescribeVulIgnoreLocalImageListResponse < TencentCloud::Common::AbstractModel
        # @param TotalCount: 总数量
        # @type TotalCount: Integer
        # @param List: 镜像列表
        # @type List: Array
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TotalCount, :List, :RequestId

        def initialize(totalcount=nil, list=nil, requestid=nil)
          @TotalCount = totalcount
          @List = list
          @RequestId = requestid
        end

        def deserialize(params)
          @TotalCount = params['TotalCount']
          unless params['List'].nil?
            @List = []
            params['List'].each do |i|
              vulignorelocalimage_tmp = VulIgnoreLocalImage.new
              vulignorelocalimage_tmp.deserialize(i)
              @List << vulignorelocalimage_tmp
            end
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeVulIgnoreRegistryImageList请求参数结构体
      class DescribeVulIgnoreRegistryImageListRequest < TencentCloud::Common::AbstractModel
        # @param PocID: 漏洞PocID
        # @type PocID: String
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer

        attr_accessor :PocID, :Limit, :Offset

        def initialize(pocid=nil, limit=nil, offset=nil)
          @PocID = pocid
          @Limit = limit
          @Offset = offset
        end

        def deserialize(params)
          @PocID = params['PocID']
          @Limit = params['Limit']
          @Offset = params['Offset']
        end
      end

      # DescribeVulIgnoreRegistryImageList返回参数结构体
      class DescribeVulIgnoreRegistryImageListResponse < TencentCloud::Common::AbstractModel
        # @param TotalCount: 总数量
        # @type TotalCount: Integer
        # @param List: 镜像列表
        # @type List: Array
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TotalCount, :List, :RequestId

        def initialize(totalcount=nil, list=nil, requestid=nil)
          @TotalCount = totalcount
          @List = list
          @RequestId = requestid
        end

        def deserialize(params)
          @TotalCount = params['TotalCount']
          unless params['List'].nil?
            @List = []
            params['List'].each do |i|
              vulignoreregistryimage_tmp = VulIgnoreRegistryImage.new
              vulignoreregistryimage_tmp.deserialize(i)
              @List << vulignoreregistryimage_tmp
            end
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeVulImageList请求参数结构体
      class DescribeVulImageListRequest < TencentCloud::Common::AbstractModel
        # @param PocID: 漏洞PocID
        # @type PocID: String
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Filters: 过滤条件。
        # <li>OnlyAffectedNewestImage- Bool- 是否必填：否 - 仅展示影响最新版本镜像的漏洞</li>
        # <li>ImageID- string - 是否必填：否 - 镜像ID</li>
        # <li>ImageName- String -是否必填: 否 - 镜像名称</li>
        # <li>HostIP- string -是否必填: 否 - 内网IP</li>
        # <li>PublicIP- string -是否必填: 否 - 外网IP</li>
        # <li>ComponentName- string -是否必填: 否 - 组件名称</li>
        # <li>ComponentVersion- string -是否必填: 否 - 组件版本</li>
        # <li>HostName- string -是否必填: 否 - 主机名称</li>
        # @type Filters: Array
        # @param Order: 排序方式
        # @type Order: String
        # @param By: 排序字段
        # @type By: String

        attr_accessor :PocID, :Limit, :Offset, :Filters, :Order, :By

        def initialize(pocid=nil, limit=nil, offset=nil, filters=nil, order=nil, by=nil)
          @PocID = pocid
          @Limit = limit
          @Offset = offset
          @Filters = filters
          @Order = order
          @By = by
        end

        def deserialize(params)
          @PocID = params['PocID']
          @Limit = params['Limit']
          @Offset = params['Offset']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              runtimefilters_tmp = RunTimeFilters.new
              runtimefilters_tmp.deserialize(i)
              @Filters << runtimefilters_tmp
            end
          end
          @Order = params['Order']
          @By = params['By']
        end
      end

      # DescribeVulImageList返回参数结构体
      class DescribeVulImageListResponse < TencentCloud::Common::AbstractModel
        # @param List: 受影响的镜像列表
        # @type List: Array
        # @param TotalCount: 镜像总数
        # @type TotalCount: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :List, :TotalCount, :RequestId

        def initialize(list=nil, totalcount=nil, requestid=nil)
          @List = list
          @TotalCount = totalcount
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['List'].nil?
            @List = []
            params['List'].each do |i|
              vulaffectedimageinfo_tmp = VulAffectedImageInfo.new
              vulaffectedimageinfo_tmp.deserialize(i)
              @List << vulaffectedimageinfo_tmp
            end
          end
          @TotalCount = params['TotalCount']
          @RequestId = params['RequestId']
        end
      end

      # DescribeVulImageSummary请求参数结构体
      class DescribeVulImageSummaryRequest < TencentCloud::Common::AbstractModel


        def initialize()
        end

        def deserialize(params)
        end
      end

      # DescribeVulImageSummary返回参数结构体
      class DescribeVulImageSummaryResponse < TencentCloud::Common::AbstractModel
        # @param SeriousVulImageCount: 受严重或高危漏洞影响的镜像数
        # @type SeriousVulImageCount: Integer
        # @param ScannedImageCount: 已扫描的镜像数
        # @type ScannedImageCount: Integer
        # @param VulTotalCount: 漏洞总数量
        # @type VulTotalCount: Integer
        # @param SysTemVulCount: 系统漏洞数
        # @type SysTemVulCount: Integer
        # @param WebVulCount: web应用漏洞数
        # @type WebVulCount: Integer
        # @param AllAuthorizedImageCount: 已授权镜像数
        # @type AllAuthorizedImageCount: Integer
        # @param EmergencyVulCount: 应急漏洞数
        # @type EmergencyVulCount: Integer
        # @param SupportVulTotalCount: 支持扫描的漏洞总数量
        # @type SupportVulTotalCount: Integer
        # @param VulLibraryUpdateTime: 漏洞库更新时间
        # @type VulLibraryUpdateTime: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :SeriousVulImageCount, :ScannedImageCount, :VulTotalCount, :SysTemVulCount, :WebVulCount, :AllAuthorizedImageCount, :EmergencyVulCount, :SupportVulTotalCount, :VulLibraryUpdateTime, :RequestId

        def initialize(seriousvulimagecount=nil, scannedimagecount=nil, vultotalcount=nil, systemvulcount=nil, webvulcount=nil, allauthorizedimagecount=nil, emergencyvulcount=nil, supportvultotalcount=nil, vullibraryupdatetime=nil, requestid=nil)
          @SeriousVulImageCount = seriousvulimagecount
          @ScannedImageCount = scannedimagecount
          @VulTotalCount = vultotalcount
          @SysTemVulCount = systemvulcount
          @WebVulCount = webvulcount
          @AllAuthorizedImageCount = allauthorizedimagecount
          @EmergencyVulCount = emergencyvulcount
          @SupportVulTotalCount = supportvultotalcount
          @VulLibraryUpdateTime = vullibraryupdatetime
          @RequestId = requestid
        end

        def deserialize(params)
          @SeriousVulImageCount = params['SeriousVulImageCount']
          @ScannedImageCount = params['ScannedImageCount']
          @VulTotalCount = params['VulTotalCount']
          @SysTemVulCount = params['SysTemVulCount']
          @WebVulCount = params['WebVulCount']
          @AllAuthorizedImageCount = params['AllAuthorizedImageCount']
          @EmergencyVulCount = params['EmergencyVulCount']
          @SupportVulTotalCount = params['SupportVulTotalCount']
          @VulLibraryUpdateTime = params['VulLibraryUpdateTime']
          @RequestId = params['RequestId']
        end
      end

      # DescribeVulLevelImageSummary请求参数结构体
      class DescribeVulLevelImageSummaryRequest < TencentCloud::Common::AbstractModel


        def initialize()
        end

        def deserialize(params)
        end
      end

      # DescribeVulLevelImageSummary返回参数结构体
      class DescribeVulLevelImageSummaryResponse < TencentCloud::Common::AbstractModel
        # @param HighLevelVulLocalImagePercent: 高危漏洞最新本地镜像占比
        # @type HighLevelVulLocalImagePercent: Float
        # @param MediumLevelVulLocalImagePercent: 中危漏洞最新本地镜像占比
        # @type MediumLevelVulLocalImagePercent: Float
        # @param LowLevelVulLocalImagePercent: 低危漏洞最新本地镜像占比
        # @type LowLevelVulLocalImagePercent: Float
        # @param CriticalLevelVulLocalImagePercent: 严重漏洞最新本地镜像占比
        # @type CriticalLevelVulLocalImagePercent: Float
        # @param LocalNewestImageCount: 影响的最新版本本地镜像数
        # @type LocalNewestImageCount: Integer
        # @param RegistryNewestImageCount: 影响的最新版本仓库镜像数
        # @type RegistryNewestImageCount: Integer
        # @param HighLevelVulRegistryImagePercent: 高危漏洞最新仓库镜像占比
        # @type HighLevelVulRegistryImagePercent: Float
        # @param MediumLevelVulRegistryImagePercent: 中危漏洞最新仓库镜像占比
        # @type MediumLevelVulRegistryImagePercent: Float
        # @param LowLevelVulRegistryImagePercent: 低危漏洞最新仓库镜像占比
        # @type LowLevelVulRegistryImagePercent: Float
        # @param CriticalLevelVulRegistryImagePercent: 严重漏洞最新仓库镜像占比
        # @type CriticalLevelVulRegistryImagePercent: Float
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :HighLevelVulLocalImagePercent, :MediumLevelVulLocalImagePercent, :LowLevelVulLocalImagePercent, :CriticalLevelVulLocalImagePercent, :LocalNewestImageCount, :RegistryNewestImageCount, :HighLevelVulRegistryImagePercent, :MediumLevelVulRegistryImagePercent, :LowLevelVulRegistryImagePercent, :CriticalLevelVulRegistryImagePercent, :RequestId

        def initialize(highlevelvullocalimagepercent=nil, mediumlevelvullocalimagepercent=nil, lowlevelvullocalimagepercent=nil, criticallevelvullocalimagepercent=nil, localnewestimagecount=nil, registrynewestimagecount=nil, highlevelvulregistryimagepercent=nil, mediumlevelvulregistryimagepercent=nil, lowlevelvulregistryimagepercent=nil, criticallevelvulregistryimagepercent=nil, requestid=nil)
          @HighLevelVulLocalImagePercent = highlevelvullocalimagepercent
          @MediumLevelVulLocalImagePercent = mediumlevelvullocalimagepercent
          @LowLevelVulLocalImagePercent = lowlevelvullocalimagepercent
          @CriticalLevelVulLocalImagePercent = criticallevelvullocalimagepercent
          @LocalNewestImageCount = localnewestimagecount
          @RegistryNewestImageCount = registrynewestimagecount
          @HighLevelVulRegistryImagePercent = highlevelvulregistryimagepercent
          @MediumLevelVulRegistryImagePercent = mediumlevelvulregistryimagepercent
          @LowLevelVulRegistryImagePercent = lowlevelvulregistryimagepercent
          @CriticalLevelVulRegistryImagePercent = criticallevelvulregistryimagepercent
          @RequestId = requestid
        end

        def deserialize(params)
          @HighLevelVulLocalImagePercent = params['HighLevelVulLocalImagePercent']
          @MediumLevelVulLocalImagePercent = params['MediumLevelVulLocalImagePercent']
          @LowLevelVulLocalImagePercent = params['LowLevelVulLocalImagePercent']
          @CriticalLevelVulLocalImagePercent = params['CriticalLevelVulLocalImagePercent']
          @LocalNewestImageCount = params['LocalNewestImageCount']
          @RegistryNewestImageCount = params['RegistryNewestImageCount']
          @HighLevelVulRegistryImagePercent = params['HighLevelVulRegistryImagePercent']
          @MediumLevelVulRegistryImagePercent = params['MediumLevelVulRegistryImagePercent']
          @LowLevelVulRegistryImagePercent = params['LowLevelVulRegistryImagePercent']
          @CriticalLevelVulRegistryImagePercent = params['CriticalLevelVulRegistryImagePercent']
          @RequestId = params['RequestId']
        end
      end

      # DescribeVulLevelSummary请求参数结构体
      class DescribeVulLevelSummaryRequest < TencentCloud::Common::AbstractModel
        # @param CategoryType: 漏洞分类: SYSTEM:系统漏洞 WEB:web应用漏洞 EMERGENCY:应急漏洞
        # @type CategoryType: String

        attr_accessor :CategoryType

        def initialize(categorytype=nil)
          @CategoryType = categorytype
        end

        def deserialize(params)
          @CategoryType = params['CategoryType']
        end
      end

      # DescribeVulLevelSummary返回参数结构体
      class DescribeVulLevelSummaryResponse < TencentCloud::Common::AbstractModel
        # @param HighLevelVulCount: 高危漏洞数
        # @type HighLevelVulCount: Integer
        # @param MediumLevelVulCount: 中危漏洞数
        # @type MediumLevelVulCount: Integer
        # @param LowLevelVulCount: 低危漏洞数
        # @type LowLevelVulCount: Integer
        # @param CriticalLevelVulCount: 严重漏洞数
        # @type CriticalLevelVulCount: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :HighLevelVulCount, :MediumLevelVulCount, :LowLevelVulCount, :CriticalLevelVulCount, :RequestId

        def initialize(highlevelvulcount=nil, mediumlevelvulcount=nil, lowlevelvulcount=nil, criticallevelvulcount=nil, requestid=nil)
          @HighLevelVulCount = highlevelvulcount
          @MediumLevelVulCount = mediumlevelvulcount
          @LowLevelVulCount = lowlevelvulcount
          @CriticalLevelVulCount = criticallevelvulcount
          @RequestId = requestid
        end

        def deserialize(params)
          @HighLevelVulCount = params['HighLevelVulCount']
          @MediumLevelVulCount = params['MediumLevelVulCount']
          @LowLevelVulCount = params['LowLevelVulCount']
          @CriticalLevelVulCount = params['CriticalLevelVulCount']
          @RequestId = params['RequestId']
        end
      end

      # DescribeVulRegistryImageList请求参数结构体
      class DescribeVulRegistryImageListRequest < TencentCloud::Common::AbstractModel
        # @param PocID: 漏洞ID
        # @type PocID: String
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Filters: 过滤条件。
        # OnlyAffectedNewestImage bool 是否影响最新镜像
        # ImageDigest 镜像Digest，支持模糊查询
        # ImageId 镜像ID，支持模糊查询
        # Namespace 命名空间，支持模糊查询
        # ImageTag 镜像版本，支持模糊查询
        # InstanceName 实例名称，支持模糊查询
        # ImageName 镜像名，支持模糊查询
        # ImageRepoAddress 镜像地址，支持模糊查询
        # @type Filters: Array
        # @param Order: 排序方式
        # @type Order: String
        # @param By: 排序字段
        # @type By: String

        attr_accessor :PocID, :Limit, :Offset, :Filters, :Order, :By

        def initialize(pocid=nil, limit=nil, offset=nil, filters=nil, order=nil, by=nil)
          @PocID = pocid
          @Limit = limit
          @Offset = offset
          @Filters = filters
          @Order = order
          @By = by
        end

        def deserialize(params)
          @PocID = params['PocID']
          @Limit = params['Limit']
          @Offset = params['Offset']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              assetfilters_tmp = AssetFilters.new
              assetfilters_tmp.deserialize(i)
              @Filters << assetfilters_tmp
            end
          end
          @Order = params['Order']
          @By = params['By']
        end
      end

      # DescribeVulRegistryImageList返回参数结构体
      class DescribeVulRegistryImageListResponse < TencentCloud::Common::AbstractModel
        # @param TotalCount: 镜像总数
        # @type TotalCount: Integer
        # @param List: 仓库镜像列表
        # @type List: Array
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TotalCount, :List, :RequestId

        def initialize(totalcount=nil, list=nil, requestid=nil)
          @TotalCount = totalcount
          @List = list
          @RequestId = requestid
        end

        def deserialize(params)
          @TotalCount = params['TotalCount']
          unless params['List'].nil?
            @List = []
            params['List'].each do |i|
              vulaffectedregistryimageinfo_tmp = VulAffectedRegistryImageInfo.new
              vulaffectedregistryimageinfo_tmp.deserialize(i)
              @List << vulaffectedregistryimageinfo_tmp
            end
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeVulScanAuthorizedImageSummary请求参数结构体
      class DescribeVulScanAuthorizedImageSummaryRequest < TencentCloud::Common::AbstractModel


        def initialize()
        end

        def deserialize(params)
        end
      end

      # DescribeVulScanAuthorizedImageSummary返回参数结构体
      class DescribeVulScanAuthorizedImageSummaryResponse < TencentCloud::Common::AbstractModel
        # @param AllAuthorizedImageCount: 全部已授权的本地镜像数
        # @type AllAuthorizedImageCount: Integer
        # @param UnScanAuthorizedImageCount: 已授权未扫描的本地镜像数
        # @type UnScanAuthorizedImageCount: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :AllAuthorizedImageCount, :UnScanAuthorizedImageCount, :RequestId

        def initialize(allauthorizedimagecount=nil, unscanauthorizedimagecount=nil, requestid=nil)
          @AllAuthorizedImageCount = allauthorizedimagecount
          @UnScanAuthorizedImageCount = unscanauthorizedimagecount
          @RequestId = requestid
        end

        def deserialize(params)
          @AllAuthorizedImageCount = params['AllAuthorizedImageCount']
          @UnScanAuthorizedImageCount = params['UnScanAuthorizedImageCount']
          @RequestId = params['RequestId']
        end
      end

      # DescribeVulScanInfo请求参数结构体
      class DescribeVulScanInfoRequest < TencentCloud::Common::AbstractModel
        # @param LocalTaskID: 本地镜像漏洞扫描任务ID，无则返回最近一次的漏洞任务扫描
        # @type LocalTaskID: Integer
        # @param RegistryTaskID: 仓库镜像漏洞扫描任务ID，无则返回最近一次的漏洞任务扫描
        # @type RegistryTaskID: Integer

        attr_accessor :LocalTaskID, :RegistryTaskID

        def initialize(localtaskid=nil, registrytaskid=nil)
          @LocalTaskID = localtaskid
          @RegistryTaskID = registrytaskid
        end

        def deserialize(params)
          @LocalTaskID = params['LocalTaskID']
          @RegistryTaskID = params['RegistryTaskID']
        end
      end

      # DescribeVulScanInfo返回参数结构体
      class DescribeVulScanInfoResponse < TencentCloud::Common::AbstractModel
        # @param LocalImageScanCount: 本次扫描的本地镜像总数
        # @type LocalImageScanCount: Integer
        # @param IgnoreVulCount: 忽略的漏洞数量
        # @type IgnoreVulCount: Integer
        # @param ScanStartTime: 漏洞扫描的开始时间
        # @type ScanStartTime: String
        # @param ScanEndTime: 漏洞扫描的结束时间
        # @type ScanEndTime: String
        # @param FoundRiskImageCount: 发现风险镜像数量
        # @type FoundRiskImageCount: Integer
        # @param FoundVulCount: 本地发现漏洞数量
        # @type FoundVulCount: Integer
        # @param ScanProgress: 扫描进度
        # @type ScanProgress: Float
        # @param RegistryImageScanCount: 本次扫描的仓库镜像总数
        # @type RegistryImageScanCount: Integer
        # @param LocalTaskID: 本地镜像最近一次的漏洞任务扫描ID
        # @type LocalTaskID: Integer
        # @param Status: 扫描状态:NOT_SCAN:未扫描，SCANNING:扫描中,SCANNED:完成，CANCELED：扫描停止
        # @type Status: String
        # @param RemainingTime: 剩余时间，秒
        # @type RemainingTime: Float
        # @param RegistryTaskID: 仓库镜像最近一次的漏洞任务扫描ID
        # @type RegistryTaskID: Integer
        # @param RegistryFoundVulCount: 仓库发现漏洞数量
        # @type RegistryFoundVulCount: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :LocalImageScanCount, :IgnoreVulCount, :ScanStartTime, :ScanEndTime, :FoundRiskImageCount, :FoundVulCount, :ScanProgress, :RegistryImageScanCount, :LocalTaskID, :Status, :RemainingTime, :RegistryTaskID, :RegistryFoundVulCount, :RequestId

        def initialize(localimagescancount=nil, ignorevulcount=nil, scanstarttime=nil, scanendtime=nil, foundriskimagecount=nil, foundvulcount=nil, scanprogress=nil, registryimagescancount=nil, localtaskid=nil, status=nil, remainingtime=nil, registrytaskid=nil, registryfoundvulcount=nil, requestid=nil)
          @LocalImageScanCount = localimagescancount
          @IgnoreVulCount = ignorevulcount
          @ScanStartTime = scanstarttime
          @ScanEndTime = scanendtime
          @FoundRiskImageCount = foundriskimagecount
          @FoundVulCount = foundvulcount
          @ScanProgress = scanprogress
          @RegistryImageScanCount = registryimagescancount
          @LocalTaskID = localtaskid
          @Status = status
          @RemainingTime = remainingtime
          @RegistryTaskID = registrytaskid
          @RegistryFoundVulCount = registryfoundvulcount
          @RequestId = requestid
        end

        def deserialize(params)
          @LocalImageScanCount = params['LocalImageScanCount']
          @IgnoreVulCount = params['IgnoreVulCount']
          @ScanStartTime = params['ScanStartTime']
          @ScanEndTime = params['ScanEndTime']
          @FoundRiskImageCount = params['FoundRiskImageCount']
          @FoundVulCount = params['FoundVulCount']
          @ScanProgress = params['ScanProgress']
          @RegistryImageScanCount = params['RegistryImageScanCount']
          @LocalTaskID = params['LocalTaskID']
          @Status = params['Status']
          @RemainingTime = params['RemainingTime']
          @RegistryTaskID = params['RegistryTaskID']
          @RegistryFoundVulCount = params['RegistryFoundVulCount']
          @RequestId = params['RequestId']
        end
      end

      # DescribeVulScanLocalImageList请求参数结构体
      class DescribeVulScanLocalImageListRequest < TencentCloud::Common::AbstractModel
        # @param TaskID: 漏洞扫描任务ID
        # @type TaskID: Integer
        # @param Filters: 过滤条件。
        # <li>OnlyAffectedNewestImage- Bool- 是否必填：否 - 仅展示影响最新版本镜像的漏洞</li>
        # <li>ImageID- string - 是否必填：否 - 镜像ID</li>
        # <li>ImageName- String -是否必填: 否 - 镜像名称</li>
        # <li>ScanStatus- string -是否必填: 否 - 检测状态。WAIT_SCAN：待检测，SCANNING：检查中，SCANNED：检查完成，SCAN_ERR：检查失败，CANCELED：检测停止</li>
        # @type Filters: Array
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Order: 排序方式
        # @type Order: String
        # @param By: 排序字段
        # @type By: String

        attr_accessor :TaskID, :Filters, :Limit, :Offset, :Order, :By

        def initialize(taskid=nil, filters=nil, limit=nil, offset=nil, order=nil, by=nil)
          @TaskID = taskid
          @Filters = filters
          @Limit = limit
          @Offset = offset
          @Order = order
          @By = by
        end

        def deserialize(params)
          @TaskID = params['TaskID']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              runtimefilters_tmp = RunTimeFilters.new
              runtimefilters_tmp.deserialize(i)
              @Filters << runtimefilters_tmp
            end
          end
          @Limit = params['Limit']
          @Offset = params['Offset']
          @Order = params['Order']
          @By = params['By']
        end
      end

      # DescribeVulScanLocalImageList返回参数结构体
      class DescribeVulScanLocalImageListResponse < TencentCloud::Common::AbstractModel
        # @param TotalCount: 镜像总数
        # @type TotalCount: Integer
        # @param List: 镜像列表
        # @type List: Array
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TotalCount, :List, :RequestId

        def initialize(totalcount=nil, list=nil, requestid=nil)
          @TotalCount = totalcount
          @List = list
          @RequestId = requestid
        end

        def deserialize(params)
          @TotalCount = params['TotalCount']
          unless params['List'].nil?
            @List = []
            params['List'].each do |i|
              vulscanimageinfo_tmp = VulScanImageInfo.new
              vulscanimageinfo_tmp.deserialize(i)
              @List << vulscanimageinfo_tmp
            end
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeVulSummary请求参数结构体
      class DescribeVulSummaryRequest < TencentCloud::Common::AbstractModel
        # @param Filters: 过滤条件。
        # <li>OnlyAffectedNewestImage- string- 是否必填：否 - 仅展示影响最新版本镜像的漏洞true,false</li>
        # <li>OnlyAffectedContainer-string- 是否必填：否 - 仅展示影响容器的漏洞,true,false</li>
        # <li>CategoryType- string - 是否必填：否 - 漏洞分类: SYSTEM:系统漏洞 WEB:web应用漏洞 ALL:全部漏洞</li>
        # @type Filters: Array

        attr_accessor :Filters

        def initialize(filters=nil)
          @Filters = filters
        end

        def deserialize(params)
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              runtimefilters_tmp = RunTimeFilters.new
              runtimefilters_tmp.deserialize(i)
              @Filters << runtimefilters_tmp
            end
          end
        end
      end

      # DescribeVulSummary返回参数结构体
      class DescribeVulSummaryResponse < TencentCloud::Common::AbstractModel
        # @param VulTotalCount: 漏洞总数量
        # @type VulTotalCount: Integer
        # @param SeriousVulCount: 严重及高危漏洞数量
        # @type SeriousVulCount: Integer
        # @param SuggestVulCount: 重点关注漏洞数量
        # @type SuggestVulCount: Integer
        # @param PocExpLevelVulCount: 有Poc或者Exp的漏洞数量
        # @type PocExpLevelVulCount: Integer
        # @param RemoteExpLevelVulCount: 有远程Exp的漏洞数量
        # @type RemoteExpLevelVulCount: Integer
        # @param SeriousVulNewestImageCount: 受严重或高危漏洞影响的最新版本镜像数
        # @type SeriousVulNewestImageCount: Integer
        # @param SystemVulnerabilityFocusCount: 系统漏洞重点关注数
        # @type SystemVulnerabilityFocusCount: Integer
        # @param WebVulnerabilityFocusCount: web漏洞重点关注数
        # @type WebVulnerabilityFocusCount: Integer
        # @param SeriousVulnerabilityLocalImageCount: 受影响本地镜像数
        # @type SeriousVulnerabilityLocalImageCount: Integer
        # @param SeriousVulnerabilityRegistryImageCount: 受影响仓库镜像数
        # @type SeriousVulnerabilityRegistryImageCount: Integer
        # @param EmergencyVulnerabilityCount: 应急漏洞数量
        # @type EmergencyVulnerabilityCount: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :VulTotalCount, :SeriousVulCount, :SuggestVulCount, :PocExpLevelVulCount, :RemoteExpLevelVulCount, :SeriousVulNewestImageCount, :SystemVulnerabilityFocusCount, :WebVulnerabilityFocusCount, :SeriousVulnerabilityLocalImageCount, :SeriousVulnerabilityRegistryImageCount, :EmergencyVulnerabilityCount, :RequestId

        def initialize(vultotalcount=nil, seriousvulcount=nil, suggestvulcount=nil, pocexplevelvulcount=nil, remoteexplevelvulcount=nil, seriousvulnewestimagecount=nil, systemvulnerabilityfocuscount=nil, webvulnerabilityfocuscount=nil, seriousvulnerabilitylocalimagecount=nil, seriousvulnerabilityregistryimagecount=nil, emergencyvulnerabilitycount=nil, requestid=nil)
          @VulTotalCount = vultotalcount
          @SeriousVulCount = seriousvulcount
          @SuggestVulCount = suggestvulcount
          @PocExpLevelVulCount = pocexplevelvulcount
          @RemoteExpLevelVulCount = remoteexplevelvulcount
          @SeriousVulNewestImageCount = seriousvulnewestimagecount
          @SystemVulnerabilityFocusCount = systemvulnerabilityfocuscount
          @WebVulnerabilityFocusCount = webvulnerabilityfocuscount
          @SeriousVulnerabilityLocalImageCount = seriousvulnerabilitylocalimagecount
          @SeriousVulnerabilityRegistryImageCount = seriousvulnerabilityregistryimagecount
          @EmergencyVulnerabilityCount = emergencyvulnerabilitycount
          @RequestId = requestid
        end

        def deserialize(params)
          @VulTotalCount = params['VulTotalCount']
          @SeriousVulCount = params['SeriousVulCount']
          @SuggestVulCount = params['SuggestVulCount']
          @PocExpLevelVulCount = params['PocExpLevelVulCount']
          @RemoteExpLevelVulCount = params['RemoteExpLevelVulCount']
          @SeriousVulNewestImageCount = params['SeriousVulNewestImageCount']
          @SystemVulnerabilityFocusCount = params['SystemVulnerabilityFocusCount']
          @WebVulnerabilityFocusCount = params['WebVulnerabilityFocusCount']
          @SeriousVulnerabilityLocalImageCount = params['SeriousVulnerabilityLocalImageCount']
          @SeriousVulnerabilityRegistryImageCount = params['SeriousVulnerabilityRegistryImageCount']
          @EmergencyVulnerabilityCount = params['EmergencyVulnerabilityCount']
          @RequestId = params['RequestId']
        end
      end

      # DescribeVulTendency请求参数结构体
      class DescribeVulTendencyRequest < TencentCloud::Common::AbstractModel
        # @param StartTime: 开始时间
        # @type StartTime: String
        # @param EndTime: 结束时间
        # @type EndTime: String
        # @param SphereOfInfluence: 枚举类型：
        # LATEST：最新版本
        # CONTAINER: 运行容器
        # @type SphereOfInfluence: String

        attr_accessor :StartTime, :EndTime, :SphereOfInfluence

        def initialize(starttime=nil, endtime=nil, sphereofinfluence=nil)
          @StartTime = starttime
          @EndTime = endtime
          @SphereOfInfluence = sphereofinfluence
        end

        def deserialize(params)
          @StartTime = params['StartTime']
          @EndTime = params['EndTime']
          @SphereOfInfluence = params['SphereOfInfluence']
        end
      end

      # DescribeVulTendency返回参数结构体
      class DescribeVulTendencyResponse < TencentCloud::Common::AbstractModel
        # @param VulTendencySet: 漏洞趋势列表
        # @type VulTendencySet: Array
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :VulTendencySet, :RequestId

        def initialize(vultendencyset=nil, requestid=nil)
          @VulTendencySet = vultendencyset
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['VulTendencySet'].nil?
            @VulTendencySet = []
            params['VulTendencySet'].each do |i|
              vultendencyinfo_tmp = VulTendencyInfo.new
              vultendencyinfo_tmp.deserialize(i)
              @VulTendencySet << vultendencyinfo_tmp
            end
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeVulTopRanking请求参数结构体
      class DescribeVulTopRankingRequest < TencentCloud::Common::AbstractModel
        # @param CategoryType: 漏洞分类: SYSTEM:系统漏洞 WEB:web应用漏洞 EMERGENCY:应急漏洞
        # @type CategoryType: String

        attr_accessor :CategoryType

        def initialize(categorytype=nil)
          @CategoryType = categorytype
        end

        def deserialize(params)
          @CategoryType = params['CategoryType']
        end
      end

      # DescribeVulTopRanking返回参数结构体
      class DescribeVulTopRankingResponse < TencentCloud::Common::AbstractModel
        # @param List: 漏洞Top排名信息列表
        # @type List: Array
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :List, :RequestId

        def initialize(list=nil, requestid=nil)
          @List = list
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['List'].nil?
            @List = []
            params['List'].each do |i|
              vultoprankinginfo_tmp = VulTopRankingInfo.new
              vultoprankinginfo_tmp.deserialize(i)
              @List << vultoprankinginfo_tmp
            end
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeWarningRules请求参数结构体
      class DescribeWarningRulesRequest < TencentCloud::Common::AbstractModel


        def initialize()
        end

        def deserialize(params)
        end
      end

      # DescribeWarningRules返回参数结构体
      class DescribeWarningRulesResponse < TencentCloud::Common::AbstractModel
        # @param WarningRules: 告警策略列表
        # @type WarningRules: Array
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :WarningRules, :RequestId

        def initialize(warningrules=nil, requestid=nil)
          @WarningRules = warningrules
          @RequestId = requestid
        end

        def deserialize(params)
          unless params['WarningRules'].nil?
            @WarningRules = []
            params['WarningRules'].each do |i|
              warningrule_tmp = WarningRule.new
              warningrule_tmp.deserialize(i)
              @WarningRules << warningrule_tmp
            end
          end
          @RequestId = params['RequestId']
        end
      end

      # DescribeWebVulList请求参数结构体
      class DescribeWebVulListRequest < TencentCloud::Common::AbstractModel
        # @param Limit: 需要返回的数量，默认为10，最大值为100
        # @type Limit: Integer
        # @param Offset: 偏移量，默认为0。
        # @type Offset: Integer
        # @param Filters: 过滤条件。
        # <li>OnlyAffectedContainer- string - 是否必填：否 - 仅展示影响容器的漏洞true,false</li>
        # <li>OnlyAffectedNewestImage-string - 是否必填：否 - 仅展示影响最新版本镜像的漏洞true,false</li>
        # <li>Level- String - 是否必填：否 - 威胁等级，CRITICAL:严重 HIGH:高/MIDDLE:中/LOW:低</li>
        # <li>Tags- string - 是否必填：否 - 漏洞标签，POC，EXP。</li>
        # <li>CanBeFixed- string - 是否必填：否 - 是否可修复true,false。</li>
        # <li>CVEID- string - 是否必填：否 - CVE编号</li>
        # <li>ImageID- string - 是否必填：否 - 镜像ID</li>
        # <li>ImageName- String -是否必填: 否 - 镜像名称</li>
        # <li>ContainerID- string -是否必填: 否 - 容器ID</li>
        # <li>ContainerName- string -是否必填: 否 - 容器名称</li>
        # <li>ComponentName- string -是否必填: 否 - 组件名称</li>
        # <li>ComponentVersion- string -是否必填: 否 - 组件版本</li>
        # <li>Name- string -是否必填: 否 - 漏洞名称</li>
        # <li>FocusOnType - string - 是否必填：否 -关注紧急度类型 。ALL :全部，SERIOUS_LEVEL： 严重和高危 ，IS_SUGGEST： 重点关注，POC_EXP 有Poc或Exp ，NETWORK_EXP: 远程Exp</li>
        # @type Filters: Array
        # @param Order: 排序方式
        # @type Order: String
        # @param By: 排序字段
        # @type By: String

        attr_accessor :Limit, :Offset, :Filters, :Order, :By

        def initialize(limit=nil, offset=nil, filters=nil, order=nil, by=nil)
          @Limit = limit
          @Offset = offset
          @Filters = filters
          @Order = order
          @By = by
        end

        def deserialize(params)
          @Limit = params['Limit']
          @Offset = params['Offset']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              runtimefilters_tmp = RunTimeFilters.new
              runtimefilters_tmp.deserialize(i)
              @Filters << runtimefilters_tmp
            end
          end
          @Order = params['Order']
          @By = params['By']
        end
      end

      # DescribeWebVulList返回参数结构体
      class DescribeWebVulListResponse < TencentCloud::Common::AbstractModel
        # @param TotalCount: 漏洞总数
        # @type TotalCount: Integer
        # @param List: 漏洞列表
        # @type List: Array
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TotalCount, :List, :RequestId

        def initialize(totalcount=nil, list=nil, requestid=nil)
          @TotalCount = totalcount
          @List = list
          @RequestId = requestid
        end

        def deserialize(params)
          @TotalCount = params['TotalCount']
          unless params['List'].nil?
            @List = []
            params['List'].each do |i|
              vulinfo_tmp = VulInfo.new
              vulinfo_tmp.deserialize(i)
              @List << vulinfo_tmp
            end
          end
          @RequestId = params['RequestId']
        end
      end

      # 应急漏洞列表信息
      class EmergencyVulInfo < TencentCloud::Common::AbstractModel
        # @param Name: 漏洞名称
        # @type Name: String
        # @param Tags: 漏洞标签
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Tags: Array
        # @param CVSSV3Score: CVSS V3分数
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type CVSSV3Score: Float
        # @param Level: 风险等级
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Level: String
        # @param CVEID: CVE编号
        # @type CVEID: String
        # @param Category: 漏洞类型
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Category: String
        # @param SubmitTime: 漏洞披露时间
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type SubmitTime: String
        # @param LatestFoundTime: 最近发现时间
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type LatestFoundTime: String
        # @param Status: 应急漏洞风险情况：NOT_SCAN：未扫描，SCANNING：扫描中，SCANNED_NOT_RISK：已扫描，暂未风险 ，SCANNED_RISK：已扫描存在风险
        # @type Status: String
        # @param ID: 漏洞ID
        # @type ID: Integer
        # @param PocID: 漏洞PocID
        # @type PocID: String
        # @param DefenceStatus: 防御状态，NO_DEFENDED:未防御，DEFENDED:已防御
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type DefenceStatus: String
        # @param DefenceScope: 漏洞防御主机范围: MANUAL:自选主机节点，ALL:全部
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type DefenceScope: String
        # @param DefenceHostCount: 漏洞防御主机数量
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type DefenceHostCount: Integer
        # @param DefendedCount: 已防御攻击次数
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type DefendedCount: Integer

        attr_accessor :Name, :Tags, :CVSSV3Score, :Level, :CVEID, :Category, :SubmitTime, :LatestFoundTime, :Status, :ID, :PocID, :DefenceStatus, :DefenceScope, :DefenceHostCount, :DefendedCount

        def initialize(name=nil, tags=nil, cvssv3score=nil, level=nil, cveid=nil, category=nil, submittime=nil, latestfoundtime=nil, status=nil, id=nil, pocid=nil, defencestatus=nil, defencescope=nil, defencehostcount=nil, defendedcount=nil)
          @Name = name
          @Tags = tags
          @CVSSV3Score = cvssv3score
          @Level = level
          @CVEID = cveid
          @Category = category
          @SubmitTime = submittime
          @LatestFoundTime = latestfoundtime
          @Status = status
          @ID = id
          @PocID = pocid
          @DefenceStatus = defencestatus
          @DefenceScope = defencescope
          @DefenceHostCount = defencehostcount
          @DefendedCount = defendedcount
        end

        def deserialize(params)
          @Name = params['Name']
          @Tags = params['Tags']
          @CVSSV3Score = params['CVSSV3Score']
          @Level = params['Level']
          @CVEID = params['CVEID']
          @Category = params['Category']
          @SubmitTime = params['SubmitTime']
          @LatestFoundTime = params['LatestFoundTime']
          @Status = params['Status']
          @ID = params['ID']
          @PocID = params['PocID']
          @DefenceStatus = params['DefenceStatus']
          @DefenceScope = params['DefenceScope']
          @DefenceHostCount = params['DefenceHostCount']
          @DefendedCount = params['DefendedCount']
        end
      end

      # 运行时容器逃逸事件描述信息
      class EscapeEventDescription < TencentCloud::Common::AbstractModel
        # @param Description: 事件规则
        # @type Description: String
        # @param Solution: 解决方案
        # @type Solution: String
        # @param Remark: 事件备注信息
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Remark: String
        # @param OperationTime: 事件最后一次处理的时间
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type OperationTime: String

        attr_accessor :Description, :Solution, :Remark, :OperationTime

        def initialize(description=nil, solution=nil, remark=nil, operationtime=nil)
          @Description = description
          @Solution = solution
          @Remark = remark
          @OperationTime = operationtime
        end

        def deserialize(params)
          @Description = params['Description']
          @Solution = params['Solution']
          @Remark = params['Remark']
          @OperationTime = params['OperationTime']
        end
      end

      # 容器逃逸事件列表
      class EscapeEventInfo < TencentCloud::Common::AbstractModel
        # @param EventType: 事件类型
        #    ESCAPE_CGROUPS：利用cgroup机制逃逸
        #    ESCAPE_TAMPER_SENSITIVE_FILE：篡改敏感文件逃逸
        #    ESCAPE_DOCKER_API：访问Docker API接口逃逸
        #    ESCAPE_VUL_OCCURRED：逃逸漏洞利用
        #    MOUNT_SENSITIVE_PTAH：敏感路径挂载
        #    PRIVILEGE_CONTAINER_START：特权容器
        #    PRIVILEGE：程序提权逃逸
        # @type EventType: String
        # @param ContainerName: 容器名
        # @type ContainerName: String
        # @param ImageName: 镜像名
        # @type ImageName: String
        # @param Status: 状态，EVENT_UNDEAL:未处理，EVENT_DEALED:已处理，EVENT_INGNORE:忽略
        # @type Status: String
        # @param EventId: 事件记录的唯一id
        # @type EventId: String
        # @param NodeName: 节点名称
        # @type NodeName: String
        # @param PodName: pod(实例)的名字
        # @type PodName: String
        # @param FoundTime: 生成时间
        # @type FoundTime: String
        # @param EventName: 事件名字，
        # 宿主机文件访问逃逸、
        # Syscall逃逸、
        # MountNamespace逃逸、
        # 程序提权逃逸、
        # 特权容器启动逃逸、
        # 敏感路径挂载
        # @type EventName: String
        # @param ImageId: 镜像id，用于跳转
        # @type ImageId: String
        # @param ContainerId: 容器id，用于跳转
        # @type ContainerId: String
        # @param Solution: 事件解决方案
        # @type Solution: String
        # @param Description: 事件描述
        # @type Description: String
        # @param EventCount: 事件数量
        # @type EventCount: Integer
        # @param LatestFoundTime: 最近生成时间
        # @type LatestFoundTime: String
        # @param NodeIP: 节点IP
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type NodeIP: String
        # @param HostID: 主机IP
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type HostID: String
        # @param ContainerNetStatus: 网络状态
        # 未隔离  	NORMAL
        # 已隔离		ISOLATED
        # 隔离中		ISOLATING
        # 隔离失败	ISOLATE_FAILED
        # 解除隔离中  RESTORING
        # 解除隔离失败 RESTORE_FAILED
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ContainerNetStatus: String
        # @param ContainerNetSubStatus: 容器子状态
        # "AGENT_OFFLINE"       //Agent离线
        # "NODE_DESTROYED"      //节点已销毁
        # "CONTAINER_EXITED"    //容器已退出
        # "CONTAINER_DESTROYED" //容器已销毁
        # "SHARED_HOST"         // 容器与主机共享网络
        # "RESOURCE_LIMIT"      //隔离操作资源超限
        # "UNKNOW"              // 原因未知
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ContainerNetSubStatus: String
        # @param ContainerIsolateOperationSrc: 容器隔离操作来源
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ContainerIsolateOperationSrc: String
        # @param ContainerStatus: 容器状态
        # 正在运行: RUNNING
        # 暂停: PAUSED
        # 停止: STOPPED
        # 已经创建: CREATED
        # 已经销毁: DESTROYED
        # 正在重启中: RESTARTING
        # 迁移中: REMOVING
        # @type ContainerStatus: String
        # @param ClusterID: 节点所属集群ID
        # @type ClusterID: String
        # @param NodeType: 节点类型：NORMAL普通节点、SUPER超级节点
        # @type NodeType: String
        # @param PodIP: pod ip
        # @type PodIP: String
        # @param NodeUniqueID: 节点唯一id
        # @type NodeUniqueID: String
        # @param PublicIP: 节点公网ip
        # @type PublicIP: String
        # @param NodeID: 节点id
        # @type NodeID: String
        # @param HostIP: 节点内网ip
        # @type HostIP: String
        # @param ClusterName: 集群名称
        # @type ClusterName: String

        attr_accessor :EventType, :ContainerName, :ImageName, :Status, :EventId, :NodeName, :PodName, :FoundTime, :EventName, :ImageId, :ContainerId, :Solution, :Description, :EventCount, :LatestFoundTime, :NodeIP, :HostID, :ContainerNetStatus, :ContainerNetSubStatus, :ContainerIsolateOperationSrc, :ContainerStatus, :ClusterID, :NodeType, :PodIP, :NodeUniqueID, :PublicIP, :NodeID, :HostIP, :ClusterName

        def initialize(eventtype=nil, containername=nil, imagename=nil, status=nil, eventid=nil, nodename=nil, podname=nil, foundtime=nil, eventname=nil, imageid=nil, containerid=nil, solution=nil, description=nil, eventcount=nil, latestfoundtime=nil, nodeip=nil, hostid=nil, containernetstatus=nil, containernetsubstatus=nil, containerisolateoperationsrc=nil, containerstatus=nil, clusterid=nil, nodetype=nil, podip=nil, nodeuniqueid=nil, publicip=nil, nodeid=nil, hostip=nil, clustername=nil)
          @EventType = eventtype
          @ContainerName = containername
          @ImageName = imagename
          @Status = status
          @EventId = eventid
          @NodeName = nodename
          @PodName = podname
          @FoundTime = foundtime
          @EventName = eventname
          @ImageId = imageid
          @ContainerId = containerid
          @Solution = solution
          @Description = description
          @EventCount = eventcount
          @LatestFoundTime = latestfoundtime
          @NodeIP = nodeip
          @HostID = hostid
          @ContainerNetStatus = containernetstatus
          @ContainerNetSubStatus = containernetsubstatus
          @ContainerIsolateOperationSrc = containerisolateoperationsrc
          @ContainerStatus = containerstatus
          @ClusterID = clusterid
          @NodeType = nodetype
          @PodIP = podip
          @NodeUniqueID = nodeuniqueid
          @PublicIP = publicip
          @NodeID = nodeid
          @HostIP = hostip
          @ClusterName = clustername
        end

        def deserialize(params)
          @EventType = params['EventType']
          @ContainerName = params['ContainerName']
          @ImageName = params['ImageName']
          @Status = params['Status']
          @EventId = params['EventId']
          @NodeName = params['NodeName']
          @PodName = params['PodName']
          @FoundTime = params['FoundTime']
          @EventName = params['EventName']
          @ImageId = params['ImageId']
          @ContainerId = params['ContainerId']
          @Solution = params['Solution']
          @Description = params['Description']
          @EventCount = params['EventCount']
          @LatestFoundTime = params['LatestFoundTime']
          @NodeIP = params['NodeIP']
          @HostID = params['HostID']
          @ContainerNetStatus = params['ContainerNetStatus']
          @ContainerNetSubStatus = params['ContainerNetSubStatus']
          @ContainerIsolateOperationSrc = params['ContainerIsolateOperationSrc']
          @ContainerStatus = params['ContainerStatus']
          @ClusterID = params['ClusterID']
          @NodeType = params['NodeType']
          @PodIP = params['PodIP']
          @NodeUniqueID = params['NodeUniqueID']
          @PublicIP = params['PublicIP']
          @NodeID = params['NodeID']
          @HostIP = params['HostIP']
          @ClusterName = params['ClusterName']
        end
      end

      # 待处理逃逸事件趋势
      class EscapeEventTendencyInfo < TencentCloud::Common::AbstractModel
        # @param RiskContainerEventCount: 待处理风险容器事件总数
        # @type RiskContainerEventCount: Integer
        # @param ProcessPrivilegeEventCount: 待处理程序特权事件总数
        # @type ProcessPrivilegeEventCount: Integer
        # @param ContainerEscapeEventCount: 待处理容器逃逸事件总数
        # @type ContainerEscapeEventCount: Integer
        # @param Date: 日期
        # @type Date: String

        attr_accessor :RiskContainerEventCount, :ProcessPrivilegeEventCount, :ContainerEscapeEventCount, :Date

        def initialize(riskcontainereventcount=nil, processprivilegeeventcount=nil, containerescapeeventcount=nil, date=nil)
          @RiskContainerEventCount = riskcontainereventcount
          @ProcessPrivilegeEventCount = processprivilegeeventcount
          @ContainerEscapeEventCount = containerescapeeventcount
          @Date = date
        end

        def deserialize(params)
          @RiskContainerEventCount = params['RiskContainerEventCount']
          @ProcessPrivilegeEventCount = params['ProcessPrivilegeEventCount']
          @ContainerEscapeEventCount = params['ContainerEscapeEventCount']
          @Date = params['Date']
        end
      end

      # 容器逃逸扫描策略开关信息
      class EscapeRule < TencentCloud::Common::AbstractModel
        # @param Type: 规则类型
        # ESCAPE_HOST_ACESS_FILE:宿主机文件访问逃逸
        #    ESCAPE_MOUNT_NAMESPACE:MountNamespace逃逸
        #    ESCAPE_PRIVILEDGE:程序提权逃逸
        #    ESCAPE_PRIVILEDGE_CONTAINER_START:特权容器启动逃逸
        #    ESCAPE_MOUNT_SENSITIVE_PTAH:敏感路径挂载
        # ESCAPE_SYSCALL:Syscall逃逸
        # @type Type: String
        # @param Name: 规则名称
        # 宿主机文件访问逃逸、
        # Syscall逃逸、
        # MountNamespace逃逸、
        # 程序提权逃逸、
        # 特权容器启动逃逸、
        # 敏感路径挂载
        # @type Name: String
        # @param IsEnable: 是否打开：false否 ，true是
        # @type IsEnable: Boolean
        # @param Group: 规则组别。RISK_CONTAINER：风险容器，PROCESS_PRIVILEGE：程序特权，CONTAINER_ESCAPE：容器逃逸
        # @type Group: String

        attr_accessor :Type, :Name, :IsEnable, :Group

        def initialize(type=nil, name=nil, isenable=nil, group=nil)
          @Type = type
          @Name = name
          @IsEnable = isenable
          @Group = group
        end

        def deserialize(params)
          @Type = params['Type']
          @Name = params['Name']
          @IsEnable = params['IsEnable']
          @Group = params['Group']
        end
      end

      # 修改容器逃逸扫描策略开关信息
      class EscapeRuleEnabled < TencentCloud::Common::AbstractModel
        # @param Type: 规则类型
        #    ESCAPE_HOST_ACESS_FILE:宿主机文件访问逃逸
        #    ESCAPE_MOUNT_NAMESPACE:MountNamespace逃逸
        #    ESCAPE_PRIVILEDGE:程序提权逃逸
        #    ESCAPE_PRIVILEDGE_CONTAINER_START:特权容器启动逃逸
        #    ESCAPE_MOUNT_SENSITIVE_PTAH:敏感路径挂载
        #    ESCAPE_SYSCALL:Syscall逃逸
        # @type Type: String
        # @param IsEnable: 是否打开：false否 ，true是
        # @type IsEnable: Boolean

        attr_accessor :Type, :IsEnable

        def initialize(type=nil, isenable=nil)
          @Type = type
          @IsEnable = isenable
        end

        def deserialize(params)
          @Type = params['Type']
          @IsEnable = params['IsEnable']
        end
      end

      # 逃逸白名单
      class EscapeWhiteListInfo < TencentCloud::Common::AbstractModel
        # @param ImageID: 镜像ID
        # @type ImageID: String
        # @param ImageName: 镜像名称
        # @type ImageName: String
        # @param ID: 白名单记录ID
        # @type ID: Integer
        # @param HostCount: 关联主机数量
        # @type HostCount: Integer
        # @param ContainerCount: 关联容器数量
        # @type ContainerCount: Integer
        # @param EventType: 加白事件类型
        # @type EventType: Array
        # @param InsertTime: 创建时间
        # @type InsertTime: String
        # @param UpdateTime: 更新时间
        # @type UpdateTime: String
        # @param ImageSize: 镜像大小
        # @type ImageSize: Integer

        attr_accessor :ImageID, :ImageName, :ID, :HostCount, :ContainerCount, :EventType, :InsertTime, :UpdateTime, :ImageSize

        def initialize(imageid=nil, imagename=nil, id=nil, hostcount=nil, containercount=nil, eventtype=nil, inserttime=nil, updatetime=nil, imagesize=nil)
          @ImageID = imageid
          @ImageName = imagename
          @ID = id
          @HostCount = hostcount
          @ContainerCount = containercount
          @EventType = eventtype
          @InsertTime = inserttime
          @UpdateTime = updatetime
          @ImageSize = imagesize
        end

        def deserialize(params)
          @ImageID = params['ImageID']
          @ImageName = params['ImageName']
          @ID = params['ID']
          @HostCount = params['HostCount']
          @ContainerCount = params['ContainerCount']
          @EventType = params['EventType']
          @InsertTime = params['InsertTime']
          @UpdateTime = params['UpdateTime']
          @ImageSize = params['ImageSize']
        end
      end

      # 风险容器信息
      class EventEscapeImageInfo < TencentCloud::Common::AbstractModel
        # @param ImageId: 镜像id，用于跳转
        # @type ImageId: String
        # @param UniqueKey: 唯一值
        # @type UniqueKey: String
        # @param EventType: 事件类型
        #    ESCAPE_CGROUPS：利用cgroup机制逃逸
        #    ESCAPE_TAMPER_SENSITIVE_FILE：篡改敏感文件逃逸
        #    ESCAPE_DOCKER_API：访问Docker API接口逃逸
        #    ESCAPE_VUL_OCCURRED：逃逸漏洞利用
        #    MOUNT_SENSITIVE_PTAH：敏感路径挂载
        #    PRIVILEGE_CONTAINER_START：特权容器
        #    PRIVILEGE：程序提权逃逸
        # @type EventType: String
        # @param OriginEventType: 原始事件类型
        # @type OriginEventType: String
        # @param ImageName: 镜像名
        # @type ImageName: String
        # @param ContainerCount: 容器数量
        # @type ContainerCount: Integer
        # @param FoundTime: 生成时间
        # @type FoundTime: String
        # @param LatestFoundTime: 最近生成时间
        # @type LatestFoundTime: String
        # @param EventCount: 事件数量
        # @type EventCount: Integer
        # @param Status: 状态，EVENT_UNDEAL:未处理，EVENT_DEALED:已处理，EVENT_INGNORE:忽略
        # @type Status: String
        # @param Description: 风险描述
        # @type Description: String
        # @param Solution: 解决方案
        # @type Solution: String

        attr_accessor :ImageId, :UniqueKey, :EventType, :OriginEventType, :ImageName, :ContainerCount, :FoundTime, :LatestFoundTime, :EventCount, :Status, :Description, :Solution

        def initialize(imageid=nil, uniquekey=nil, eventtype=nil, origineventtype=nil, imagename=nil, containercount=nil, foundtime=nil, latestfoundtime=nil, eventcount=nil, status=nil, description=nil, solution=nil)
          @ImageId = imageid
          @UniqueKey = uniquekey
          @EventType = eventtype
          @OriginEventType = origineventtype
          @ImageName = imagename
          @ContainerCount = containercount
          @FoundTime = foundtime
          @LatestFoundTime = latestfoundtime
          @EventCount = eventcount
          @Status = status
          @Description = description
          @Solution = solution
        end

        def deserialize(params)
          @ImageId = params['ImageId']
          @UniqueKey = params['UniqueKey']
          @EventType = params['EventType']
          @OriginEventType = params['OriginEventType']
          @ImageName = params['ImageName']
          @ContainerCount = params['ContainerCount']
          @FoundTime = params['FoundTime']
          @LatestFoundTime = params['LatestFoundTime']
          @EventCount = params['EventCount']
          @Status = params['Status']
          @Description = params['Description']
          @Solution = params['Solution']
        end
      end

      # 导出任务详情
      class ExportJobInfo < TencentCloud::Common::AbstractModel
        # @param JobID: 任务ID
        # @type JobID: String
        # @param JobName: 任务名称
        # @type JobName: String
        # @param Source: 来源
        # @type Source: String
        # @param ExportStatus: 导出状态
        # @type ExportStatus: String
        # @param ExportProgress: 导出进度
        # @type ExportProgress: Integer
        # @param FailureMsg: 失败原因
        # @type FailureMsg: String
        # @param Timeout: 超时时间
        # @type Timeout: String
        # @param InsertTime: 插入时间
        # @type InsertTime: String

        attr_accessor :JobID, :JobName, :Source, :ExportStatus, :ExportProgress, :FailureMsg, :Timeout, :InsertTime

        def initialize(jobid=nil, jobname=nil, source=nil, exportstatus=nil, exportprogress=nil, failuremsg=nil, timeout=nil, inserttime=nil)
          @JobID = jobid
          @JobName = jobname
          @Source = source
          @ExportStatus = exportstatus
          @ExportProgress = exportprogress
          @FailureMsg = failuremsg
          @Timeout = timeout
          @InsertTime = inserttime
        end

        def deserialize(params)
          @JobID = params['JobID']
          @JobName = params['JobName']
          @Source = params['Source']
          @ExportStatus = params['ExportStatus']
          @ExportProgress = params['ExportProgress']
          @FailureMsg = params['FailureMsg']
          @Timeout = params['Timeout']
          @InsertTime = params['InsertTime']
        end
      end

      # ExportVirusList请求参数结构体
      class ExportVirusListRequest < TencentCloud::Common::AbstractModel
        # @param Filters: 过滤条件。
        # <li>FileName - String - 是否必填：否 - 文件名称</li>
        # <li>FilePath - String - 是否必填：否 - 文件路径</li>
        # <li>VirusName - String - 是否必填：否 - 病毒名称</li>
        # <li>ContainerName- String - 是否必填：是 - 容器名称</li>
        # <li>ContainerId- string - 是否必填：否 - 容器id</li>
        # <li>ImageName- string - 是否必填：否 - 镜像名称</li>
        # <li>ImageId- string - 是否必填：否 - 镜像id</li>
        # <li>IsRealTime- int - 是否必填：否 - 过滤是否实时监控数据</li>
        # <li>TaskId- string - 是否必填：否 - 任务ID</li>
        # <li>TimeRange - string -是否必填: 否 - 时间范围筛选 ["2022-03-31 16:55:00", "2022-03-31 17:00:00"]</li>
        # <li>ContainerNetStatus - String -是否必填: 否 -  容器网络状态筛选 NORMAL ISOLATED ISOLATING RESTORING RESTORE_FAILED</li>
        # <li>ContainerStatus - string -是否必填: 否 - 容器状态 RUNNING PAUSED STOPPED CREATED DESTROYED RESTARTING REMOVING</li>
        # <li>AutoIsolateMode - string -是否必填: 否 - 隔离方式 MANUAL AUTO</li>
        # <li>MD5 - string -是否必填: 否 - md5 </li>
        # @type Filters: Array
        # @param Order: 排序方式
        # @type Order: String
        # @param By: 排序字段
        # @type By: String
        # @param ExportField: 导出字段
        # @type ExportField: Array

        attr_accessor :Filters, :Order, :By, :ExportField

        def initialize(filters=nil, order=nil, by=nil, exportfield=nil)
          @Filters = filters
          @Order = order
          @By = by
          @ExportField = exportfield
        end

        def deserialize(params)
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              runtimefilters_tmp = RunTimeFilters.new
              runtimefilters_tmp.deserialize(i)
              @Filters << runtimefilters_tmp
            end
          end
          @Order = params['Order']
          @By = params['By']
          @ExportField = params['ExportField']
        end
      end

      # ExportVirusList返回参数结构体
      class ExportVirusListResponse < TencentCloud::Common::AbstractModel
        # @param JobId: 导出任务ID，前端拿着任务ID查询任务进度
        # @type JobId: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :JobId, :RequestId

        def initialize(jobid=nil, requestid=nil)
          @JobId = jobid
          @RequestId = requestid
        end

        def deserialize(params)
          @JobId = params['JobId']
          @RequestId = params['RequestId']
        end
      end

      # 容器安全运行时，文件属性信息
      class FileAttributeInfo < TencentCloud::Common::AbstractModel
        # @param FileName: 文件名
        # @type FileName: String
        # @param FileType: 文件类型
        # @type FileType: String
        # @param FileSize: 文件大小(字节)
        # @type FileSize: Integer
        # @param FilePath: 文件路径
        # @type FilePath: String
        # @param FileCreateTime: 文件创建时间
        # @type FileCreateTime: String
        # @param LatestTamperedFileMTime: 最近被篡改文件创建时间
        # @type LatestTamperedFileMTime: String
        # @param NewFile: 新文件内容
        # @type NewFile: String
        # @param FileDiff: 新旧文件的差异
        # @type FileDiff: String

        attr_accessor :FileName, :FileType, :FileSize, :FilePath, :FileCreateTime, :LatestTamperedFileMTime, :NewFile, :FileDiff

        def initialize(filename=nil, filetype=nil, filesize=nil, filepath=nil, filecreatetime=nil, latesttamperedfilemtime=nil, newfile=nil, filediff=nil)
          @FileName = filename
          @FileType = filetype
          @FileSize = filesize
          @FilePath = filepath
          @FileCreateTime = filecreatetime
          @LatestTamperedFileMTime = latesttamperedfilemtime
          @NewFile = newfile
          @FileDiff = filediff
        end

        def deserialize(params)
          @FileName = params['FileName']
          @FileType = params['FileType']
          @FileSize = params['FileSize']
          @FilePath = params['FilePath']
          @FileCreateTime = params['FileCreateTime']
          @LatestTamperedFileMTime = params['LatestTamperedFileMTime']
          @NewFile = params['NewFile']
          @FileDiff = params['FileDiff']
        end
      end

      # 容器安全主机列表
      class HostInfo < TencentCloud::Common::AbstractModel
        # @param HostID: 主机id
        # @type HostID: String
        # @param HostIP: 主机ip即内网ip
        # @type HostIP: String
        # @param HostName: 主机名称
        # @type HostName: String
        # @param Group: 业务组
        # @type Group: String
        # @param DockerVersion: docker 版本
        # @type DockerVersion: String
        # @param DockerFileSystemDriver: docker 文件系统类型
        # @type DockerFileSystemDriver: String
        # @param ImageCnt: 镜像个数
        # @type ImageCnt: Integer
        # @param ContainerCnt: 容器个数
        # @type ContainerCnt: Integer
        # @param Status: agent运行状态
        # @type Status: String
        # @param IsContainerd: 是否是Containerd
        # @type IsContainerd: Boolean
        # @param MachineType: 主机来源：["CVM", "ECM", "LH", "BM"]  中的之一为腾讯云服务器；["Other"]之一非腾讯云服务器；
        # @type MachineType: String
        # @param PublicIp: 外网ip
        # @type PublicIp: String
        # @param Uuid: 主机uuid
        # @type Uuid: String
        # @param InstanceID: 主机实例ID
        # @type InstanceID: String
        # @param RegionID: 地域ID
        # @type RegionID: Integer
        # @param Project: 所属项目
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Project: :class:`Tencentcloud::Tcss.v20201101.models.ProjectInfo`
        # @param Tags: 标签
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Tags: Array
        # @param ClusterID: 集群id
        # @type ClusterID: String
        # @param ClusterName: 集群名称
        # @type ClusterName: String
        # @param ClusterAccessedStatus: 集群接入状态
        # @type ClusterAccessedStatus: String
        # @param ChargeCoresCnt: 计费核数
        # @type ChargeCoresCnt: Integer
        # @param DefendStatus: 防护状态:
        # 已防护: Defended
        # 未防护: UnDefended
        # @type DefendStatus: String
        # @param CoresCnt: 核数
        # @type CoresCnt: Integer

        attr_accessor :HostID, :HostIP, :HostName, :Group, :DockerVersion, :DockerFileSystemDriver, :ImageCnt, :ContainerCnt, :Status, :IsContainerd, :MachineType, :PublicIp, :Uuid, :InstanceID, :RegionID, :Project, :Tags, :ClusterID, :ClusterName, :ClusterAccessedStatus, :ChargeCoresCnt, :DefendStatus, :CoresCnt

        def initialize(hostid=nil, hostip=nil, hostname=nil, group=nil, dockerversion=nil, dockerfilesystemdriver=nil, imagecnt=nil, containercnt=nil, status=nil, iscontainerd=nil, machinetype=nil, publicip=nil, uuid=nil, instanceid=nil, regionid=nil, project=nil, tags=nil, clusterid=nil, clustername=nil, clusteraccessedstatus=nil, chargecorescnt=nil, defendstatus=nil, corescnt=nil)
          @HostID = hostid
          @HostIP = hostip
          @HostName = hostname
          @Group = group
          @DockerVersion = dockerversion
          @DockerFileSystemDriver = dockerfilesystemdriver
          @ImageCnt = imagecnt
          @ContainerCnt = containercnt
          @Status = status
          @IsContainerd = iscontainerd
          @MachineType = machinetype
          @PublicIp = publicip
          @Uuid = uuid
          @InstanceID = instanceid
          @RegionID = regionid
          @Project = project
          @Tags = tags
          @ClusterID = clusterid
          @ClusterName = clustername
          @ClusterAccessedStatus = clusteraccessedstatus
          @ChargeCoresCnt = chargecorescnt
          @DefendStatus = defendstatus
          @CoresCnt = corescnt
        end

        def deserialize(params)
          @HostID = params['HostID']
          @HostIP = params['HostIP']
          @HostName = params['HostName']
          @Group = params['Group']
          @DockerVersion = params['DockerVersion']
          @DockerFileSystemDriver = params['DockerFileSystemDriver']
          @ImageCnt = params['ImageCnt']
          @ContainerCnt = params['ContainerCnt']
          @Status = params['Status']
          @IsContainerd = params['IsContainerd']
          @MachineType = params['MachineType']
          @PublicIp = params['PublicIp']
          @Uuid = params['Uuid']
          @InstanceID = params['InstanceID']
          @RegionID = params['RegionID']
          unless params['Project'].nil?
            @Project = ProjectInfo.new
            @Project.deserialize(params['Project'])
          end
          unless params['Tags'].nil?
            @Tags = []
            params['Tags'].each do |i|
              taginfo_tmp = TagInfo.new
              taginfo_tmp.deserialize(i)
              @Tags << taginfo_tmp
            end
          end
          @ClusterID = params['ClusterID']
          @ClusterName = params['ClusterName']
          @ClusterAccessedStatus = params['ClusterAccessedStatus']
          @ChargeCoresCnt = params['ChargeCoresCnt']
          @DefendStatus = params['DefendStatus']
          @CoresCnt = params['CoresCnt']
        end
      end

      # 镜像自动授权任务信息
      class ImageAutoAuthorizedTask < TencentCloud::Common::AbstractModel
        # @param TaskId: 任务id
        # @type TaskId: Integer
        # @param Type: 授权方式，AUTO:自动授权，MANUAL:手动授权
        # @type Type: String
        # @param AuthorizedDate: 任务日期
        # @type AuthorizedDate: String
        # @param Source: 镜像来源，LOCAL:本地镜像，REGISTRY:仓库镜像
        # @type Source: String
        # @param LastAuthorizedTime: 最近授权时间
        # @type LastAuthorizedTime: String
        # @param SuccessCount: 自动授权成功数
        # @type SuccessCount: Integer
        # @param FailCount: 自动授权失败数
        # @type FailCount: Integer
        # @param LatestFailCode: 最近任务失败码，REACH_LIMIT:达到授权上限，LICENSE_INSUFFICIENT:授权数不足
        # @type LatestFailCode: String

        attr_accessor :TaskId, :Type, :AuthorizedDate, :Source, :LastAuthorizedTime, :SuccessCount, :FailCount, :LatestFailCode

        def initialize(taskid=nil, type=nil, authorizeddate=nil, source=nil, lastauthorizedtime=nil, successcount=nil, failcount=nil, latestfailcode=nil)
          @TaskId = taskid
          @Type = type
          @AuthorizedDate = authorizeddate
          @Source = source
          @LastAuthorizedTime = lastauthorizedtime
          @SuccessCount = successcount
          @FailCount = failcount
          @LatestFailCode = latestfailcode
        end

        def deserialize(params)
          @TaskId = params['TaskId']
          @Type = params['Type']
          @AuthorizedDate = params['AuthorizedDate']
          @Source = params['Source']
          @LastAuthorizedTime = params['LastAuthorizedTime']
          @SuccessCount = params['SuccessCount']
          @FailCount = params['FailCount']
          @LatestFailCode = params['LatestFailCode']
        end
      end

      # 容器安全镜像组件信息
      class ImageComponent < TencentCloud::Common::AbstractModel
        # @param Name: 组件名称
        # @type Name: String
        # @param Version: 组件版本
        # @type Version: String
        # @param Path: 组件路径
        # @type Path: String
        # @param Type: 组件类型
        # @type Type: String
        # @param VulCount: 组件漏洞数量
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type VulCount: Integer
        # @param ImageID: 镜像ID
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ImageID: String

        attr_accessor :Name, :Version, :Path, :Type, :VulCount, :ImageID

        def initialize(name=nil, version=nil, path=nil, type=nil, vulcount=nil, imageid=nil)
          @Name = name
          @Version = version
          @Path = path
          @Type = type
          @VulCount = vulcount
          @ImageID = imageid
        end

        def deserialize(params)
          @Name = params['Name']
          @Version = params['Version']
          @Path = params['Path']
          @Type = params['Type']
          @VulCount = params['VulCount']
          @ImageID = params['ImageID']
        end
      end

      # 容器安全 主机镜像关联列表
      class ImageHost < TencentCloud::Common::AbstractModel
        # @param ImageID: 镜像id
        # @type ImageID: String
        # @param HostID: 主机id
        # @type HostID: String

        attr_accessor :ImageID, :HostID

        def initialize(imageid=nil, hostid=nil)
          @ImageID = imageid
          @HostID = hostid
        end

        def deserialize(params)
          @ImageID = params['ImageID']
          @HostID = params['HostID']
        end
      end

      # 基本镜像信息
      class ImageInfo < TencentCloud::Common::AbstractModel
        # @param InstanceName: 实例名称
        # @type InstanceName: String
        # @param Namespace: 命名空间
        # @type Namespace: String
        # @param ImageName: 镜像名称
        # @type ImageName: String
        # @param ImageTag: 镜像tag
        # @type ImageTag: String
        # @param Force: 强制扫描
        # @type Force: String
        # @param ImageDigest: 镜像id
        # @type ImageDigest: String
        # @param RegistryType: 仓库类型
        # @type RegistryType: String
        # @param ImageRepoAddress: 镜像仓库地址
        # @type ImageRepoAddress: String
        # @param InstanceId: 实例id
        # @type InstanceId: String

        attr_accessor :InstanceName, :Namespace, :ImageName, :ImageTag, :Force, :ImageDigest, :RegistryType, :ImageRepoAddress, :InstanceId

        def initialize(instancename=nil, namespace=nil, imagename=nil, imagetag=nil, force=nil, imagedigest=nil, registrytype=nil, imagerepoaddress=nil, instanceid=nil)
          @InstanceName = instancename
          @Namespace = namespace
          @ImageName = imagename
          @ImageTag = imagetag
          @Force = force
          @ImageDigest = imagedigest
          @RegistryType = registrytype
          @ImageRepoAddress = imagerepoaddress
          @InstanceId = instanceid
        end

        def deserialize(params)
          @InstanceName = params['InstanceName']
          @Namespace = params['Namespace']
          @ImageName = params['ImageName']
          @ImageTag = params['ImageTag']
          @Force = params['Force']
          @ImageDigest = params['ImageDigest']
          @RegistryType = params['RegistryType']
          @ImageRepoAddress = params['ImageRepoAddress']
          @InstanceId = params['InstanceId']
        end
      end

      # 基本镜像信息
      class ImageProgress < TencentCloud::Common::AbstractModel
        # @param ImageId: 镜像id
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ImageId: String
        # @param RegistryType: 仓库类型
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type RegistryType: String
        # @param ImageRepoAddress: 镜像仓库地址
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ImageRepoAddress: String
        # @param InstanceId: 实例id
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type InstanceId: String
        # @param InstanceName: 实例名称
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type InstanceName: String
        # @param Namespace: 命名空间
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Namespace: String
        # @param ImageName: 仓库名称
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ImageName: String
        # @param ImageTag: 镜像tag
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ImageTag: String
        # @param ScanStatus: 镜像扫描状态
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ScanStatus: String
        # @param CveProgress: 镜像cve扫描进度
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type CveProgress: Integer
        # @param RiskProgress: 镜像敏感扫描进度
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type RiskProgress: Integer
        # @param VirusProgress: 镜像木马扫描进度
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type VirusProgress: Integer

        attr_accessor :ImageId, :RegistryType, :ImageRepoAddress, :InstanceId, :InstanceName, :Namespace, :ImageName, :ImageTag, :ScanStatus, :CveProgress, :RiskProgress, :VirusProgress

        def initialize(imageid=nil, registrytype=nil, imagerepoaddress=nil, instanceid=nil, instancename=nil, namespace=nil, imagename=nil, imagetag=nil, scanstatus=nil, cveprogress=nil, riskprogress=nil, virusprogress=nil)
          @ImageId = imageid
          @RegistryType = registrytype
          @ImageRepoAddress = imagerepoaddress
          @InstanceId = instanceid
          @InstanceName = instancename
          @Namespace = namespace
          @ImageName = imagename
          @ImageTag = imagetag
          @ScanStatus = scanstatus
          @CveProgress = cveprogress
          @RiskProgress = riskprogress
          @VirusProgress = virusprogress
        end

        def deserialize(params)
          @ImageId = params['ImageId']
          @RegistryType = params['RegistryType']
          @ImageRepoAddress = params['ImageRepoAddress']
          @InstanceId = params['InstanceId']
          @InstanceName = params['InstanceName']
          @Namespace = params['Namespace']
          @ImageName = params['ImageName']
          @ImageTag = params['ImageTag']
          @ScanStatus = params['ScanStatus']
          @CveProgress = params['CveProgress']
          @RiskProgress = params['RiskProgress']
          @VirusProgress = params['VirusProgress']
        end
      end

      # 容器安全镜像仓库列表
      class ImageRepoInfo < TencentCloud::Common::AbstractModel
        # @param ImageDigest: 镜像Digest
        # @type ImageDigest: String
        # @param ImageRepoAddress: 镜像仓库地址
        # @type ImageRepoAddress: String
        # @param RegistryType: 仓库类型
        # @type RegistryType: String
        # @param ImageName: 镜像名称
        # @type ImageName: String
        # @param ImageTag: 镜像版本
        # @type ImageTag: String
        # @param ImageSize: 镜像大小
        # @type ImageSize: Integer
        # @param ScanTime: 最近扫描时间
        # @type ScanTime: String
        # @param ScanStatus: 扫描状态
        # @type ScanStatus: String
        # @param VulCnt: 安全漏洞数
        # @type VulCnt: Integer
        # @param VirusCnt: 木马病毒数
        # @type VirusCnt: Integer
        # @param RiskCnt: 风险行为数
        # @type RiskCnt: Integer
        # @param SentiveInfoCnt: 敏感信息数
        # @type SentiveInfoCnt: Integer
        # @param IsTrustImage: 是否可信镜像
        # @type IsTrustImage: Boolean
        # @param OsName: 镜像系统
        # @type OsName: String
        # @param ScanVirusError: 木马扫描错误
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ScanVirusError: String
        # @param ScanVulError: 漏洞扫描错误
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ScanVulError: String
        # @param InstanceId: 实例id
        # @type InstanceId: String
        # @param InstanceName: 实例名称
        # @type InstanceName: String
        # @param Namespace: 命名空间
        # @type Namespace: String
        # @param ScanRiskError: 高危扫描错误
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ScanRiskError: String
        # @param ScanVirusProgress: 敏感信息扫描进度
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ScanVirusProgress: Integer
        # @param ScanVulProgress: 木马扫描进度
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ScanVulProgress: Integer
        # @param ScanRiskProgress: 漏洞扫描进度
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ScanRiskProgress: Integer
        # @param ScanRemainTime: 剩余扫描时间秒
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ScanRemainTime: Integer
        # @param CveStatus: cve扫描状态
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type CveStatus: String
        # @param RiskStatus: 高危扫描状态
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type RiskStatus: String
        # @param VirusStatus: 木马扫描状态
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type VirusStatus: String
        # @param Progress: 总进度
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Progress: Integer
        # @param IsAuthorized: 授权状态
        # @type IsAuthorized: Integer
        # @param RegistryRegion: 仓库区域
        # @type RegistryRegion: String
        # @param Id: 列表id
        # @type Id: Integer
        # @param ImageId: 镜像Id
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ImageId: String
        # @param ImageCreateTime: 镜像创建的时间
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ImageCreateTime: String
        # @param IsLatestImage: 是否为镜像的最新版本
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type IsLatestImage: Boolean
        # @param LowLevelVulCnt: low级别漏洞个数
        # @type LowLevelVulCnt: Integer
        # @param MediumLevelVulCnt: medium级别漏洞个数
        # @type MediumLevelVulCnt: Integer
        # @param HighLevelVulCnt: high级别漏洞个数
        # @type HighLevelVulCnt: Integer
        # @param CriticalLevelVulCnt: critical级别漏洞个数
        # @type CriticalLevelVulCnt: Integer
        # @param ContainerCnt: 关联容器数
        # @type ContainerCnt: Integer
        # @param ComponentCnt: 组件数
        # @type ComponentCnt: Integer
        # @param IsRunning: 是否运行中
        # @type IsRunning: Boolean
        # @param HasNeedFixVul: 是否存在必修漏洞
        # @type HasNeedFixVul: Boolean
        # @param SensitiveInfoCnt: 敏感信息
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type SensitiveInfoCnt: Integer
        # @param RecommendedFix: 是否推荐处置
        # @type RecommendedFix: Boolean

        attr_accessor :ImageDigest, :ImageRepoAddress, :RegistryType, :ImageName, :ImageTag, :ImageSize, :ScanTime, :ScanStatus, :VulCnt, :VirusCnt, :RiskCnt, :SentiveInfoCnt, :IsTrustImage, :OsName, :ScanVirusError, :ScanVulError, :InstanceId, :InstanceName, :Namespace, :ScanRiskError, :ScanVirusProgress, :ScanVulProgress, :ScanRiskProgress, :ScanRemainTime, :CveStatus, :RiskStatus, :VirusStatus, :Progress, :IsAuthorized, :RegistryRegion, :Id, :ImageId, :ImageCreateTime, :IsLatestImage, :LowLevelVulCnt, :MediumLevelVulCnt, :HighLevelVulCnt, :CriticalLevelVulCnt, :ContainerCnt, :ComponentCnt, :IsRunning, :HasNeedFixVul, :SensitiveInfoCnt, :RecommendedFix
        extend Gem::Deprecate
        deprecate :SentiveInfoCnt, :none, 2024, 9
        deprecate :SentiveInfoCnt=, :none, 2024, 9

        def initialize(imagedigest=nil, imagerepoaddress=nil, registrytype=nil, imagename=nil, imagetag=nil, imagesize=nil, scantime=nil, scanstatus=nil, vulcnt=nil, viruscnt=nil, riskcnt=nil, sentiveinfocnt=nil, istrustimage=nil, osname=nil, scanviruserror=nil, scanvulerror=nil, instanceid=nil, instancename=nil, namespace=nil, scanriskerror=nil, scanvirusprogress=nil, scanvulprogress=nil, scanriskprogress=nil, scanremaintime=nil, cvestatus=nil, riskstatus=nil, virusstatus=nil, progress=nil, isauthorized=nil, registryregion=nil, id=nil, imageid=nil, imagecreatetime=nil, islatestimage=nil, lowlevelvulcnt=nil, mediumlevelvulcnt=nil, highlevelvulcnt=nil, criticallevelvulcnt=nil, containercnt=nil, componentcnt=nil, isrunning=nil, hasneedfixvul=nil, sensitiveinfocnt=nil, recommendedfix=nil)
          @ImageDigest = imagedigest
          @ImageRepoAddress = imagerepoaddress
          @RegistryType = registrytype
          @ImageName = imagename
          @ImageTag = imagetag
          @ImageSize = imagesize
          @ScanTime = scantime
          @ScanStatus = scanstatus
          @VulCnt = vulcnt
          @VirusCnt = viruscnt
          @RiskCnt = riskcnt
          @SentiveInfoCnt = sentiveinfocnt
          @IsTrustImage = istrustimage
          @OsName = osname
          @ScanVirusError = scanviruserror
          @ScanVulError = scanvulerror
          @InstanceId = instanceid
          @InstanceName = instancename
          @Namespace = namespace
          @ScanRiskError = scanriskerror
          @ScanVirusProgress = scanvirusprogress
          @ScanVulProgress = scanvulprogress
          @ScanRiskProgress = scanriskprogress
          @ScanRemainTime = scanremaintime
          @CveStatus = cvestatus
          @RiskStatus = riskstatus
          @VirusStatus = virusstatus
          @Progress = progress
          @IsAuthorized = isauthorized
          @RegistryRegion = registryregion
          @Id = id
          @ImageId = imageid
          @ImageCreateTime = imagecreatetime
          @IsLatestImage = islatestimage
          @LowLevelVulCnt = lowlevelvulcnt
          @MediumLevelVulCnt = mediumlevelvulcnt
          @HighLevelVulCnt = highlevelvulcnt
          @CriticalLevelVulCnt = criticallevelvulcnt
          @ContainerCnt = containercnt
          @ComponentCnt = componentcnt
          @IsRunning = isrunning
          @HasNeedFixVul = hasneedfixvul
          @SensitiveInfoCnt = sensitiveinfocnt
          @RecommendedFix = recommendedfix
        end

        def deserialize(params)
          @ImageDigest = params['ImageDigest']
          @ImageRepoAddress = params['ImageRepoAddress']
          @RegistryType = params['RegistryType']
          @ImageName = params['ImageName']
          @ImageTag = params['ImageTag']
          @ImageSize = params['ImageSize']
          @ScanTime = params['ScanTime']
          @ScanStatus = params['ScanStatus']
          @VulCnt = params['VulCnt']
          @VirusCnt = params['VirusCnt']
          @RiskCnt = params['RiskCnt']
          @SentiveInfoCnt = params['SentiveInfoCnt']
          @IsTrustImage = params['IsTrustImage']
          @OsName = params['OsName']
          @ScanVirusError = params['ScanVirusError']
          @ScanVulError = params['ScanVulError']
          @InstanceId = params['InstanceId']
          @InstanceName = params['InstanceName']
          @Namespace = params['Namespace']
          @ScanRiskError = params['ScanRiskError']
          @ScanVirusProgress = params['ScanVirusProgress']
          @ScanVulProgress = params['ScanVulProgress']
          @ScanRiskProgress = params['ScanRiskProgress']
          @ScanRemainTime = params['ScanRemainTime']
          @CveStatus = params['CveStatus']
          @RiskStatus = params['RiskStatus']
          @VirusStatus = params['VirusStatus']
          @Progress = params['Progress']
          @IsAuthorized = params['IsAuthorized']
          @RegistryRegion = params['RegistryRegion']
          @Id = params['Id']
          @ImageId = params['ImageId']
          @ImageCreateTime = params['ImageCreateTime']
          @IsLatestImage = params['IsLatestImage']
          @LowLevelVulCnt = params['LowLevelVulCnt']
          @MediumLevelVulCnt = params['MediumLevelVulCnt']
          @HighLevelVulCnt = params['HighLevelVulCnt']
          @CriticalLevelVulCnt = params['CriticalLevelVulCnt']
          @ContainerCnt = params['ContainerCnt']
          @ComponentCnt = params['ComponentCnt']
          @IsRunning = params['IsRunning']
          @HasNeedFixVul = params['HasNeedFixVul']
          @SensitiveInfoCnt = params['SensitiveInfoCnt']
          @RecommendedFix = params['RecommendedFix']
        end
      end

      # 容器安全镜像高危行为信息
      class ImageRisk < TencentCloud::Common::AbstractModel
        # @param Behavior: 高危行为
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Behavior: Integer
        # @param Type: 种类
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Type: Integer
        # @param Level: 风险等级
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Level: String
        # @param Desc: 描述
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Desc: String
        # @param InstructionContent: 解决方案
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type InstructionContent: String

        attr_accessor :Behavior, :Type, :Level, :Desc, :InstructionContent

        def initialize(behavior=nil, type=nil, level=nil, desc=nil, instructioncontent=nil)
          @Behavior = behavior
          @Type = type
          @Level = level
          @Desc = desc
          @InstructionContent = instructioncontent
        end

        def deserialize(params)
          @Behavior = params['Behavior']
          @Type = params['Type']
          @Level = params['Level']
          @Desc = params['Desc']
          @InstructionContent = params['InstructionContent']
        end
      end

      # 镜像风险详情
      class ImageRiskInfo < TencentCloud::Common::AbstractModel
        # @param Behavior: 行为
        # @type Behavior: Integer
        # @param Type: 类型
        # @type Type: Integer
        # @param Level: 级别
        # @type Level: Integer
        # @param Desc: 详情
        # @type Desc: String
        # @param InstructionContent: 解决方案
        # @type InstructionContent: String

        attr_accessor :Behavior, :Type, :Level, :Desc, :InstructionContent

        def initialize(behavior=nil, type=nil, level=nil, desc=nil, instructioncontent=nil)
          @Behavior = behavior
          @Type = type
          @Level = level
          @Desc = desc
          @InstructionContent = instructioncontent
        end

        def deserialize(params)
          @Behavior = params['Behavior']
          @Type = params['Type']
          @Level = params['Level']
          @Desc = params['Desc']
          @InstructionContent = params['InstructionContent']
        end
      end

      # 运行时安全事件趋势信息
      class ImageRiskTendencyInfo < TencentCloud::Common::AbstractModel
        # @param ImageRiskSet: 趋势列表
        # @type ImageRiskSet: Array
        # @param ImageRiskType: 风险类型：
        # IRT_VULNERABILITY : 安全漏洞
        # IRT_MALWARE_VIRUS: 木马病毒
        # IRT_RISK:敏感信息
        # @type ImageRiskType: String

        attr_accessor :ImageRiskSet, :ImageRiskType

        def initialize(imageriskset=nil, imagerisktype=nil)
          @ImageRiskSet = imageriskset
          @ImageRiskType = imagerisktype
        end

        def deserialize(params)
          unless params['ImageRiskSet'].nil?
            @ImageRiskSet = []
            params['ImageRiskSet'].each do |i|
              runtimetendencyinfo_tmp = RunTimeTendencyInfo.new
              runtimetendencyinfo_tmp.deserialize(i)
              @ImageRiskSet << runtimetendencyinfo_tmp
            end
          end
          @ImageRiskType = params['ImageRiskType']
        end
      end

      # 镜像扫描计费信息
      class ImageScanInquireInfo < TencentCloud::Common::AbstractModel
        # @param InquireKey: 计费项
        # @type InquireKey: String
        # @param Capcity: 容量
        # @type Capcity: Integer
        # @param Useage: 已使用量
        # @type Useage: Integer
        # @param StartTime: 起始时间
        # @type StartTime: String
        # @param EndTime: 截止时间
        # @type EndTime: String
        # @param PurchaseStatus: 计费状态
        # (Pending:待购)
        # (Normal:正常)
        # (Isolate:隔离)
        # @type PurchaseStatus: String
        # @param ResourceID: 资源ID
        # @type ResourceID: String

        attr_accessor :InquireKey, :Capcity, :Useage, :StartTime, :EndTime, :PurchaseStatus, :ResourceID

        def initialize(inquirekey=nil, capcity=nil, useage=nil, starttime=nil, endtime=nil, purchasestatus=nil, resourceid=nil)
          @InquireKey = inquirekey
          @Capcity = capcity
          @Useage = useage
          @StartTime = starttime
          @EndTime = endtime
          @PurchaseStatus = purchasestatus
          @ResourceID = resourceid
        end

        def deserialize(params)
          @InquireKey = params['InquireKey']
          @Capcity = params['Capcity']
          @Useage = params['Useage']
          @StartTime = params['StartTime']
          @EndTime = params['EndTime']
          @PurchaseStatus = params['PurchaseStatus']
          @ResourceID = params['ResourceID']
        end
      end

      # 镜像列表
      class ImageSimpleInfo < TencentCloud::Common::AbstractModel
        # @param ImageID: 镜像id
        # @type ImageID: String
        # @param ImageName: 镜像名称
        # @type ImageName: String
        # @param Size: 镜像大小
        # @type Size: Integer
        # @param ImageType: 类型
        # @type ImageType: String
        # @param ContainerCnt: 关联容器数
        # @type ContainerCnt: Integer

        attr_accessor :ImageID, :ImageName, :Size, :ImageType, :ContainerCnt

        def initialize(imageid=nil, imagename=nil, size=nil, imagetype=nil, containercnt=nil)
          @ImageID = imageid
          @ImageName = imagename
          @Size = size
          @ImageType = imagetype
          @ContainerCnt = containercnt
        end

        def deserialize(params)
          @ImageID = params['ImageID']
          @ImageName = params['ImageName']
          @Size = params['Size']
          @ImageType = params['ImageType']
          @ContainerCnt = params['ContainerCnt']
        end
      end

      # 容器安全镜像病毒信息
      class ImageVirus < TencentCloud::Common::AbstractModel
        # @param Path: 路径
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Path: String
        # @param RiskLevel: 风险等级
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type RiskLevel: String
        # @param Category: 分类
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Category: String
        # @param VirusName: 病毒名称
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type VirusName: String
        # @param Tags: 标签
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Tags: Array
        # @param Desc: 描述
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Desc: String
        # @param Solution: 解决方案
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Solution: String
        # @param FileType: 文件类型
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type FileType: String
        # @param FileName: 文件路径
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type FileName: String
        # @param FileMd5: 文件md5
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type FileMd5: String
        # @param FileSize: 大小
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type FileSize: Integer
        # @param FirstScanTime: 首次发现时间
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type FirstScanTime: String
        # @param LatestScanTime: 最近扫描时间
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type LatestScanTime: String

        attr_accessor :Path, :RiskLevel, :Category, :VirusName, :Tags, :Desc, :Solution, :FileType, :FileName, :FileMd5, :FileSize, :FirstScanTime, :LatestScanTime

        def initialize(path=nil, risklevel=nil, category=nil, virusname=nil, tags=nil, desc=nil, solution=nil, filetype=nil, filename=nil, filemd5=nil, filesize=nil, firstscantime=nil, latestscantime=nil)
          @Path = path
          @RiskLevel = risklevel
          @Category = category
          @VirusName = virusname
          @Tags = tags
          @Desc = desc
          @Solution = solution
          @FileType = filetype
          @FileName = filename
          @FileMd5 = filemd5
          @FileSize = filesize
          @FirstScanTime = firstscantime
          @LatestScanTime = latestscantime
        end

        def deserialize(params)
          @Path = params['Path']
          @RiskLevel = params['RiskLevel']
          @Category = params['Category']
          @VirusName = params['VirusName']
          @Tags = params['Tags']
          @Desc = params['Desc']
          @Solution = params['Solution']
          @FileType = params['FileType']
          @FileName = params['FileName']
          @FileMd5 = params['FileMd5']
          @FileSize = params['FileSize']
          @FirstScanTime = params['FirstScanTime']
          @LatestScanTime = params['LatestScanTime']
        end
      end

      # 容器安全镜像病毒信息
      class ImageVirusInfo < TencentCloud::Common::AbstractModel
        # @param Path: 路径
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Path: String
        # @param RiskLevel: 风险等级
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type RiskLevel: Integer
        # @param VirusName: 病毒名称
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type VirusName: String
        # @param Tags: 标签
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Tags: Array
        # @param Desc: 描述
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Desc: String
        # @param Solution: 修护建议
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Solution: String
        # @param Size: 大小
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Size: Integer
        # @param FirstScanTime: 首次发现时间
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type FirstScanTime: String
        # @param LatestScanTime: 最近扫描时间
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type LatestScanTime: String
        # @param Md5: 文件md5
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Md5: String
        # @param FileName: 文件名称
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type FileName: String
        # @param CheckPlatform: 检测平台
        # 1: 云查杀引擎
        # 2: tav
        # 3: binaryAi
        # 4: 异常行为
        # 5: 威胁情报
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type CheckPlatform: Array

        attr_accessor :Path, :RiskLevel, :VirusName, :Tags, :Desc, :Solution, :Size, :FirstScanTime, :LatestScanTime, :Md5, :FileName, :CheckPlatform

        def initialize(path=nil, risklevel=nil, virusname=nil, tags=nil, desc=nil, solution=nil, size=nil, firstscantime=nil, latestscantime=nil, md5=nil, filename=nil, checkplatform=nil)
          @Path = path
          @RiskLevel = risklevel
          @VirusName = virusname
          @Tags = tags
          @Desc = desc
          @Solution = solution
          @Size = size
          @FirstScanTime = firstscantime
          @LatestScanTime = latestscantime
          @Md5 = md5
          @FileName = filename
          @CheckPlatform = checkplatform
        end

        def deserialize(params)
          @Path = params['Path']
          @RiskLevel = params['RiskLevel']
          @VirusName = params['VirusName']
          @Tags = params['Tags']
          @Desc = params['Desc']
          @Solution = params['Solution']
          @Size = params['Size']
          @FirstScanTime = params['FirstScanTime']
          @LatestScanTime = params['LatestScanTime']
          @Md5 = params['Md5']
          @FileName = params['FileName']
          @CheckPlatform = params['CheckPlatform']
        end
      end

      # 容器安全镜像漏洞信息
      class ImageVul < TencentCloud::Common::AbstractModel
        # @param CVEID: 漏洞id
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type CVEID: String
        # @param POCID: 观点验证程序id
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type POCID: String
        # @param Name: 漏洞名称
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Name: String
        # @param Components: 涉及组件信息
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Components: Array
        # @param Category: 分类
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Category: String
        # @param CategoryType: 分类2
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type CategoryType: String
        # @param Level: 风险等级
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Level: String
        # @param Des: 描述
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Des: String
        # @param OfficialSolution: 解决方案
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type OfficialSolution: String
        # @param Reference: 引用
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Reference: String
        # @param DefenseSolution: 防御方案
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type DefenseSolution: String
        # @param SubmitTime: 提交时间
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type SubmitTime: String
        # @param CvssScore: Cvss分数
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type CvssScore: String
        # @param CvssVector: Cvss信息
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type CvssVector: String
        # @param IsSuggest: 是否建议修复
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type IsSuggest: String
        # @param FixedVersions: 修复版本号
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type FixedVersions: String
        # @param Tag: 漏洞标签:"CanBeFixed","DynamicLevelPoc","DynamicLevelExp"
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Tag: Array
        # @param Component: 组件名
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Component: String
        # @param Version: 组件版本
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Version: String
        # @param AttackLevel: 攻击热度 0-3
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type AttackLevel: Integer
        # @param LayerInfos: 镜像层信息列表
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type LayerInfos: Array

        attr_accessor :CVEID, :POCID, :Name, :Components, :Category, :CategoryType, :Level, :Des, :OfficialSolution, :Reference, :DefenseSolution, :SubmitTime, :CvssScore, :CvssVector, :IsSuggest, :FixedVersions, :Tag, :Component, :Version, :AttackLevel, :LayerInfos

        def initialize(cveid=nil, pocid=nil, name=nil, components=nil, category=nil, categorytype=nil, level=nil, des=nil, officialsolution=nil, reference=nil, defensesolution=nil, submittime=nil, cvssscore=nil, cvssvector=nil, issuggest=nil, fixedversions=nil, tag=nil, component=nil, version=nil, attacklevel=nil, layerinfos=nil)
          @CVEID = cveid
          @POCID = pocid
          @Name = name
          @Components = components
          @Category = category
          @CategoryType = categorytype
          @Level = level
          @Des = des
          @OfficialSolution = officialsolution
          @Reference = reference
          @DefenseSolution = defensesolution
          @SubmitTime = submittime
          @CvssScore = cvssscore
          @CvssVector = cvssvector
          @IsSuggest = issuggest
          @FixedVersions = fixedversions
          @Tag = tag
          @Component = component
          @Version = version
          @AttackLevel = attacklevel
          @LayerInfos = layerinfos
        end

        def deserialize(params)
          @CVEID = params['CVEID']
          @POCID = params['POCID']
          @Name = params['Name']
          unless params['Components'].nil?
            @Components = []
            params['Components'].each do |i|
              componentsinfo_tmp = ComponentsInfo.new
              componentsinfo_tmp.deserialize(i)
              @Components << componentsinfo_tmp
            end
          end
          @Category = params['Category']
          @CategoryType = params['CategoryType']
          @Level = params['Level']
          @Des = params['Des']
          @OfficialSolution = params['OfficialSolution']
          @Reference = params['Reference']
          @DefenseSolution = params['DefenseSolution']
          @SubmitTime = params['SubmitTime']
          @CvssScore = params['CvssScore']
          @CvssVector = params['CvssVector']
          @IsSuggest = params['IsSuggest']
          @FixedVersions = params['FixedVersions']
          @Tag = params['Tag']
          @Component = params['Component']
          @Version = params['Version']
          @AttackLevel = params['AttackLevel']
          unless params['LayerInfos'].nil?
            @LayerInfos = []
            params['LayerInfos'].each do |i|
              imagevullayerinfo_tmp = ImageVulLayerInfo.new
              imagevullayerinfo_tmp.deserialize(i)
              @LayerInfos << imagevullayerinfo_tmp
            end
          end
        end
      end

      # 漏洞列表中的层信息
      class ImageVulLayerInfo < TencentCloud::Common::AbstractModel
        # @param LayerId: 层id
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type LayerId: String
        # @param LayerCmd: 层cmd
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type LayerCmd: String

        attr_accessor :LayerId, :LayerCmd

        def initialize(layerid=nil, layercmd=nil)
          @LayerId = layerid
          @LayerCmd = layercmd
        end

        def deserialize(params)
          @LayerId = params['LayerId']
          @LayerCmd = params['LayerCmd']
        end
      end

      # 查询镜像绑定的运行时规则信息
      class ImagesBindRuleInfo < TencentCloud::Common::AbstractModel
        # @param ImageId: 镜像id
        # @type ImageId: String
        # @param ImageName: 镜像名称
        # @type ImageName: String
        # @param ContainerCnt: 关联容器数量
        # @type ContainerCnt: Integer
        # @param RuleId: 绑定规则id
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type RuleId: String
        # @param RuleName: 规则名字
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type RuleName: String
        # @param ImageSize: 镜像大小
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ImageSize: Integer
        # @param ScanTime: 最近扫描时间
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ScanTime: String

        attr_accessor :ImageId, :ImageName, :ContainerCnt, :RuleId, :RuleName, :ImageSize, :ScanTime

        def initialize(imageid=nil, imagename=nil, containercnt=nil, ruleid=nil, rulename=nil, imagesize=nil, scantime=nil)
          @ImageId = imageid
          @ImageName = imagename
          @ContainerCnt = containercnt
          @RuleId = ruleid
          @RuleName = rulename
          @ImageSize = imagesize
          @ScanTime = scantime
        end

        def deserialize(params)
          @ImageId = params['ImageId']
          @ImageName = params['ImageName']
          @ContainerCnt = params['ContainerCnt']
          @RuleId = params['RuleId']
          @RuleName = params['RuleName']
          @ImageSize = params['ImageSize']
          @ScanTime = params['ScanTime']
        end
      end

      # 容器安全镜像列表
      class ImagesInfo < TencentCloud::Common::AbstractModel
        # @param ImageID: 镜像id
        # @type ImageID: String
        # @param ImageName: 镜像名称
        # @type ImageName: String
        # @param CreateTime: 创建时间
        # @type CreateTime: String
        # @param Size: 镜像大小
        # @type Size: Integer
        # @param HostCnt: 主机个数
        # @type HostCnt: Integer
        # @param ContainerCnt: 容器个数
        # @type ContainerCnt: Integer
        # @param ScanTime: 扫描时间
        # @type ScanTime: String
        # @param VulCnt: 漏洞个数
        # @type VulCnt: Integer
        # @param VirusCnt: 病毒个数
        # @type VirusCnt: Integer
        # @param RiskCnt: 敏感信息个数
        # @type RiskCnt: Integer
        # @param IsTrustImage: 是否信任镜像
        # @type IsTrustImage: Boolean
        # @param OsName: 镜像系统
        # @type OsName: String
        # @param AgentError: agent镜像扫描错误
        # @type AgentError: String
        # @param ScanError: 后端镜像扫描错误
        # @type ScanError: String
        # @param ScanStatus: 扫描状态
        # @type ScanStatus: String
        # @param ScanVirusError: 木马扫描错误信息
        # @type ScanVirusError: String
        # @param ScanVulError: 漏洞扫描错误信息
        # @type ScanVulError: String
        # @param ScanRiskError: 风险扫描错误信息
        # @type ScanRiskError: String
        # @param IsSuggest: 是否是重点关注镜像，为0不是，非0是
        # @type IsSuggest: Integer
        # @param IsAuthorized: 是否授权，1是0否
        # @type IsAuthorized: Integer
        # @param ComponentCnt: 组件个数
        # @type ComponentCnt: Integer
        # @param CriticalLevelVulCnt: 严重漏洞数
        # @type CriticalLevelVulCnt: Integer
        # @param HighLevelVulCnt: 高危漏洞数
        # @type HighLevelVulCnt: Integer
        # @param MediumLevelVulCnt: 中危漏洞数
        # @type MediumLevelVulCnt: Integer
        # @param LowLevelVulCnt: 低危漏洞数
        # @type LowLevelVulCnt: Integer
        # @param IsLatestImage: 是否最新版本镜像
        # @type IsLatestImage: Boolean
        # @param RecommendedFix: 是否推荐处置
        # @type RecommendedFix: Boolean

        attr_accessor :ImageID, :ImageName, :CreateTime, :Size, :HostCnt, :ContainerCnt, :ScanTime, :VulCnt, :VirusCnt, :RiskCnt, :IsTrustImage, :OsName, :AgentError, :ScanError, :ScanStatus, :ScanVirusError, :ScanVulError, :ScanRiskError, :IsSuggest, :IsAuthorized, :ComponentCnt, :CriticalLevelVulCnt, :HighLevelVulCnt, :MediumLevelVulCnt, :LowLevelVulCnt, :IsLatestImage, :RecommendedFix

        def initialize(imageid=nil, imagename=nil, createtime=nil, size=nil, hostcnt=nil, containercnt=nil, scantime=nil, vulcnt=nil, viruscnt=nil, riskcnt=nil, istrustimage=nil, osname=nil, agenterror=nil, scanerror=nil, scanstatus=nil, scanviruserror=nil, scanvulerror=nil, scanriskerror=nil, issuggest=nil, isauthorized=nil, componentcnt=nil, criticallevelvulcnt=nil, highlevelvulcnt=nil, mediumlevelvulcnt=nil, lowlevelvulcnt=nil, islatestimage=nil, recommendedfix=nil)
          @ImageID = imageid
          @ImageName = imagename
          @CreateTime = createtime
          @Size = size
          @HostCnt = hostcnt
          @ContainerCnt = containercnt
          @ScanTime = scantime
          @VulCnt = vulcnt
          @VirusCnt = viruscnt
          @RiskCnt = riskcnt
          @IsTrustImage = istrustimage
          @OsName = osname
          @AgentError = agenterror
          @ScanError = scanerror
          @ScanStatus = scanstatus
          @ScanVirusError = scanviruserror
          @ScanVulError = scanvulerror
          @ScanRiskError = scanriskerror
          @IsSuggest = issuggest
          @IsAuthorized = isauthorized
          @ComponentCnt = componentcnt
          @CriticalLevelVulCnt = criticallevelvulcnt
          @HighLevelVulCnt = highlevelvulcnt
          @MediumLevelVulCnt = mediumlevelvulcnt
          @LowLevelVulCnt = lowlevelvulcnt
          @IsLatestImage = islatestimage
          @RecommendedFix = recommendedfix
        end

        def deserialize(params)
          @ImageID = params['ImageID']
          @ImageName = params['ImageName']
          @CreateTime = params['CreateTime']
          @Size = params['Size']
          @HostCnt = params['HostCnt']
          @ContainerCnt = params['ContainerCnt']
          @ScanTime = params['ScanTime']
          @VulCnt = params['VulCnt']
          @VirusCnt = params['VirusCnt']
          @RiskCnt = params['RiskCnt']
          @IsTrustImage = params['IsTrustImage']
          @OsName = params['OsName']
          @AgentError = params['AgentError']
          @ScanError = params['ScanError']
          @ScanStatus = params['ScanStatus']
          @ScanVirusError = params['ScanVirusError']
          @ScanVulError = params['ScanVulError']
          @ScanRiskError = params['ScanRiskError']
          @IsSuggest = params['IsSuggest']
          @IsAuthorized = params['IsAuthorized']
          @ComponentCnt = params['ComponentCnt']
          @CriticalLevelVulCnt = params['CriticalLevelVulCnt']
          @HighLevelVulCnt = params['HighLevelVulCnt']
          @MediumLevelVulCnt = params['MediumLevelVulCnt']
          @LowLevelVulCnt = params['LowLevelVulCnt']
          @IsLatestImage = params['IsLatestImage']
          @RecommendedFix = params['RecommendedFix']
        end
      end

      # 容器安全镜像漏洞
      class ImagesVul < TencentCloud::Common::AbstractModel
        # @param CVEID: 漏洞id
        # @type CVEID: String
        # @param Name: 漏洞名称
        # @type Name: String
        # @param Component: 组件
        # @type Component: String
        # @param Version: 版本
        # @type Version: String
        # @param Category: 分类
        # @type Category: String
        # @param CategoryType: 分类2
        # @type CategoryType: String
        # @param Level: 风险等级
        # @type Level: Integer
        # @param Des: 描述
        # @type Des: String
        # @param OfficialSolution: 解决方案
        # @type OfficialSolution: String
        # @param Reference: 引用
        # @type Reference: String
        # @param DefenseSolution: 防御方案
        # @type DefenseSolution: String
        # @param SubmitTime: 提交时间
        # @type SubmitTime: String
        # @param CVSSV3Score: CVSS V3分数
        # @type CVSSV3Score: Float
        # @param CVSSV3Desc: CVSS V3描述
        # @type CVSSV3Desc: String
        # @param IsSuggest: 是否是重点关注：true：是，false：不是
        # @type IsSuggest: Boolean
        # @param FixedVersions: 修复版本号
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type FixedVersions: String
        # @param Tag: 漏洞标签:"CanBeFixed","DynamicLevelPoc","DynamicLevelExp"
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Tag: Array
        # @param AttackLevel: 攻击热度
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type AttackLevel: Integer

        attr_accessor :CVEID, :Name, :Component, :Version, :Category, :CategoryType, :Level, :Des, :OfficialSolution, :Reference, :DefenseSolution, :SubmitTime, :CVSSV3Score, :CVSSV3Desc, :IsSuggest, :FixedVersions, :Tag, :AttackLevel

        def initialize(cveid=nil, name=nil, component=nil, version=nil, category=nil, categorytype=nil, level=nil, des=nil, officialsolution=nil, reference=nil, defensesolution=nil, submittime=nil, cvssv3score=nil, cvssv3desc=nil, issuggest=nil, fixedversions=nil, tag=nil, attacklevel=nil)
          @CVEID = cveid
          @Name = name
          @Component = component
          @Version = version
          @Category = category
          @CategoryType = categorytype
          @Level = level
          @Des = des
          @OfficialSolution = officialsolution
          @Reference = reference
          @DefenseSolution = defensesolution
          @SubmitTime = submittime
          @CVSSV3Score = cvssv3score
          @CVSSV3Desc = cvssv3desc
          @IsSuggest = issuggest
          @FixedVersions = fixedversions
          @Tag = tag
          @AttackLevel = attacklevel
        end

        def deserialize(params)
          @CVEID = params['CVEID']
          @Name = params['Name']
          @Component = params['Component']
          @Version = params['Version']
          @Category = params['Category']
          @CategoryType = params['CategoryType']
          @Level = params['Level']
          @Des = params['Des']
          @OfficialSolution = params['OfficialSolution']
          @Reference = params['Reference']
          @DefenseSolution = params['DefenseSolution']
          @SubmitTime = params['SubmitTime']
          @CVSSV3Score = params['CVSSV3Score']
          @CVSSV3Desc = params['CVSSV3Desc']
          @IsSuggest = params['IsSuggest']
          @FixedVersions = params['FixedVersions']
          @Tag = params['Tag']
          @AttackLevel = params['AttackLevel']
        end
      end

      # InitializeUserComplianceEnvironment请求参数结构体
      class InitializeUserComplianceEnvironmentRequest < TencentCloud::Common::AbstractModel


        def initialize()
        end

        def deserialize(params)
        end
      end

      # InitializeUserComplianceEnvironment返回参数结构体
      class InitializeUserComplianceEnvironmentResponse < TencentCloud::Common::AbstractModel
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RequestId

        def initialize(requestid=nil)
          @RequestId = requestid
        end

        def deserialize(params)
          @RequestId = params['RequestId']
        end
      end

      # k8sApi异常事件详情
      class K8sApiAbnormalEventInfo < TencentCloud::Common::AbstractModel
        # @param MatchRuleName: 命中规则名称
        # @type MatchRuleName: String
        # @param MatchRuleType: 命中规则类型
        # @type MatchRuleType: String
        # @param RiskLevel: 告警等级
        # @type RiskLevel: String
        # @param ClusterID: 集群ID
        # @type ClusterID: String
        # @param ClusterName: 集群名称
        # @type ClusterName: String
        # @param ClusterRunningStatus: 集群运行状态
        # @type ClusterRunningStatus: String
        # @param FirstCreateTime: 初次生成时间
        # @type FirstCreateTime: String
        # @param LastCreateTime: 最近一次生成时间
        # @type LastCreateTime: String
        # @param AlarmCount: 告警数量
        # @type AlarmCount: Integer
        # @param Status: 状态
        # "EVENT_UNDEAL":未处理
        # "EVENT_DEALED": 已处理
        # "EVENT_IGNORE": 忽略
        # "EVENT_DEL": 删除
        # "EVENT_ADD_WHITE": 加白
        # @type Status: String
        # @param ClusterMasterIP: 集群masterIP
        # @type ClusterMasterIP: String
        # @param K8sVersion: k8s版本
        # @type K8sVersion: String
        # @param RunningComponent: 运行时组件
        # @type RunningComponent: Array
        # @param Desc: 描述
        # @type Desc: String
        # @param Suggestion: 建议
        # @type Suggestion: String
        # @param Info: 请求信息
        # @type Info: String
        # @param MatchRuleID: 规则ID
        # @type MatchRuleID: String
        # @param HighLightFields: 高亮字段数组
        # @type HighLightFields: Array
        # @param MatchRule: 命中规则
        # @type MatchRule: :class:`Tencentcloud::Tcss.v20201101.models.K8sApiAbnormalRuleScopeInfo`

        attr_accessor :MatchRuleName, :MatchRuleType, :RiskLevel, :ClusterID, :ClusterName, :ClusterRunningStatus, :FirstCreateTime, :LastCreateTime, :AlarmCount, :Status, :ClusterMasterIP, :K8sVersion, :RunningComponent, :Desc, :Suggestion, :Info, :MatchRuleID, :HighLightFields, :MatchRule

        def initialize(matchrulename=nil, matchruletype=nil, risklevel=nil, clusterid=nil, clustername=nil, clusterrunningstatus=nil, firstcreatetime=nil, lastcreatetime=nil, alarmcount=nil, status=nil, clustermasterip=nil, k8sversion=nil, runningcomponent=nil, desc=nil, suggestion=nil, info=nil, matchruleid=nil, highlightfields=nil, matchrule=nil)
          @MatchRuleName = matchrulename
          @MatchRuleType = matchruletype
          @RiskLevel = risklevel
          @ClusterID = clusterid
          @ClusterName = clustername
          @ClusterRunningStatus = clusterrunningstatus
          @FirstCreateTime = firstcreatetime
          @LastCreateTime = lastcreatetime
          @AlarmCount = alarmcount
          @Status = status
          @ClusterMasterIP = clustermasterip
          @K8sVersion = k8sversion
          @RunningComponent = runningcomponent
          @Desc = desc
          @Suggestion = suggestion
          @Info = info
          @MatchRuleID = matchruleid
          @HighLightFields = highlightfields
          @MatchRule = matchrule
        end

        def deserialize(params)
          @MatchRuleName = params['MatchRuleName']
          @MatchRuleType = params['MatchRuleType']
          @RiskLevel = params['RiskLevel']
          @ClusterID = params['ClusterID']
          @ClusterName = params['ClusterName']
          @ClusterRunningStatus = params['ClusterRunningStatus']
          @FirstCreateTime = params['FirstCreateTime']
          @LastCreateTime = params['LastCreateTime']
          @AlarmCount = params['AlarmCount']
          @Status = params['Status']
          @ClusterMasterIP = params['ClusterMasterIP']
          @K8sVersion = params['K8sVersion']
          @RunningComponent = params['RunningComponent']
          @Desc = params['Desc']
          @Suggestion = params['Suggestion']
          @Info = params['Info']
          @MatchRuleID = params['MatchRuleID']
          @HighLightFields = params['HighLightFields']
          unless params['MatchRule'].nil?
            @MatchRule = K8sApiAbnormalRuleScopeInfo.new
            @MatchRule.deserialize(params['MatchRule'])
          end
        end
      end

      # k8sapi异常事件列表Item
      class K8sApiAbnormalEventListItem < TencentCloud::Common::AbstractModel
        # @param ID: 事件ID
        # @type ID: Integer
        # @param MatchRuleType: 命中规则类型
        # @type MatchRuleType: String
        # @param RiskLevel: 威胁等级
        # @type RiskLevel: String
        # @param ClusterID: 集群ID
        # @type ClusterID: String
        # @param ClusterName: 集群名称
        # @type ClusterName: String
        # @param ClusterRunningStatus: 集群运行状态
        # @type ClusterRunningStatus: String
        # @param FirstCreateTime: 初次生成时间
        # @type FirstCreateTime: String
        # @param LastCreateTime: 最近一次生成时间
        # @type LastCreateTime: String
        # @param AlarmCount: 告警数量
        # @type AlarmCount: Integer
        # @param Status: 状态
        # @type Status: String
        # @param RuleType: 规则类型
        # @type RuleType: String
        # @param Desc: 描述信息
        # @type Desc: String
        # @param Suggestion: 解决方案
        # @type Suggestion: String
        # @param RuleName: 规则名称
        # @type RuleName: String
        # @param MatchRule: 命中规则
        # @type MatchRule: :class:`Tencentcloud::Tcss.v20201101.models.K8sApiAbnormalRuleScopeInfo`

        attr_accessor :ID, :MatchRuleType, :RiskLevel, :ClusterID, :ClusterName, :ClusterRunningStatus, :FirstCreateTime, :LastCreateTime, :AlarmCount, :Status, :RuleType, :Desc, :Suggestion, :RuleName, :MatchRule

        def initialize(id=nil, matchruletype=nil, risklevel=nil, clusterid=nil, clustername=nil, clusterrunningstatus=nil, firstcreatetime=nil, lastcreatetime=nil, alarmcount=nil, status=nil, ruletype=nil, desc=nil, suggestion=nil, rulename=nil, matchrule=nil)
          @ID = id
          @MatchRuleType = matchruletype
          @RiskLevel = risklevel
          @ClusterID = clusterid
          @ClusterName = clustername
          @ClusterRunningStatus = clusterrunningstatus
          @FirstCreateTime = firstcreatetime
          @LastCreateTime = lastcreatetime
          @AlarmCount = alarmcount
          @Status = status
          @RuleType = ruletype
          @Desc = desc
          @Suggestion = suggestion
          @RuleName = rulename
          @MatchRule = matchrule
        end

        def deserialize(params)
          @ID = params['ID']
          @MatchRuleType = params['MatchRuleType']
          @RiskLevel = params['RiskLevel']
          @ClusterID = params['ClusterID']
          @ClusterName = params['ClusterName']
          @ClusterRunningStatus = params['ClusterRunningStatus']
          @FirstCreateTime = params['FirstCreateTime']
          @LastCreateTime = params['LastCreateTime']
          @AlarmCount = params['AlarmCount']
          @Status = params['Status']
          @RuleType = params['RuleType']
          @Desc = params['Desc']
          @Suggestion = params['Suggestion']
          @RuleName = params['RuleName']
          unless params['MatchRule'].nil?
            @MatchRule = K8sApiAbnormalRuleScopeInfo.new
            @MatchRule.deserialize(params['MatchRule'])
          end
        end
      end

      # k8a api 异常请求规则详情
      class K8sApiAbnormalRuleInfo < TencentCloud::Common::AbstractModel
        # @param RuleName: 规则名称
        # @type RuleName: String
        # @param Status: 状态
        # @type Status: Boolean
        # @param RuleInfoList: 规则信息列表
        # @type RuleInfoList: Array
        # @param EffectClusterIDSet: 生效集群IDSet
        # @type EffectClusterIDSet: Array
        # @param RuleType: 规则类型
        # RT_SYSTEM 系统规则
        # RT_USER 用户自定义
        # @type RuleType: String
        # @param EffectAllCluster: 是否所有集群生效
        # @type EffectAllCluster: Boolean
        # @param RuleID: 规则ID
        # @type RuleID: String

        attr_accessor :RuleName, :Status, :RuleInfoList, :EffectClusterIDSet, :RuleType, :EffectAllCluster, :RuleID

        def initialize(rulename=nil, status=nil, ruleinfolist=nil, effectclusteridset=nil, ruletype=nil, effectallcluster=nil, ruleid=nil)
          @RuleName = rulename
          @Status = status
          @RuleInfoList = ruleinfolist
          @EffectClusterIDSet = effectclusteridset
          @RuleType = ruletype
          @EffectAllCluster = effectallcluster
          @RuleID = ruleid
        end

        def deserialize(params)
          @RuleName = params['RuleName']
          @Status = params['Status']
          unless params['RuleInfoList'].nil?
            @RuleInfoList = []
            params['RuleInfoList'].each do |i|
              k8sapiabnormalrulescopeinfo_tmp = K8sApiAbnormalRuleScopeInfo.new
              k8sapiabnormalrulescopeinfo_tmp.deserialize(i)
              @RuleInfoList << k8sapiabnormalrulescopeinfo_tmp
            end
          end
          @EffectClusterIDSet = params['EffectClusterIDSet']
          @RuleType = params['RuleType']
          @EffectAllCluster = params['EffectAllCluster']
          @RuleID = params['RuleID']
        end
      end

      # k8s api 异常请求规则列表Item
      class K8sApiAbnormalRuleListItem < TencentCloud::Common::AbstractModel
        # @param RuleID: 规则ID
        # @type RuleID: String
        # @param RuleName: 规则名称
        # @type RuleName: String
        # @param RuleType: 规则类型
        # RT_SYSTEM 系统规则
        # RT_USER 用户自定义
        # @type RuleType: String
        # @param EffectClusterCount: 受影响集群总数
        # @type EffectClusterCount: Integer
        # @param UpdateTime: 更新时间
        # @type UpdateTime: String
        # @param OprUin: 编辑账号
        # @type OprUin: String
        # @param Status: 状态
        # @type Status: Boolean

        attr_accessor :RuleID, :RuleName, :RuleType, :EffectClusterCount, :UpdateTime, :OprUin, :Status

        def initialize(ruleid=nil, rulename=nil, ruletype=nil, effectclustercount=nil, updatetime=nil, opruin=nil, status=nil)
          @RuleID = ruleid
          @RuleName = rulename
          @RuleType = ruletype
          @EffectClusterCount = effectclustercount
          @UpdateTime = updatetime
          @OprUin = opruin
          @Status = status
        end

        def deserialize(params)
          @RuleID = params['RuleID']
          @RuleName = params['RuleName']
          @RuleType = params['RuleType']
          @EffectClusterCount = params['EffectClusterCount']
          @UpdateTime = params['UpdateTime']
          @OprUin = params['OprUin']
          @Status = params['Status']
        end
      end

      # k8s api 异常事件规则配置范围
      class K8sApiAbnormalRuleScopeInfo < TencentCloud::Common::AbstractModel
        # @param Scope: 范围
        # 系统事件:
        # ANONYMOUS_ACCESS: 匿名访问
        # ABNORMAL_UA_REQ: 异常UA请求
        # ANONYMOUS_ABNORMAL_PERMISSION: 匿名用户权限异动
        # GET_CREDENTIALS: 凭据信息获取
        # MOUNT_SENSITIVE_PATH: 敏感路径挂载
        # COMMAND_RUN: 命令执行
        # PRIVILEGE_CONTAINER: 特权容器
        # EXCEPTION_CRONTAB_TASK: 异常定时任务
        # STATICS_POD: 静态pod创建
        # ABNORMAL_CREATE_POD: 异常pod创建
        # USER_DEFINED: 用户自定义
        # @type Scope: String
        # @param Action: 动作(RULE_MODE_ALERT: 告警 RULE_MODE_RELEASE:放行)
        # @type Action: String
        # @param RiskLevel: 威胁等级 HIGH:高级 MIDDLE: 中级 LOW:低级 NOTICE:提示
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type RiskLevel: String
        # @param Status: 开关状态(true:开 false:关) 适用于系统规则
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Status: Boolean
        # @param IsDelete: 是否被删除 适用于自定义规则入参
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type IsDelete: Boolean

        attr_accessor :Scope, :Action, :RiskLevel, :Status, :IsDelete

        def initialize(scope=nil, action=nil, risklevel=nil, status=nil, isdelete=nil)
          @Scope = scope
          @Action = action
          @RiskLevel = risklevel
          @Status = status
          @IsDelete = isdelete
        end

        def deserialize(params)
          @Scope = params['Scope']
          @Action = params['Action']
          @RiskLevel = params['RiskLevel']
          @Status = params['Status']
          @IsDelete = params['IsDelete']
        end
      end

      # k8sapi异常请求趋势Item
      class K8sApiAbnormalTendencyItem < TencentCloud::Common::AbstractModel
        # @param Date: 日期
        # @type Date: String
        # @param ExceptionUARequestCount: 异常UA请求事件数
        # @type ExceptionUARequestCount: Integer
        # @param AnonymousUserRightCount: 匿名用户权限事件数
        # @type AnonymousUserRightCount: Integer
        # @param CredentialInformationObtainCount: 凭据信息获取事件数
        # @type CredentialInformationObtainCount: Integer
        # @param SensitiveDataMountCount: 敏感数据挂载事件数
        # @type SensitiveDataMountCount: Integer
        # @param CmdExecCount: 命令执行事件数
        # @type CmdExecCount: Integer
        # @param AbnormalScheduledTaskCount: 异常定时任务事件数
        # @type AbnormalScheduledTaskCount: Integer
        # @param StaticsPodCreateCount: 静态Pod创建数
        # @type StaticsPodCreateCount: Integer
        # @param DoubtfulContainerCreateCount: 可疑容器创建数
        # @type DoubtfulContainerCreateCount: Integer
        # @param UserDefinedRuleCount: 自定义规则事件数
        # @type UserDefinedRuleCount: Integer
        # @param AnonymousAccessCount: 匿名访问事件数
        # @type AnonymousAccessCount: Integer
        # @param PrivilegeContainerCount: 特权容器事件数
        # @type PrivilegeContainerCount: Integer

        attr_accessor :Date, :ExceptionUARequestCount, :AnonymousUserRightCount, :CredentialInformationObtainCount, :SensitiveDataMountCount, :CmdExecCount, :AbnormalScheduledTaskCount, :StaticsPodCreateCount, :DoubtfulContainerCreateCount, :UserDefinedRuleCount, :AnonymousAccessCount, :PrivilegeContainerCount

        def initialize(date=nil, exceptionuarequestcount=nil, anonymoususerrightcount=nil, credentialinformationobtaincount=nil, sensitivedatamountcount=nil, cmdexeccount=nil, abnormalscheduledtaskcount=nil, staticspodcreatecount=nil, doubtfulcontainercreatecount=nil, userdefinedrulecount=nil, anonymousaccesscount=nil, privilegecontainercount=nil)
          @Date = date
          @ExceptionUARequestCount = exceptionuarequestcount
          @AnonymousUserRightCount = anonymoususerrightcount
          @CredentialInformationObtainCount = credentialinformationobtaincount
          @SensitiveDataMountCount = sensitivedatamountcount
          @CmdExecCount = cmdexeccount
          @AbnormalScheduledTaskCount = abnormalscheduledtaskcount
          @StaticsPodCreateCount = staticspodcreatecount
          @DoubtfulContainerCreateCount = doubtfulcontainercreatecount
          @UserDefinedRuleCount = userdefinedrulecount
          @AnonymousAccessCount = anonymousaccesscount
          @PrivilegeContainerCount = privilegecontainercount
        end

        def deserialize(params)
          @Date = params['Date']
          @ExceptionUARequestCount = params['ExceptionUARequestCount']
          @AnonymousUserRightCount = params['AnonymousUserRightCount']
          @CredentialInformationObtainCount = params['CredentialInformationObtainCount']
          @SensitiveDataMountCount = params['SensitiveDataMountCount']
          @CmdExecCount = params['CmdExecCount']
          @AbnormalScheduledTaskCount = params['AbnormalScheduledTaskCount']
          @StaticsPodCreateCount = params['StaticsPodCreateCount']
          @DoubtfulContainerCreateCount = params['DoubtfulContainerCreateCount']
          @UserDefinedRuleCount = params['UserDefinedRuleCount']
          @AnonymousAccessCount = params['AnonymousAccessCount']
          @PrivilegeContainerCount = params['PrivilegeContainerCount']
        end
      end

      # ModifyAbnormalProcessRuleStatus请求参数结构体
      class ModifyAbnormalProcessRuleStatusRequest < TencentCloud::Common::AbstractModel
        # @param RuleIdSet: 策略的ids
        # @type RuleIdSet: Array
        # @param IsEnable: 策略开关，true开启，false关闭
        # @type IsEnable: Boolean

        attr_accessor :RuleIdSet, :IsEnable

        def initialize(ruleidset=nil, isenable=nil)
          @RuleIdSet = ruleidset
          @IsEnable = isenable
        end

        def deserialize(params)
          @RuleIdSet = params['RuleIdSet']
          @IsEnable = params['IsEnable']
        end
      end

      # ModifyAbnormalProcessRuleStatus返回参数结构体
      class ModifyAbnormalProcessRuleStatusResponse < TencentCloud::Common::AbstractModel
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RequestId

        def initialize(requestid=nil)
          @RequestId = requestid
        end

        def deserialize(params)
          @RequestId = params['RequestId']
        end
      end

      # ModifyAbnormalProcessStatus请求参数结构体
      class ModifyAbnormalProcessStatusRequest < TencentCloud::Common::AbstractModel
        # @param EventIdSet: 处理事件ids
        # @type EventIdSet: Array
        # @param Status: 标记事件的状态，
        #     EVENT_DEALED:事件处理
        #     EVENT_INGNORE"：事件忽略
        #      EVENT_DEL:事件删除
        #      EVENT_ADD_WHITE:事件加白
        # @type Status: String
        # @param Remark: 事件备注
        # @type Remark: String

        attr_accessor :EventIdSet, :Status, :Remark

        def initialize(eventidset=nil, status=nil, remark=nil)
          @EventIdSet = eventidset
          @Status = status
          @Remark = remark
        end

        def deserialize(params)
          @EventIdSet = params['EventIdSet']
          @Status = params['Status']
          @Remark = params['Remark']
        end
      end

      # ModifyAbnormalProcessStatus返回参数结构体
      class ModifyAbnormalProcessStatusResponse < TencentCloud::Common::AbstractModel
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RequestId

        def initialize(requestid=nil)
          @RequestId = requestid
        end

        def deserialize(params)
          @RequestId = params['RequestId']
        end
      end

      # ModifyAccessControlRuleStatus请求参数结构体
      class ModifyAccessControlRuleStatusRequest < TencentCloud::Common::AbstractModel
        # @param RuleIdSet: 策略的ids
        # @type RuleIdSet: Array
        # @param IsEnable: 策略开关，true:代表开启， false代表关闭
        # @type IsEnable: Boolean

        attr_accessor :RuleIdSet, :IsEnable

        def initialize(ruleidset=nil, isenable=nil)
          @RuleIdSet = ruleidset
          @IsEnable = isenable
        end

        def deserialize(params)
          @RuleIdSet = params['RuleIdSet']
          @IsEnable = params['IsEnable']
        end
      end

      # ModifyAccessControlRuleStatus返回参数结构体
      class ModifyAccessControlRuleStatusResponse < TencentCloud::Common::AbstractModel
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RequestId

        def initialize(requestid=nil)
          @RequestId = requestid
        end

        def deserialize(params)
          @RequestId = params['RequestId']
        end
      end

      # ModifyAccessControlStatus请求参数结构体
      class ModifyAccessControlStatusRequest < TencentCloud::Common::AbstractModel
        # @param EventIdSet: 处理事件ids
        # @type EventIdSet: Array
        # @param Status: 标记事件的状态，
        # EVENT_DEALED:事件已经处理
        #      EVENT_INGNORE：事件忽略
        #      EVENT_DEL:事件删除
        #      EVENT_ADD_WHITE:事件加白
        # @type Status: String
        # @param Remark: 备注事件信息
        # @type Remark: String

        attr_accessor :EventIdSet, :Status, :Remark

        def initialize(eventidset=nil, status=nil, remark=nil)
          @EventIdSet = eventidset
          @Status = status
          @Remark = remark
        end

        def deserialize(params)
          @EventIdSet = params['EventIdSet']
          @Status = params['Status']
          @Remark = params['Remark']
        end
      end

      # ModifyAccessControlStatus返回参数结构体
      class ModifyAccessControlStatusResponse < TencentCloud::Common::AbstractModel
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RequestId

        def initialize(requestid=nil)
          @RequestId = requestid
        end

        def deserialize(params)
          @RequestId = params['RequestId']
        end
      end

      # ModifyAssetImageRegistryScanStopOneKey请求参数结构体
      class ModifyAssetImageRegistryScanStopOneKeyRequest < TencentCloud::Common::AbstractModel
        # @param All: 是否扫描全部镜像
        # @type All: Boolean
        # @param Images: 扫描的镜像列表
        # @type Images: Array
        # @param Id: 扫描的镜像列表Id
        # @type Id: Array
        # @param TaskID: 停止的任务ID
        # @type TaskID: Integer

        attr_accessor :All, :Images, :Id, :TaskID

        def initialize(all=nil, images=nil, id=nil, taskid=nil)
          @All = all
          @Images = images
          @Id = id
          @TaskID = taskid
        end

        def deserialize(params)
          @All = params['All']
          unless params['Images'].nil?
            @Images = []
            params['Images'].each do |i|
              imageinfo_tmp = ImageInfo.new
              imageinfo_tmp.deserialize(i)
              @Images << imageinfo_tmp
            end
          end
          @Id = params['Id']
          @TaskID = params['TaskID']
        end
      end

      # ModifyAssetImageRegistryScanStopOneKey返回参数结构体
      class ModifyAssetImageRegistryScanStopOneKeyResponse < TencentCloud::Common::AbstractModel
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RequestId

        def initialize(requestid=nil)
          @RequestId = requestid
        end

        def deserialize(params)
          @RequestId = params['RequestId']
        end
      end

      # ModifyAssetImageRegistryScanStop请求参数结构体
      class ModifyAssetImageRegistryScanStopRequest < TencentCloud::Common::AbstractModel
        # @param All: 是否扫描全部镜像
        # @type All: Boolean
        # @param Images: 扫描的镜像列表
        # @type Images: Array
        # @param Id: 扫描的镜像列表
        # @type Id: Array
        # @param Filters: 过滤条件
        # @type Filters: Array
        # @param ExcludeImageList: 不要扫描的镜像列表，与Filters配合使用
        # @type ExcludeImageList: Array
        # @param OnlyScanLatest: 是否仅扫描各repository最新版本的镜像
        # @type OnlyScanLatest: Boolean
        # @param TaskID: 停止的任务ID
        # @type TaskID: Integer

        attr_accessor :All, :Images, :Id, :Filters, :ExcludeImageList, :OnlyScanLatest, :TaskID

        def initialize(all=nil, images=nil, id=nil, filters=nil, excludeimagelist=nil, onlyscanlatest=nil, taskid=nil)
          @All = all
          @Images = images
          @Id = id
          @Filters = filters
          @ExcludeImageList = excludeimagelist
          @OnlyScanLatest = onlyscanlatest
          @TaskID = taskid
        end

        def deserialize(params)
          @All = params['All']
          unless params['Images'].nil?
            @Images = []
            params['Images'].each do |i|
              imageinfo_tmp = ImageInfo.new
              imageinfo_tmp.deserialize(i)
              @Images << imageinfo_tmp
            end
          end
          @Id = params['Id']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              assetfilters_tmp = AssetFilters.new
              assetfilters_tmp.deserialize(i)
              @Filters << assetfilters_tmp
            end
          end
          @ExcludeImageList = params['ExcludeImageList']
          @OnlyScanLatest = params['OnlyScanLatest']
          @TaskID = params['TaskID']
        end
      end

      # ModifyAssetImageRegistryScanStop返回参数结构体
      class ModifyAssetImageRegistryScanStopResponse < TencentCloud::Common::AbstractModel
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RequestId

        def initialize(requestid=nil)
          @RequestId = requestid
        end

        def deserialize(params)
          @RequestId = params['RequestId']
        end
      end

      # ModifyAssetImageScanStop请求参数结构体
      class ModifyAssetImageScanStopRequest < TencentCloud::Common::AbstractModel
        # @param TaskID: 任务id；任务id，镜像id和根据过滤条件筛选三选一。
        # @type TaskID: String
        # @param Images: 镜像id；任务id，镜像id和根据过滤条件筛选三选一。
        # @type Images: Array
        # @param Filters: 根据过滤条件筛选出镜像；任务id，镜像id和根据过滤条件筛选三选一。
        # @type Filters: Array
        # @param ExcludeImageIds: 根据过滤条件筛选出镜像，再排除个别镜像
        # @type ExcludeImageIds: String

        attr_accessor :TaskID, :Images, :Filters, :ExcludeImageIds

        def initialize(taskid=nil, images=nil, filters=nil, excludeimageids=nil)
          @TaskID = taskid
          @Images = images
          @Filters = filters
          @ExcludeImageIds = excludeimageids
        end

        def deserialize(params)
          @TaskID = params['TaskID']
          @Images = params['Images']
          unless params['Filters'].nil?
            @Filters = []
            params['Filters'].each do |i|
              assetfilters_tmp = AssetFilters.new
              assetfilters_tmp.deserialize(i)
              @Filters << assetfilters_tmp
            end
          end
          @ExcludeImageIds = params['ExcludeImageIds']
        end
      end

      # ModifyAssetImageScanStop返回参数结构体
      class ModifyAssetImageScanStopResponse < TencentCloud::Common::AbstractModel
        # @param Status: 停止状态
        # @type Status: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :Status, :RequestId

        def initialize(status=nil, requestid=nil)
          @Status = status
          @RequestId = requestid
        end

        def deserialize(params)
          @Status = params['Status']
          @RequestId = params['RequestId']
        end
      end

      # ModifyAsset请求参数结构体
      class ModifyAssetRequest < TencentCloud::Common::AbstractModel
        # @param All: 全部同步，俩参数必选一个 All优先
        # @type All: Boolean
        # @param Hosts: 要同步的主机列表uuid ，俩参数必选一个 All优先
        # @type Hosts: Array

        attr_accessor :All, :Hosts

        def initialize(all=nil, hosts=nil)
          @All = all
          @Hosts = hosts
        end

        def deserialize(params)
          @All = params['All']
          @Hosts = params['Hosts']
        end
      end

      # ModifyAsset返回参数结构体
      class ModifyAssetResponse < TencentCloud::Common::AbstractModel
        # @param Status: 同步任务发送结果
        # @type Status: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :Status, :RequestId

        def initialize(status=nil, requestid=nil)
          @Status = status
          @RequestId = requestid
        end

        def deserialize(params)
          @Status = params['Status']
          @RequestId = params['RequestId']
        end
      end

      # ModifyCompliancePeriodTask请求参数结构体
      class ModifyCompliancePeriodTaskRequest < TencentCloud::Common::AbstractModel
        # @param PeriodTaskId: 要修改的定时任务的ID，由DescribeCompliancePeriodTaskList接口返回。
        # @type PeriodTaskId: Integer
        # @param PeriodRule: 定时任务的周期规则。不填时，不修改。
        # @type PeriodRule: :class:`Tencentcloud::Tcss.v20201101.models.CompliancePeriodTaskRule`
        # @param StandardSettings: 设置合规标准。不填时，不修改。
        # @type StandardSettings: Array

        attr_accessor :PeriodTaskId, :PeriodRule, :StandardSettings

        def initialize(periodtaskid=nil, periodrule=nil, standardsettings=nil)
          @PeriodTaskId = periodtaskid
          @PeriodRule = periodrule
          @StandardSettings = standardsettings
        end

        def deserialize(params)
          @PeriodTaskId = params['PeriodTaskId']
          unless params['PeriodRule'].nil?
            @PeriodRule = CompliancePeriodTaskRule.new
            @PeriodRule.deserialize(params['PeriodRule'])
          end
          unless params['StandardSettings'].nil?
            @StandardSettings = []
            params['StandardSettings'].each do |i|
              compliancebenchmarkstandardenable_tmp = ComplianceBenchmarkStandardEnable.new
              compliancebenchmarkstandardenable_tmp.deserialize(i)
              @StandardSettings << compliancebenchmarkstandardenable_tmp
            end
          end
        end
      end

      # ModifyCompliancePeriodTask返回参数结构体
      class ModifyCompliancePeriodTaskResponse < TencentCloud::Common::AbstractModel
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RequestId

        def initialize(requestid=nil)
          @RequestId = requestid
        end

        def deserialize(params)
          @RequestId = params['RequestId']
        end
      end

      # ModifyContainerNetStatus请求参数结构体
      class ModifyContainerNetStatusRequest < TencentCloud::Common::AbstractModel
        # @param ContainerID: 容器ID
        # @type ContainerID: String
        # @param Status: 状态(
        # 隔离容器: EVENT_ISOLATE_CONTAINER
        # 恢复容器: EVENT_RESOTRE_CONTAINER
        # )
        # @type Status: String

        attr_accessor :ContainerID, :Status

        def initialize(containerid=nil, status=nil)
          @ContainerID = containerid
          @Status = status
        end

        def deserialize(params)
          @ContainerID = params['ContainerID']
          @Status = params['Status']
        end
      end

      # ModifyContainerNetStatus返回参数结构体
      class ModifyContainerNetStatusResponse < TencentCloud::Common::AbstractModel
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RequestId

        def initialize(requestid=nil)
          @RequestId = requestid
        end

        def deserialize(params)
          @RequestId = params['RequestId']
        end
      end

      # ModifyEscapeEventStatus请求参数结构体
      class ModifyEscapeEventStatusRequest < TencentCloud::Common::AbstractModel
        # @param EventIdSet: 处理事件ids
        # @type EventIdSet: Array
        # @param Status: 标记事件的状态：
        # EVENT_UNDEAL:未处理（取消忽略），
        # EVENT_DEALED:已处理，
        # EVENT_IGNORE:忽略，
        # EVENT_DELETE：已删除
        # EVENT_ADD_WHITE：加白
        # @type Status: String
        # @param Remark: 备注
        # @type Remark: String
        # @param ImageIDs: 加白镜像ID数组
        # @type ImageIDs: Array
        # @param EventType: 加白事件类型
        #    ESCAPE_CGROUPS：利用cgroup机制逃逸
        #    ESCAPE_TAMPER_SENSITIVE_FILE：篡改敏感文件逃逸
        #    ESCAPE_DOCKER_API：访问Docker API接口逃逸
        #    ESCAPE_VUL_OCCURRED：逃逸漏洞利用
        #    MOUNT_SENSITIVE_PTAH：敏感路径挂载
        #    PRIVILEGE_CONTAINER_START：特权容器
        #    PRIVILEGE：程序提权逃逸
        # @type EventType: Array

        attr_accessor :EventIdSet, :Status, :Remark, :ImageIDs, :EventType

        def initialize(eventidset=nil, status=nil, remark=nil, imageids=nil, eventtype=nil)
          @EventIdSet = eventidset
          @Status = status
          @Remark = remark
          @ImageIDs = imageids
          @EventType = eventtype
        end

        def deserialize(params)
          @EventIdSet = params['EventIdSet']
          @Status = params['Status']
          @Remark = params['Remark']
          @ImageIDs = params['ImageIDs']
          @EventType = params['EventType']
        end
      end

      # ModifyEscapeEventStatus返回参数结构体
      class ModifyEscapeEventStatusResponse < TencentCloud::Common::AbstractModel
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RequestId

        def initialize(requestid=nil)
          @RequestId = requestid
        end

        def deserialize(params)
          @RequestId = params['RequestId']
        end
      end

      # ModifyEscapeRule请求参数结构体
      class ModifyEscapeRuleRequest < TencentCloud::Common::AbstractModel
        # @param RuleSet: 需要修改的数组
        # @type RuleSet: Array

        attr_accessor :RuleSet

        def initialize(ruleset=nil)
          @RuleSet = ruleset
        end

        def deserialize(params)
          unless params['RuleSet'].nil?
            @RuleSet = []
            params['RuleSet'].each do |i|
              escaperuleenabled_tmp = EscapeRuleEnabled.new
              escaperuleenabled_tmp.deserialize(i)
              @RuleSet << escaperuleenabled_tmp
            end
          end
        end
      end

      # ModifyEscapeRule返回参数结构体
      class ModifyEscapeRuleResponse < TencentCloud::Common::AbstractModel
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RequestId

        def initialize(requestid=nil)
          @RequestId = requestid
        end

        def deserialize(params)
          @RequestId = params['RequestId']
        end
      end

      # ModifyEscapeWhiteList请求参数结构体
      class ModifyEscapeWhiteListRequest < TencentCloud::Common::AbstractModel
        # @param EventType: 加白名单事件类型
        #    ESCAPE_CGROUPS：利用cgroup机制逃逸
        #    ESCAPE_TAMPER_SENSITIVE_FILE：篡改敏感文件逃逸
        #    ESCAPE_DOCKER_API：访问Docker API接口逃逸
        #    ESCAPE_VUL_OCCURRED：逃逸漏洞利用
        #    MOUNT_SENSITIVE_PTAH：敏感路径挂载
        #    PRIVILEGE_CONTAINER_START：特权容器
        #    PRIVILEGE：程序提权逃逸
        # @type EventType: Array
        # @param IDSet: 白名单记录ID
        # @type IDSet: Array

        attr_accessor :EventType, :IDSet

        def initialize(eventtype=nil, idset=nil)
          @EventType = eventtype
          @IDSet = idset
        end

        def deserialize(params)
          @EventType = params['EventType']
          @IDSet = params['IDSet']
        end
      end

      # ModifyEscapeWhiteList返回参数结构体
      class ModifyEscapeWhiteListResponse < TencentCloud::Common::AbstractModel
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RequestId

        def initialize(requestid=nil)
          @RequestId = requestid
        end

        def deserialize(params)
          @RequestId = params['RequestId']
        end
      end

      # 漏洞扫描新增和取消忽略漏洞入参
      class ModifyIgnoreVul < TencentCloud::Common::AbstractModel
        # @param PocID: 漏洞PocID
        # @type PocID: String
        # @param ImageIDs: 忽略的镜像ID，空表示全部
        # @type ImageIDs: Array
        # @param ImageType: 当有镜像时
        # 镜像类型: LOCAL 本地镜像 REGISTRY 仓库镜像
        # @type ImageType: String

        attr_accessor :PocID, :ImageIDs, :ImageType

        def initialize(pocid=nil, imageids=nil, imagetype=nil)
          @PocID = pocid
          @ImageIDs = imageids
          @ImageType = imagetype
        end

        def deserialize(params)
          @PocID = params['PocID']
          @ImageIDs = params['ImageIDs']
          @ImageType = params['ImageType']
        end
      end

      # ModifyImageAuthorized请求参数结构体
      class ModifyImageAuthorizedRequest < TencentCloud::Common::AbstractModel
        # @param AllLocalImages: 本地镜像是否全部授权的标识，优先权高于根据本地镜像ids授权。等于true时需UpdatedLocalImageCnt大于0。
        # @type AllLocalImages: Boolean
        # @param AllRegistryImages: 仓库镜像是否全部授权的标识，优先权高于根据镜像ids授权。等于true时需UpdatedRegistryImageCnt大于0。
        # @type AllRegistryImages: Boolean
        # @param UpdatedLocalImageCnt: 指定操作授权的本地镜像数量，判断优先权最高，实际多出的镜像随机忽略，实际不足的部分也忽略。
        # @type UpdatedLocalImageCnt: Integer
        # @param UpdatedRegistryImageCnt: 指定操作授权的仓库镜像数量，判断优先权最高，实际多出的镜像随机忽略，实际不足的部分也忽略；
        # @type UpdatedRegistryImageCnt: Integer
        # @param ImageSourceType: 根据满足条件的本地镜像授权,本地镜像来源；ASSETIMAGE:本地镜像列表；IMAGEALL:同步本地镜像；AllLocalImages为false且LocalImageIds为空和UpdatedLocalImageCnt大于0时，需要
        # @type ImageSourceType: String
        # @param LocalImageFilter: 根据满足条件的本地镜像授权，AllLocalImages为false且LocalImageIds为空和UpdatedLocalImageCnt大于0时，需要。
        # @type LocalImageFilter: Array
        # @param RegistryImageFilter: 根据满足条件的仓库镜像授权，AllRegistryImages为false且RegistryImageIds为空和UpdatedRegistryImageCnt大于0时，需要。
        # @type RegistryImageFilter: Array
        # @param ExcludeLocalImageIds: 根据满足条件的镜像授权,同时排除的本地镜像。
        # @type ExcludeLocalImageIds: Array
        # @param ExcludeRegistryImageIds: 根据满足条件的镜像授权,同时排除的仓库镜像。
        # @type ExcludeRegistryImageIds: Array
        # @param LocalImageIds: 根据本地镜像ids授权，优先权高于根据满足条件的镜像授权。AllLocalImages为false且LocalImageFilter为空和UpdatedLocalImageCnt大于0时，需要。
        # @type LocalImageIds: Array
        # @param RegistryImageIds: 根据仓库镜像Ids授权，优先权高于根据满足条件的镜像授。AllRegistryImages为false且RegistryImageFilter为空和UpdatedRegistryImageCnt大于0时，需要。
        # @type RegistryImageIds: Array
        # @param OnlyShowLatest: 是否仅最新的镜像；RegistryImageFilter不为空且UpdatedRegistryImageCnt大于0时仓库镜像需要。
        # @type OnlyShowLatest: Boolean

        attr_accessor :AllLocalImages, :AllRegistryImages, :UpdatedLocalImageCnt, :UpdatedRegistryImageCnt, :ImageSourceType, :LocalImageFilter, :RegistryImageFilter, :ExcludeLocalImageIds, :ExcludeRegistryImageIds, :LocalImageIds, :RegistryImageIds, :OnlyShowLatest

        def initialize(alllocalimages=nil, allregistryimages=nil, updatedlocalimagecnt=nil, updatedregistryimagecnt=nil, imagesourcetype=nil, localimagefilter=nil, registryimagefilter=nil, excludelocalimageids=nil, excluderegistryimageids=nil, localimageids=nil, registryimageids=nil, onlyshowlatest=nil)
          @AllLocalImages = alllocalimages
          @AllRegistryImages = allregistryimages
          @UpdatedLocalImageCnt = updatedlocalimagecnt
          @UpdatedRegistryImageCnt = updatedregistryimagecnt
          @ImageSourceType = imagesourcetype
          @LocalImageFilter = localimagefilter
          @RegistryImageFilter = registryimagefilter
          @ExcludeLocalImageIds = excludelocalimageids
          @ExcludeRegistryImageIds = excluderegistryimageids
          @LocalImageIds = localimageids
          @RegistryImageIds = registryimageids
          @OnlyShowLatest = onlyshowlatest
        end

        def deserialize(params)
          @AllLocalImages = params['AllLocalImages']
          @AllRegistryImages = params['AllRegistryImages']
          @UpdatedLocalImageCnt = params['UpdatedLocalImageCnt']
          @UpdatedRegistryImageCnt = params['UpdatedRegistryImageCnt']
          @ImageSourceType = params['ImageSourceType']
          unless params['LocalImageFilter'].nil?
            @LocalImageFilter = []
            params['LocalImageFilter'].each do |i|
              assetfilters_tmp = AssetFilters.new
              assetfilters_tmp.deserialize(i)
              @LocalImageFilter << assetfilters_tmp
            end
          end
          unless params['RegistryImageFilter'].nil?
            @RegistryImageFilter = []
            params['RegistryImageFilter'].each do |i|
              assetfilters_tmp = AssetFilters.new
              assetfilters_tmp.deserialize(i)
              @RegistryImageFilter << assetfilters_tmp
            end
          end
          @ExcludeLocalImageIds = params['ExcludeLocalImageIds']
          @ExcludeRegistryImageIds = params['ExcludeRegistryImageIds']
          @LocalImageIds = params['LocalImageIds']
          @RegistryImageIds = params['RegistryImageIds']
          @OnlyShowLatest = params['OnlyShowLatest']
        end
      end

      # ModifyImageAuthorized返回参数结构体
      class ModifyImageAuthorizedResponse < TencentCloud::Common::AbstractModel
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RequestId

        def initialize(requestid=nil)
          @RequestId = requestid
        end

        def deserialize(params)
          @RequestId = params['RequestId']
        end
      end

      # ModifyK8sApiAbnormalEventStatus请求参数结构体
      class ModifyK8sApiAbnormalEventStatusRequest < TencentCloud::Common::AbstractModel
        # @param EventIDSet: 事件ID集合
        # @type EventIDSet: Array
        # @param Status: 状态
        # @type Status: String
        # @param Remark: 备注
        # @type Remark: String

        attr_accessor :EventIDSet, :Status, :Remark

        def initialize(eventidset=nil, status=nil, remark=nil)
          @EventIDSet = eventidset
          @Status = status
          @Remark = remark
        end

        def deserialize(params)
          @EventIDSet = params['EventIDSet']
          @Status = params['Status']
          @Remark = params['Remark']
        end
      end

      # ModifyK8sApiAbnormalEventStatus返回参数结构体
      class ModifyK8sApiAbnormalEventStatusResponse < TencentCloud::Common::AbstractModel
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RequestId

        def initialize(requestid=nil)
          @RequestId = requestid
        end

        def deserialize(params)
          @RequestId = params['RequestId']
        end
      end

      # ModifyK8sApiAbnormalRuleInfo请求参数结构体
      class ModifyK8sApiAbnormalRuleInfoRequest < TencentCloud::Common::AbstractModel
        # @param RuleInfo: 规则详情
        # @type RuleInfo: :class:`Tencentcloud::Tcss.v20201101.models.K8sApiAbnormalRuleInfo`

        attr_accessor :RuleInfo

        def initialize(ruleinfo=nil)
          @RuleInfo = ruleinfo
        end

        def deserialize(params)
          unless params['RuleInfo'].nil?
            @RuleInfo = K8sApiAbnormalRuleInfo.new
            @RuleInfo.deserialize(params['RuleInfo'])
          end
        end
      end

      # ModifyK8sApiAbnormalRuleInfo返回参数结构体
      class ModifyK8sApiAbnormalRuleInfoResponse < TencentCloud::Common::AbstractModel
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RequestId

        def initialize(requestid=nil)
          @RequestId = requestid
        end

        def deserialize(params)
          @RequestId = params['RequestId']
        end
      end

      # ModifyK8sApiAbnormalRuleStatus请求参数结构体
      class ModifyK8sApiAbnormalRuleStatusRequest < TencentCloud::Common::AbstractModel
        # @param RuleID: 规则ID
        # @type RuleID: String
        # @param Status: 状态(true:开 false:关)
        # @type Status: Boolean

        attr_accessor :RuleID, :Status

        def initialize(ruleid=nil, status=nil)
          @RuleID = ruleid
          @Status = status
        end

        def deserialize(params)
          @RuleID = params['RuleID']
          @Status = params['Status']
        end
      end

      # ModifyK8sApiAbnormalRuleStatus返回参数结构体
      class ModifyK8sApiAbnormalRuleStatusResponse < TencentCloud::Common::AbstractModel
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RequestId

        def initialize(requestid=nil)
          @RequestId = requestid
        end

        def deserialize(params)
          @RequestId = params['RequestId']
        end
      end

      # ModifyReverseShellStatus请求参数结构体
      class ModifyReverseShellStatusRequest < TencentCloud::Common::AbstractModel
        # @param EventIdSet: 处理事件ids
        # @type EventIdSet: Array
        # @param Status: 标记事件的状态，
        #     EVENT_DEALED:事件处理
        #     EVENT_INGNORE"：事件忽略
        #      EVENT_DEL:事件删除
        #      EVENT_ADD_WHITE:事件加白
        # @type Status: String
        # @param Remark: 事件备注
        # @type Remark: String

        attr_accessor :EventIdSet, :Status, :Remark

        def initialize(eventidset=nil, status=nil, remark=nil)
          @EventIdSet = eventidset
          @Status = status
          @Remark = remark
        end

        def deserialize(params)
          @EventIdSet = params['EventIdSet']
          @Status = params['Status']
          @Remark = params['Remark']
        end
      end

      # ModifyReverseShellStatus返回参数结构体
      class ModifyReverseShellStatusResponse < TencentCloud::Common::AbstractModel
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RequestId

        def initialize(requestid=nil)
          @RequestId = requestid
        end

        def deserialize(params)
          @RequestId = params['RequestId']
        end
      end

      # ModifyRiskSyscallStatus请求参数结构体
      class ModifyRiskSyscallStatusRequest < TencentCloud::Common::AbstractModel
        # @param EventIdSet: 处理事件ids
        # @type EventIdSet: Array
        # @param Status: 标记事件的状态，
        #     EVENT_DEALED:事件处理
        #     EVENT_INGNORE"：事件忽略
        #      EVENT_DEL:事件删除
        #      EVENT_ADD_WHITE:事件加白
        # @type Status: String
        # @param Remark: 事件备注
        # @type Remark: String

        attr_accessor :EventIdSet, :Status, :Remark

        def initialize(eventidset=nil, status=nil, remark=nil)
          @EventIdSet = eventidset
          @Status = status
          @Remark = remark
        end

        def deserialize(params)
          @EventIdSet = params['EventIdSet']
          @Status = params['Status']
          @Remark = params['Remark']
        end
      end

      # ModifyRiskSyscallStatus返回参数结构体
      class ModifyRiskSyscallStatusResponse < TencentCloud::Common::AbstractModel
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RequestId

        def initialize(requestid=nil)
          @RequestId = requestid
        end

        def deserialize(params)
          @RequestId = params['RequestId']
        end
      end

      # ModifySecLogCleanSettingInfo请求参数结构体
      class ModifySecLogCleanSettingInfoRequest < TencentCloud::Common::AbstractModel
        # @param ReservesLimit: 触发清理的储量底线(50-99)
        # @type ReservesLimit: Integer
        # @param ReservesDeadline: 清理停止时的储量截至线(>0,小于ReservesLimit)
        # @type ReservesDeadline: Integer
        # @param DayLimit: 触发清理的存储天数(>=1)
        # @type DayLimit: Integer

        attr_accessor :ReservesLimit, :ReservesDeadline, :DayLimit

        def initialize(reserveslimit=nil, reservesdeadline=nil, daylimit=nil)
          @ReservesLimit = reserveslimit
          @ReservesDeadline = reservesdeadline
          @DayLimit = daylimit
        end

        def deserialize(params)
          @ReservesLimit = params['ReservesLimit']
          @ReservesDeadline = params['ReservesDeadline']
          @DayLimit = params['DayLimit']
        end
      end

      # ModifySecLogCleanSettingInfo返回参数结构体
      class ModifySecLogCleanSettingInfoResponse < TencentCloud::Common::AbstractModel
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RequestId

        def initialize(requestid=nil)
          @RequestId = requestid
        end

        def deserialize(params)
          @RequestId = params['RequestId']
        end
      end

      # ModifySecLogDeliveryClsSetting请求参数结构体
      class ModifySecLogDeliveryClsSettingRequest < TencentCloud::Common::AbstractModel
        # @param List: 日志信息
        # @type List: Array

        attr_accessor :List

        def initialize(list=nil)
          @List = list
        end

        def deserialize(params)
          unless params['List'].nil?
            @List = []
            params['List'].each do |i|
              seclogdeliveryclssettinginfo_tmp = SecLogDeliveryClsSettingInfo.new
              seclogdeliveryclssettinginfo_tmp.deserialize(i)
              @List << seclogdeliveryclssettinginfo_tmp
            end
          end
        end
      end

      # ModifySecLogDeliveryClsSetting返回参数结构体
      class ModifySecLogDeliveryClsSettingResponse < TencentCloud::Common::AbstractModel
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RequestId

        def initialize(requestid=nil)
          @RequestId = requestid
        end

        def deserialize(params)
          @RequestId = params['RequestId']
        end
      end

      # ModifySecLogDeliveryKafkaSetting请求参数结构体
      class ModifySecLogDeliveryKafkaSettingRequest < TencentCloud::Common::AbstractModel
        # @param InstanceID: 实例ID
        # @type InstanceID: String
        # @param InstanceName: 实例名称
        # @type InstanceName: String
        # @param Domain: 域名
        # @type Domain: String
        # @param User: 用户名
        # @type User: String
        # @param Password: 密码
        # @type Password: String
        # @param LogTypeList: 日志类型队列
        # @type LogTypeList: Array
        # @param AccessType: 接入类型
        # @type AccessType: Integer
        # @param KafkaVersion: kafka版本号
        # @type KafkaVersion: String
        # @param RegionID: 地域ID
        # @type RegionID: String

        attr_accessor :InstanceID, :InstanceName, :Domain, :User, :Password, :LogTypeList, :AccessType, :KafkaVersion, :RegionID

        def initialize(instanceid=nil, instancename=nil, domain=nil, user=nil, password=nil, logtypelist=nil, accesstype=nil, kafkaversion=nil, regionid=nil)
          @InstanceID = instanceid
          @InstanceName = instancename
          @Domain = domain
          @User = user
          @Password = password
          @LogTypeList = logtypelist
          @AccessType = accesstype
          @KafkaVersion = kafkaversion
          @RegionID = regionid
        end

        def deserialize(params)
          @InstanceID = params['InstanceID']
          @InstanceName = params['InstanceName']
          @Domain = params['Domain']
          @User = params['User']
          @Password = params['Password']
          unless params['LogTypeList'].nil?
            @LogTypeList = []
            params['LogTypeList'].each do |i|
              seclogdeliverykafkasettinginfo_tmp = SecLogDeliveryKafkaSettingInfo.new
              seclogdeliverykafkasettinginfo_tmp.deserialize(i)
              @LogTypeList << seclogdeliverykafkasettinginfo_tmp
            end
          end
          @AccessType = params['AccessType']
          @KafkaVersion = params['KafkaVersion']
          @RegionID = params['RegionID']
        end
      end

      # ModifySecLogDeliveryKafkaSetting返回参数结构体
      class ModifySecLogDeliveryKafkaSettingResponse < TencentCloud::Common::AbstractModel
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RequestId

        def initialize(requestid=nil)
          @RequestId = requestid
        end

        def deserialize(params)
          @RequestId = params['RequestId']
        end
      end

      # ModifySecLogJoinObjects请求参数结构体
      class ModifySecLogJoinObjectsRequest < TencentCloud::Common::AbstractModel
        # @param LogType: 日志类型
        # bash日志: container_bash
        # 容器启动: container_launch
        # k8sApi: k8s_api
        # @type LogType: String
        # @param BindList: 绑定主机quuid列表
        # @type BindList: Array
        # @param UnBindList: 待解绑主机quuid列表
        # @type UnBindList: Array
        # @param NodeType: 节点类型:
        # NORMAL: 普通节点(默认值)
        # SUPER: 超级节点
        # @type NodeType: String

        attr_accessor :LogType, :BindList, :UnBindList, :NodeType

        def initialize(logtype=nil, bindlist=nil, unbindlist=nil, nodetype=nil)
          @LogType = logtype
          @BindList = bindlist
          @UnBindList = unbindlist
          @NodeType = nodetype
        end

        def deserialize(params)
          @LogType = params['LogType']
          @BindList = params['BindList']
          @UnBindList = params['UnBindList']
          @NodeType = params['NodeType']
        end
      end

      # ModifySecLogJoinObjects返回参数结构体
      class ModifySecLogJoinObjectsResponse < TencentCloud::Common::AbstractModel
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RequestId

        def initialize(requestid=nil)
          @RequestId = requestid
        end

        def deserialize(params)
          @RequestId = params['RequestId']
        end
      end

      # ModifySecLogJoinState请求参数结构体
      class ModifySecLogJoinStateRequest < TencentCloud::Common::AbstractModel
        # @param LogType: 日志类型
        # bash日志: container_bash
        # 容器启动: container_launch
        # k8sApi: k8s_api
        # @type LogType: String
        # @param State: 状态(true:开 false:关)
        # @type State: Boolean

        attr_accessor :LogType, :State

        def initialize(logtype=nil, state=nil)
          @LogType = logtype
          @State = state
        end

        def deserialize(params)
          @LogType = params['LogType']
          @State = params['State']
        end
      end

      # ModifySecLogJoinState返回参数结构体
      class ModifySecLogJoinStateResponse < TencentCloud::Common::AbstractModel
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RequestId

        def initialize(requestid=nil)
          @RequestId = requestid
        end

        def deserialize(params)
          @RequestId = params['RequestId']
        end
      end

      # ModifySecLogKafkaUIN请求参数结构体
      class ModifySecLogKafkaUINRequest < TencentCloud::Common::AbstractModel
        # @param DstUIN: 目标UIN
        # @type DstUIN: String

        attr_accessor :DstUIN

        def initialize(dstuin=nil)
          @DstUIN = dstuin
        end

        def deserialize(params)
          @DstUIN = params['DstUIN']
        end
      end

      # ModifySecLogKafkaUIN返回参数结构体
      class ModifySecLogKafkaUINResponse < TencentCloud::Common::AbstractModel
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RequestId

        def initialize(requestid=nil)
          @RequestId = requestid
        end

        def deserialize(params)
          @RequestId = params['RequestId']
        end
      end

      # ModifyVirusAutoIsolateExampleSwitch请求参数结构体
      class ModifyVirusAutoIsolateExampleSwitchRequest < TencentCloud::Common::AbstractModel
        # @param MD5: 文件Md5值
        # @type MD5: String
        # @param Status: 开关(开:true 关: false)
        # @type Status: Boolean

        attr_accessor :MD5, :Status

        def initialize(md5=nil, status=nil)
          @MD5 = md5
          @Status = status
        end

        def deserialize(params)
          @MD5 = params['MD5']
          @Status = params['Status']
        end
      end

      # ModifyVirusAutoIsolateExampleSwitch返回参数结构体
      class ModifyVirusAutoIsolateExampleSwitchResponse < TencentCloud::Common::AbstractModel
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RequestId

        def initialize(requestid=nil)
          @RequestId = requestid
        end

        def deserialize(params)
          @RequestId = params['RequestId']
        end
      end

      # ModifyVirusAutoIsolateSetting请求参数结构体
      class ModifyVirusAutoIsolateSettingRequest < TencentCloud::Common::AbstractModel
        # @param AutoIsolateSwitch: 自动隔离开关(true:开 false:关)
        # @type AutoIsolateSwitch: Boolean
        # @param IsKillProgress: 是否中断隔离文件关联的进程(true:是 false:否)
        # @type IsKillProgress: Boolean

        attr_accessor :AutoIsolateSwitch, :IsKillProgress

        def initialize(autoisolateswitch=nil, iskillprogress=nil)
          @AutoIsolateSwitch = autoisolateswitch
          @IsKillProgress = iskillprogress
        end

        def deserialize(params)
          @AutoIsolateSwitch = params['AutoIsolateSwitch']
          @IsKillProgress = params['IsKillProgress']
        end
      end

      # ModifyVirusAutoIsolateSetting返回参数结构体
      class ModifyVirusAutoIsolateSettingResponse < TencentCloud::Common::AbstractModel
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RequestId

        def initialize(requestid=nil)
          @RequestId = requestid
        end

        def deserialize(params)
          @RequestId = params['RequestId']
        end
      end

      # ModifyVirusFileStatus请求参数结构体
      class ModifyVirusFileStatusRequest < TencentCloud::Common::AbstractModel
        # @param EventIdSet: 处理事件id
        # @type EventIdSet: Array
        # @param Status: 标记事件的状态，
        #     EVENT_DEALED:事件处理
        #     EVENT_INGNORE"：事件忽略
        #     EVENT_DEL:事件删除
        #     EVENT_ADD_WHITE:事件加白
        #     EVENT_PENDING: 事件待处理
        # 	EVENT_ISOLATE_CONTAINER: 隔离容器
        # 	EVENT_RESOTRE_CONTAINER: 恢复容器
        # @type Status: String
        # @param Remark: 事件备注
        # @type Remark: String
        # @param AutoIsolate: 是否后续自动隔离相同MD5文件
        # @type AutoIsolate: Boolean

        attr_accessor :EventIdSet, :Status, :Remark, :AutoIsolate

        def initialize(eventidset=nil, status=nil, remark=nil, autoisolate=nil)
          @EventIdSet = eventidset
          @Status = status
          @Remark = remark
          @AutoIsolate = autoisolate
        end

        def deserialize(params)
          @EventIdSet = params['EventIdSet']
          @Status = params['Status']
          @Remark = params['Remark']
          @AutoIsolate = params['AutoIsolate']
        end
      end

      # ModifyVirusFileStatus返回参数结构体
      class ModifyVirusFileStatusResponse < TencentCloud::Common::AbstractModel
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RequestId

        def initialize(requestid=nil)
          @RequestId = requestid
        end

        def deserialize(params)
          @RequestId = params['RequestId']
        end
      end

      # ModifyVirusMonitorSetting请求参数结构体
      class ModifyVirusMonitorSettingRequest < TencentCloud::Common::AbstractModel
        # @param EnableScan: 是否开启定期扫描
        # @type EnableScan: Boolean
        # @param ScanPathAll: 扫描全部路径
        # @type ScanPathAll: Boolean
        # @param ScanPathType: 当ScanPathAll为true 生效 0扫描以下路径 1、扫描除以下路径(扫描范围只能小于等于1)
        # @type ScanPathType: Integer
        # @param ScanPath: 自选排除或扫描的地址
        # @type ScanPath: Array
        # @param ScanPathMode: 扫描路径模式：
        # SCAN_PATH_ALL：全部路径
        # SCAN_PATH_DEFAULT：默认路径
        # SCAN_PATH_USER_DEFINE：用户自定义路径
        # @type ScanPathMode: String

        attr_accessor :EnableScan, :ScanPathAll, :ScanPathType, :ScanPath, :ScanPathMode

        def initialize(enablescan=nil, scanpathall=nil, scanpathtype=nil, scanpath=nil, scanpathmode=nil)
          @EnableScan = enablescan
          @ScanPathAll = scanpathall
          @ScanPathType = scanpathtype
          @ScanPath = scanpath
          @ScanPathMode = scanpathmode
        end

        def deserialize(params)
          @EnableScan = params['EnableScan']
          @ScanPathAll = params['ScanPathAll']
          @ScanPathType = params['ScanPathType']
          @ScanPath = params['ScanPath']
          @ScanPathMode = params['ScanPathMode']
        end
      end

      # ModifyVirusMonitorSetting返回参数结构体
      class ModifyVirusMonitorSettingResponse < TencentCloud::Common::AbstractModel
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RequestId

        def initialize(requestid=nil)
          @RequestId = requestid
        end

        def deserialize(params)
          @RequestId = params['RequestId']
        end
      end

      # ModifyVirusScanSetting请求参数结构体
      class ModifyVirusScanSettingRequest < TencentCloud::Common::AbstractModel
        # @param EnableScan: 是否开启定期扫描
        # @type EnableScan: Boolean
        # @param Cycle: 检测周期每隔多少天(1|3|7)
        # @type Cycle: Integer
        # @param BeginScanAt: 扫描开始时间
        # @type BeginScanAt: String
        # @param ScanPathAll: 扫描全部路径(true:全选,false:自选)
        # @type ScanPathAll: Boolean
        # @param ScanPathType: 当ScanPathAll为true 生效 0扫描以下路径 1、扫描除以下路径
        # @type ScanPathType: Integer
        # @param Timeout: 超时时长(5~24h)
        # @type Timeout: Integer
        # @param ScanRangeType: 扫描范围0容器1主机节点
        # @type ScanRangeType: Integer
        # @param ScanRangeAll: true 全选，false 自选
        # @type ScanRangeAll: Boolean
        # @param ScanIds: 自选扫描范围的容器id或者主机id 根据ScanRangeType决定
        # @type ScanIds: Array
        # @param ScanPath: 扫描路径
        # @type ScanPath: Array
        # @param ScanPathMode: 扫描路径模式：
        # SCAN_PATH_ALL：全部路径
        # SCAN_PATH_DEFAULT：默认路径
        # SCAN_PATH_USER_DEFINE：用户自定义路径
        # @type ScanPathMode: String

        attr_accessor :EnableScan, :Cycle, :BeginScanAt, :ScanPathAll, :ScanPathType, :Timeout, :ScanRangeType, :ScanRangeAll, :ScanIds, :ScanPath, :ScanPathMode

        def initialize(enablescan=nil, cycle=nil, beginscanat=nil, scanpathall=nil, scanpathtype=nil, timeout=nil, scanrangetype=nil, scanrangeall=nil, scanids=nil, scanpath=nil, scanpathmode=nil)
          @EnableScan = enablescan
          @Cycle = cycle
          @BeginScanAt = beginscanat
          @ScanPathAll = scanpathall
          @ScanPathType = scanpathtype
          @Timeout = timeout
          @ScanRangeType = scanrangetype
          @ScanRangeAll = scanrangeall
          @ScanIds = scanids
          @ScanPath = scanpath
          @ScanPathMode = scanpathmode
        end

        def deserialize(params)
          @EnableScan = params['EnableScan']
          @Cycle = params['Cycle']
          @BeginScanAt = params['BeginScanAt']
          @ScanPathAll = params['ScanPathAll']
          @ScanPathType = params['ScanPathType']
          @Timeout = params['Timeout']
          @ScanRangeType = params['ScanRangeType']
          @ScanRangeAll = params['ScanRangeAll']
          @ScanIds = params['ScanIds']
          @ScanPath = params['ScanPath']
          @ScanPathMode = params['ScanPathMode']
        end
      end

      # ModifyVirusScanSetting返回参数结构体
      class ModifyVirusScanSettingResponse < TencentCloud::Common::AbstractModel
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RequestId

        def initialize(requestid=nil)
          @RequestId = requestid
        end

        def deserialize(params)
          @RequestId = params['RequestId']
        end
      end

      # ModifyVirusScanTimeoutSetting请求参数结构体
      class ModifyVirusScanTimeoutSettingRequest < TencentCloud::Common::AbstractModel
        # @param Timeout: 超时时长单位小时(5~24h)
        # @type Timeout: Integer
        # @param ScanType: 设置类型0一键检测，1定时检测
        # @type ScanType: Integer

        attr_accessor :Timeout, :ScanType

        def initialize(timeout=nil, scantype=nil)
          @Timeout = timeout
          @ScanType = scantype
        end

        def deserialize(params)
          @Timeout = params['Timeout']
          @ScanType = params['ScanType']
        end
      end

      # ModifyVirusScanTimeoutSetting返回参数结构体
      class ModifyVirusScanTimeoutSettingResponse < TencentCloud::Common::AbstractModel
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RequestId

        def initialize(requestid=nil)
          @RequestId = requestid
        end

        def deserialize(params)
          @RequestId = params['RequestId']
        end
      end

      # ModifyVulDefenceEventStatus请求参数结构体
      class ModifyVulDefenceEventStatusRequest < TencentCloud::Common::AbstractModel
        # @param EventIDs: 事件IDs数组
        # @type EventIDs: Array
        # @param Status: 操作状态：
        # EVENT_DEALED：已处理，EVENT_IGNORE：忽略，EVENT_ISOLATE_CONTAINER：隔离容器，EVENT_DEL：删除
        # @type Status: String
        # @param Remark: 备注
        # @type Remark: String

        attr_accessor :EventIDs, :Status, :Remark

        def initialize(eventids=nil, status=nil, remark=nil)
          @EventIDs = eventids
          @Status = status
          @Remark = remark
        end

        def deserialize(params)
          @EventIDs = params['EventIDs']
          @Status = params['Status']
          @Remark = params['Remark']
        end
      end

      # ModifyVulDefenceEventStatus返回参数结构体
      class ModifyVulDefenceEventStatusResponse < TencentCloud::Common::AbstractModel
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RequestId

        def initialize(requestid=nil)
          @RequestId = requestid
        end

        def deserialize(params)
          @RequestId = params['RequestId']
        end
      end

      # ModifyVulDefenceSetting请求参数结构体
      class ModifyVulDefenceSettingRequest < TencentCloud::Common::AbstractModel
        # @param IsEnabled: 是否开启:0: 关闭 1:开启
        # @type IsEnabled: Integer
        # @param Scope: 漏洞防御主机范围:0：自选 1: 全部主机
        # @type Scope: Integer
        # @param HostIDs: 自选漏洞防御主机
        # @type HostIDs: Array
        # @param SuperScope: 漏洞防御超级节点范围:0：自选 1: 全部
        # @type SuperScope: Integer
        # @param NodeIds: 超级节点Id列表
        # @type NodeIds: Array

        attr_accessor :IsEnabled, :Scope, :HostIDs, :SuperScope, :NodeIds

        def initialize(isenabled=nil, scope=nil, hostids=nil, superscope=nil, nodeids=nil)
          @IsEnabled = isenabled
          @Scope = scope
          @HostIDs = hostids
          @SuperScope = superscope
          @NodeIds = nodeids
        end

        def deserialize(params)
          @IsEnabled = params['IsEnabled']
          @Scope = params['Scope']
          @HostIDs = params['HostIDs']
          @SuperScope = params['SuperScope']
          @NodeIds = params['NodeIds']
        end
      end

      # ModifyVulDefenceSetting返回参数结构体
      class ModifyVulDefenceSettingResponse < TencentCloud::Common::AbstractModel
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RequestId

        def initialize(requestid=nil)
          @RequestId = requestid
        end

        def deserialize(params)
          @RequestId = params['RequestId']
        end
      end

      # 返回的命名空间列表信息
      class NamespaceInfo < TencentCloud::Common::AbstractModel
        # @param Namespace: 命名空间名称
        # @type Namespace: String
        # @param RegistryCnt: 包含仓库数
        # @type RegistryCnt: Integer
        # @param ImageCnt: 包含镜像数
        # @type ImageCnt: Integer
        # @param RiskImageCnt: 包含风险镜像数
        # @type RiskImageCnt: Integer

        attr_accessor :Namespace, :RegistryCnt, :ImageCnt, :RiskImageCnt

        def initialize(namespace=nil, registrycnt=nil, imagecnt=nil, riskimagecnt=nil)
          @Namespace = namespace
          @RegistryCnt = registrycnt
          @ImageCnt = imagecnt
          @RiskImageCnt = riskimagecnt
        end

        def deserialize(params)
          @Namespace = params['Namespace']
          @RegistryCnt = params['RegistryCnt']
          @ImageCnt = params['ImageCnt']
          @RiskImageCnt = params['RiskImageCnt']
        end
      end

      # 网络集群资产审计返回结构体
      class NetworkAuditRecord < TencentCloud::Common::AbstractModel
        # @param ClusterId: 集群id
        # @type ClusterId: String
        # @param ClusterName: 集群名字
        # @type ClusterName: String
        # @param Region: 集群区域
        # @type Region: String
        # @param Action: 动作
        # @type Action: String
        # @param Operation: 操作人
        # @type Operation: String
        # @param NetworkPolicyName: 策略名
        # @type NetworkPolicyName: String
        # @param OperationTime: 操作时间
        # @type OperationTime: String
        # @param AppId: 操作人appid
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type AppId: Integer
        # @param Uin: 操作人uin
        # @type Uin: String
        # @param PolicyId: 策略id
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type PolicyId: Integer

        attr_accessor :ClusterId, :ClusterName, :Region, :Action, :Operation, :NetworkPolicyName, :OperationTime, :AppId, :Uin, :PolicyId

        def initialize(clusterid=nil, clustername=nil, region=nil, action=nil, operation=nil, networkpolicyname=nil, operationtime=nil, appid=nil, uin=nil, policyid=nil)
          @ClusterId = clusterid
          @ClusterName = clustername
          @Region = region
          @Action = action
          @Operation = operation
          @NetworkPolicyName = networkpolicyname
          @OperationTime = operationtime
          @AppId = appid
          @Uin = uin
          @PolicyId = policyid
        end

        def deserialize(params)
          @ClusterId = params['ClusterId']
          @ClusterName = params['ClusterName']
          @Region = params['Region']
          @Action = params['Action']
          @Operation = params['Operation']
          @NetworkPolicyName = params['NetworkPolicyName']
          @OperationTime = params['OperationTime']
          @AppId = params['AppId']
          @Uin = params['Uin']
          @PolicyId = params['PolicyId']
        end
      end

      # 网络集群资产返回的结构体
      class NetworkClusterInfoItem < TencentCloud::Common::AbstractModel
        # @param ClusterId: 集群id
        # @type ClusterId: String
        # @param ClusterName: 集群名字
        # @type ClusterName: String
        # @param ClusterVersion: 集群版本
        # @type ClusterVersion: String
        # @param ClusterOs: 集群操作系统
        # @type ClusterOs: String
        # @param ClusterType: 集群类型
        # @type ClusterType: String
        # @param Region: 集群区域
        # @type Region: String
        # @param NetworkPolicyPlugin: 集群网络插件
        # @type NetworkPolicyPlugin: String
        # @param ClusterStatus: 集群状态
        # @type ClusterStatus: String
        # @param TotalRuleCount: 总策略数量
        # @type TotalRuleCount: Integer
        # @param EnableRuleCount: 已开启策略数量
        # @type EnableRuleCount: Integer
        # @param NetworkPolicyPluginStatus: 集群网络插件状态，正常：Running 不正常：Error
        # @type NetworkPolicyPluginStatus: String
        # @param NetworkPolicyPluginError: 集群网络插件错误信息
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type NetworkPolicyPluginError: String
        # @param ClusterNetworkSettings: 容器网络插件
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ClusterNetworkSettings: String

        attr_accessor :ClusterId, :ClusterName, :ClusterVersion, :ClusterOs, :ClusterType, :Region, :NetworkPolicyPlugin, :ClusterStatus, :TotalRuleCount, :EnableRuleCount, :NetworkPolicyPluginStatus, :NetworkPolicyPluginError, :ClusterNetworkSettings

        def initialize(clusterid=nil, clustername=nil, clusterversion=nil, clusteros=nil, clustertype=nil, region=nil, networkpolicyplugin=nil, clusterstatus=nil, totalrulecount=nil, enablerulecount=nil, networkpolicypluginstatus=nil, networkpolicypluginerror=nil, clusternetworksettings=nil)
          @ClusterId = clusterid
          @ClusterName = clustername
          @ClusterVersion = clusterversion
          @ClusterOs = clusteros
          @ClusterType = clustertype
          @Region = region
          @NetworkPolicyPlugin = networkpolicyplugin
          @ClusterStatus = clusterstatus
          @TotalRuleCount = totalrulecount
          @EnableRuleCount = enablerulecount
          @NetworkPolicyPluginStatus = networkpolicypluginstatus
          @NetworkPolicyPluginError = networkpolicypluginerror
          @ClusterNetworkSettings = clusternetworksettings
        end

        def deserialize(params)
          @ClusterId = params['ClusterId']
          @ClusterName = params['ClusterName']
          @ClusterVersion = params['ClusterVersion']
          @ClusterOs = params['ClusterOs']
          @ClusterType = params['ClusterType']
          @Region = params['Region']
          @NetworkPolicyPlugin = params['NetworkPolicyPlugin']
          @ClusterStatus = params['ClusterStatus']
          @TotalRuleCount = params['TotalRuleCount']
          @EnableRuleCount = params['EnableRuleCount']
          @NetworkPolicyPluginStatus = params['NetworkPolicyPluginStatus']
          @NetworkPolicyPluginError = params['NetworkPolicyPluginError']
          @ClusterNetworkSettings = params['ClusterNetworkSettings']
        end
      end

      # 网络集群网络空间返回的结构体
      class NetworkClusterNamespaceInfo < TencentCloud::Common::AbstractModel
        # @param Labels: 网络空间标签
        # @type Labels: String
        # @param Name: 网络空间名字
        # @type Name: String

        attr_accessor :Labels, :Name

        def initialize(labels=nil, name=nil)
          @Labels = labels
          @Name = name
        end

        def deserialize(params)
          @Labels = params['Labels']
          @Name = params['Name']
        end
      end

      # 网络集群网络空间标签返回的结构体
      class NetworkClusterNamespaceLabelInfo < TencentCloud::Common::AbstractModel
        # @param Labels: 网络空间标签
        # @type Labels: String
        # @param Name: 网络空间名字
        # @type Name: String

        attr_accessor :Labels, :Name

        def initialize(labels=nil, name=nil)
          @Labels = labels
          @Name = name
        end

        def deserialize(params)
          @Labels = params['Labels']
          @Name = params['Name']
        end
      end

      # 网络集群pod返回的结构体
      class NetworkClusterPodInfo < TencentCloud::Common::AbstractModel
        # @param PodName: pod名字
        # @type PodName: String
        # @param Namespace: pod空间
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Namespace: String
        # @param Labels: pod标签
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Labels: String
        # @param WorkloadKind: pod类型
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type WorkloadKind: String

        attr_accessor :PodName, :Namespace, :Labels, :WorkloadKind

        def initialize(podname=nil, namespace=nil, labels=nil, workloadkind=nil)
          @PodName = podname
          @Namespace = namespace
          @Labels = labels
          @WorkloadKind = workloadkind
        end

        def deserialize(params)
          @PodName = params['PodName']
          @Namespace = params['Namespace']
          @Labels = params['Labels']
          @WorkloadKind = params['WorkloadKind']
        end
      end

      # 网络集群策略自定义规则
      class NetworkCustomPolicy < TencentCloud::Common::AbstractModel
        # @param Direction: 网络策略方向，分为FROM和TO
        # @type Direction: String
        # @param Ports: 网络策略策略端口
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Ports: Array
        # @param Peer: 网络策略策略对象

        # 开启待确认：PublishedNoConfirm

        # 开启已确认：PublishedConfirmed

        # 关闭中：unPublishing

        # 开启中：Publishing

        # 待开启：unPublishEdit
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Peer: Array

        attr_accessor :Direction, :Ports, :Peer

        def initialize(direction=nil, ports=nil, peer=nil)
          @Direction = direction
          @Ports = ports
          @Peer = peer
        end

        def deserialize(params)
          @Direction = params['Direction']
          unless params['Ports'].nil?
            @Ports = []
            params['Ports'].each do |i|
              networkports_tmp = NetworkPorts.new
              networkports_tmp.deserialize(i)
              @Ports << networkports_tmp
            end
          end
          unless params['Peer'].nil?
            @Peer = []
            params['Peer'].each do |i|
              networkpeer_tmp = NetworkPeer.new
              networkpeer_tmp.deserialize(i)
              @Peer << networkpeer_tmp
            end
          end
        end
      end

      # 网络集群策略自定义规则
      class NetworkPeer < TencentCloud::Common::AbstractModel
        # @param PeerType: 对象类型：

        # 命名空间：NamespaceSelector，代表NamespaceSelector有值

        # pod类型：PodSelector，代表NamespaceSelector和PodSelector都有值

        # ip类型：IPBlock，代表只有IPBlock有值
        # @type PeerType: String
        # @param NamespaceSelector: 空间选择器
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type NamespaceSelector: String
        # @param PodSelector: pod选择器
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type PodSelector: String
        # @param IPBlock: Ip选择器
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type IPBlock: String

        attr_accessor :PeerType, :NamespaceSelector, :PodSelector, :IPBlock

        def initialize(peertype=nil, namespaceselector=nil, podselector=nil, ipblock=nil)
          @PeerType = peertype
          @NamespaceSelector = namespaceselector
          @PodSelector = podselector
          @IPBlock = ipblock
        end

        def deserialize(params)
          @PeerType = params['PeerType']
          @NamespaceSelector = params['NamespaceSelector']
          @PodSelector = params['PodSelector']
          @IPBlock = params['IPBlock']
        end
      end

      # 网络集群策略返回的结构体
      class NetworkPolicyInfoItem < TencentCloud::Common::AbstractModel
        # @param Name: 网络策略名
        # @type Name: String
        # @param Description: 网络策略描述
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Description: String
        # @param PublishStatus: 发布状态：

        # 开启待确认：PublishedNoConfirm

        # 开启已确认：PublishedConfirmed

        # 关闭中：unPublishing

        # 开启中：Publishing

        # 待开启：unPublishEdit
        # @type PublishStatus: String
        # @param PolicySourceType: 策略类型：

        # 自动发现：System

        # 手动添加：Manual
        # @type PolicySourceType: String
        # @param Namespace: 策略空间
        # @type Namespace: String
        # @param PolicyCreateTime: 策略创建日期
        # @type PolicyCreateTime: String
        # @param NetworkPolicyPlugin: 策略类型

        # kube-router：KubeRouter

        # cilium：Cilium
        # @type NetworkPolicyPlugin: String
        # @param PublishResult: 策略发布结果
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type PublishResult: String
        # @param FromPolicyRule: 入站规则

        # 全部允许：1

        # 全部拒绝 ：2

        # 自定义：3
        # @type FromPolicyRule: Integer
        # @param ToPolicyRule: 入站规则

        # 全部允许：1

        # 全部拒绝 ：2

        # 自定义：3
        # @type ToPolicyRule: Integer
        # @param PodSelector: 作用对象
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type PodSelector: String
        # @param Id: 网络策略Id
        # @type Id: Integer

        attr_accessor :Name, :Description, :PublishStatus, :PolicySourceType, :Namespace, :PolicyCreateTime, :NetworkPolicyPlugin, :PublishResult, :FromPolicyRule, :ToPolicyRule, :PodSelector, :Id

        def initialize(name=nil, description=nil, publishstatus=nil, policysourcetype=nil, namespace=nil, policycreatetime=nil, networkpolicyplugin=nil, publishresult=nil, frompolicyrule=nil, topolicyrule=nil, podselector=nil, id=nil)
          @Name = name
          @Description = description
          @PublishStatus = publishstatus
          @PolicySourceType = policysourcetype
          @Namespace = namespace
          @PolicyCreateTime = policycreatetime
          @NetworkPolicyPlugin = networkpolicyplugin
          @PublishResult = publishresult
          @FromPolicyRule = frompolicyrule
          @ToPolicyRule = topolicyrule
          @PodSelector = podselector
          @Id = id
        end

        def deserialize(params)
          @Name = params['Name']
          @Description = params['Description']
          @PublishStatus = params['PublishStatus']
          @PolicySourceType = params['PolicySourceType']
          @Namespace = params['Namespace']
          @PolicyCreateTime = params['PolicyCreateTime']
          @NetworkPolicyPlugin = params['NetworkPolicyPlugin']
          @PublishResult = params['PublishResult']
          @FromPolicyRule = params['FromPolicyRule']
          @ToPolicyRule = params['ToPolicyRule']
          @PodSelector = params['PodSelector']
          @Id = params['Id']
        end
      end

      # 网络集群策略自定义规则端口
      class NetworkPorts < TencentCloud::Common::AbstractModel
        # @param Protocol: 网络策略协议
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Protocol: String
        # @param Port: 网络策略策略端口
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Port: String

        attr_accessor :Protocol, :Port

        def initialize(protocol=nil, port=nil)
          @Protocol = protocol
          @Port = port
        end

        def deserialize(params)
          @Protocol = params['Protocol']
          @Port = params['Port']
        end
      end

      # OpenTcssTrial请求参数结构体
      class OpenTcssTrialRequest < TencentCloud::Common::AbstractModel


        def initialize()
        end

        def deserialize(params)
        end
      end

      # OpenTcssTrial返回参数结构体
      class OpenTcssTrialResponse < TencentCloud::Common::AbstractModel
        # @param EndTime: 试用开通结束时间
        # @type EndTime: String
        # @param StartTime: 试用开通开始时间
        # @type StartTime: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :EndTime, :StartTime, :RequestId

        def initialize(endtime=nil, starttime=nil, requestid=nil)
          @EndTime = endtime
          @StartTime = starttime
          @RequestId = requestid
        end

        def deserialize(params)
          @EndTime = params['EndTime']
          @StartTime = params['StartTime']
          @RequestId = params['RequestId']
        end
      end

      # 容器安全端口信息列表
      class PortInfo < TencentCloud::Common::AbstractModel
        # @param Type: 类型
        # @type Type: String
        # @param PublicIP: 对外ip
        # @type PublicIP: String
        # @param PublicPort: 主机端口
        # @type PublicPort: Integer
        # @param ContainerPort: 容器端口
        # @type ContainerPort: Integer
        # @param ContainerPID: 容器Pid
        # @type ContainerPID: Integer
        # @param ContainerName: 容器名
        # @type ContainerName: String
        # @param HostID: 主机id
        # @type HostID: String
        # @param HostIP: 主机ip
        # @type HostIP: String
        # @param ProcessName: 进程名称
        # @type ProcessName: String
        # @param ListenContainer: 容器内监听地址
        # @type ListenContainer: String
        # @param ListenHost: 容器外监听地址
        # @type ListenHost: String
        # @param RunAs: 运行账号
        # @type RunAs: String
        # @param HostName: 主机名称
        # @type HostName: String
        # @param PublicIp: 外网ip
        # @type PublicIp: String
        # @param NodeID: 节点id
        # @type NodeID: String
        # @param PodIP: podip
        # @type PodIP: String
        # @param PodName: pod名称
        # @type PodName: String
        # @param NodeType: 节点类型
        # @type NodeType: String
        # @param NodeUniqueID: 超级节点唯一id
        # @type NodeUniqueID: String

        attr_accessor :Type, :PublicIP, :PublicPort, :ContainerPort, :ContainerPID, :ContainerName, :HostID, :HostIP, :ProcessName, :ListenContainer, :ListenHost, :RunAs, :HostName, :PublicIp, :NodeID, :PodIP, :PodName, :NodeType, :NodeUniqueID

        def initialize(type=nil, publicip=nil, publicport=nil, containerport=nil, containerpid=nil, containername=nil, hostid=nil, hostip=nil, processname=nil, listencontainer=nil, listenhost=nil, runas=nil, hostname=nil, publicip=nil, nodeid=nil, podip=nil, podname=nil, nodetype=nil, nodeuniqueid=nil)
          @Type = type
          @PublicIP = publicip
          @PublicPort = publicport
          @ContainerPort = containerport
          @ContainerPID = containerpid
          @ContainerName = containername
          @HostID = hostid
          @HostIP = hostip
          @ProcessName = processname
          @ListenContainer = listencontainer
          @ListenHost = listenhost
          @RunAs = runas
          @HostName = hostname
          @PublicIp = publicip
          @NodeID = nodeid
          @PodIP = podip
          @PodName = podname
          @NodeType = nodetype
          @NodeUniqueID = nodeuniqueid
        end

        def deserialize(params)
          @Type = params['Type']
          @PublicIP = params['PublicIP']
          @PublicPort = params['PublicPort']
          @ContainerPort = params['ContainerPort']
          @ContainerPID = params['ContainerPID']
          @ContainerName = params['ContainerName']
          @HostID = params['HostID']
          @HostIP = params['HostIP']
          @ProcessName = params['ProcessName']
          @ListenContainer = params['ListenContainer']
          @ListenHost = params['ListenHost']
          @RunAs = params['RunAs']
          @HostName = params['HostName']
          @PublicIp = params['PublicIp']
          @NodeID = params['NodeID']
          @PodIP = params['PodIP']
          @PodName = params['PodName']
          @NodeType = params['NodeType']
          @NodeUniqueID = params['NodeUniqueID']
        end
      end

      # 运行时安全，进程基础信息
      class ProcessBaseInfo < TencentCloud::Common::AbstractModel
        # @param ProcessStartUser: 进程启动用户
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ProcessStartUser: String
        # @param ProcessUserGroup: 进程用户组
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ProcessUserGroup: String
        # @param ProcessPath: 进程路径
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ProcessPath: String
        # @param ProcessParam: 进程命令行参数
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ProcessParam: String

        attr_accessor :ProcessStartUser, :ProcessUserGroup, :ProcessPath, :ProcessParam

        def initialize(processstartuser=nil, processusergroup=nil, processpath=nil, processparam=nil)
          @ProcessStartUser = processstartuser
          @ProcessUserGroup = processusergroup
          @ProcessPath = processpath
          @ProcessParam = processparam
        end

        def deserialize(params)
          @ProcessStartUser = params['ProcessStartUser']
          @ProcessUserGroup = params['ProcessUserGroup']
          @ProcessPath = params['ProcessPath']
          @ProcessParam = params['ProcessParam']
        end
      end

      # 运行是安全详情，进程基础信息
      class ProcessDetailBaseInfo < TencentCloud::Common::AbstractModel
        # @param ProcessName: 进程名称
        # @type ProcessName: String
        # @param ProcessId: 进程pid
        # @type ProcessId: Integer
        # @param ProcessStartUser: 进程启动用户
        # @type ProcessStartUser: String
        # @param ProcessUserGroup: 进程用户组
        # @type ProcessUserGroup: String
        # @param ProcessPath: 进程路径
        # @type ProcessPath: String
        # @param ProcessParam: 进程命令行参数
        # @type ProcessParam: String

        attr_accessor :ProcessName, :ProcessId, :ProcessStartUser, :ProcessUserGroup, :ProcessPath, :ProcessParam

        def initialize(processname=nil, processid=nil, processstartuser=nil, processusergroup=nil, processpath=nil, processparam=nil)
          @ProcessName = processname
          @ProcessId = processid
          @ProcessStartUser = processstartuser
          @ProcessUserGroup = processusergroup
          @ProcessPath = processpath
          @ProcessParam = processparam
        end

        def deserialize(params)
          @ProcessName = params['ProcessName']
          @ProcessId = params['ProcessId']
          @ProcessStartUser = params['ProcessStartUser']
          @ProcessUserGroup = params['ProcessUserGroup']
          @ProcessPath = params['ProcessPath']
          @ProcessParam = params['ProcessParam']
        end
      end

      # 运行是安全详情，进程信息
      class ProcessDetailInfo < TencentCloud::Common::AbstractModel
        # @param ProcessName: 进程名称
        # @type ProcessName: String
        # @param ProcessAuthority: 进程权限
        # @type ProcessAuthority: String
        # @param ProcessId: 进程pid
        # @type ProcessId: Integer
        # @param ProcessStartUser: 进程启动用户
        # @type ProcessStartUser: String
        # @param ProcessUserGroup: 进程用户组
        # @type ProcessUserGroup: String
        # @param ProcessPath: 进程路径
        # @type ProcessPath: String
        # @param ProcessTree: 进程树
        # @type ProcessTree: String
        # @param ProcessMd5: 进程md5
        # @type ProcessMd5: String
        # @param ProcessParam: 进程命令行参数
        # @type ProcessParam: String

        attr_accessor :ProcessName, :ProcessAuthority, :ProcessId, :ProcessStartUser, :ProcessUserGroup, :ProcessPath, :ProcessTree, :ProcessMd5, :ProcessParam

        def initialize(processname=nil, processauthority=nil, processid=nil, processstartuser=nil, processusergroup=nil, processpath=nil, processtree=nil, processmd5=nil, processparam=nil)
          @ProcessName = processname
          @ProcessAuthority = processauthority
          @ProcessId = processid
          @ProcessStartUser = processstartuser
          @ProcessUserGroup = processusergroup
          @ProcessPath = processpath
          @ProcessTree = processtree
          @ProcessMd5 = processmd5
          @ProcessParam = processparam
        end

        def deserialize(params)
          @ProcessName = params['ProcessName']
          @ProcessAuthority = params['ProcessAuthority']
          @ProcessId = params['ProcessId']
          @ProcessStartUser = params['ProcessStartUser']
          @ProcessUserGroup = params['ProcessUserGroup']
          @ProcessPath = params['ProcessPath']
          @ProcessTree = params['ProcessTree']
          @ProcessMd5 = params['ProcessMd5']
          @ProcessParam = params['ProcessParam']
        end
      end

      # 容器安全进程列表
      class ProcessInfo < TencentCloud::Common::AbstractModel
        # @param StartTime: 进程启动时间
        # @type StartTime: String
        # @param RunAs: 运行用户
        # @type RunAs: String
        # @param CmdLine: 命令行参数
        # @type CmdLine: String
        # @param Exe: Exe路径
        # @type Exe: String
        # @param PID: 主机PID
        # @type PID: Integer
        # @param ContainerPID: 容器内pid
        # @type ContainerPID: Integer
        # @param ContainerName: 容器名称
        # @type ContainerName: String
        # @param HostID: 主机id
        # @type HostID: String
        # @param HostIP: 主机ip
        # @type HostIP: String
        # @param ProcessName: 进程名称
        # @type ProcessName: String
        # @param HostName: 主机名称
        # @type HostName: String
        # @param PublicIp: 外网ip
        # @type PublicIp: String
        # @param NodeID: 节点id
        # @type NodeID: String
        # @param PodIP: podip
        # @type PodIP: String
        # @param PodName: pod名称
        # @type PodName: String
        # @param NodeType: 节点类型
        # @type NodeType: String
        # @param NodeUniqueID: 超级节点唯一id
        # @type NodeUniqueID: String

        attr_accessor :StartTime, :RunAs, :CmdLine, :Exe, :PID, :ContainerPID, :ContainerName, :HostID, :HostIP, :ProcessName, :HostName, :PublicIp, :NodeID, :PodIP, :PodName, :NodeType, :NodeUniqueID

        def initialize(starttime=nil, runas=nil, cmdline=nil, exe=nil, pid=nil, containerpid=nil, containername=nil, hostid=nil, hostip=nil, processname=nil, hostname=nil, publicip=nil, nodeid=nil, podip=nil, podname=nil, nodetype=nil, nodeuniqueid=nil)
          @StartTime = starttime
          @RunAs = runas
          @CmdLine = cmdline
          @Exe = exe
          @PID = pid
          @ContainerPID = containerpid
          @ContainerName = containername
          @HostID = hostid
          @HostIP = hostip
          @ProcessName = processname
          @HostName = hostname
          @PublicIp = publicip
          @NodeID = nodeid
          @PodIP = podip
          @PodName = podname
          @NodeType = nodetype
          @NodeUniqueID = nodeuniqueid
        end

        def deserialize(params)
          @StartTime = params['StartTime']
          @RunAs = params['RunAs']
          @CmdLine = params['CmdLine']
          @Exe = params['Exe']
          @PID = params['PID']
          @ContainerPID = params['ContainerPID']
          @ContainerName = params['ContainerName']
          @HostID = params['HostID']
          @HostIP = params['HostIP']
          @ProcessName = params['ProcessName']
          @HostName = params['HostName']
          @PublicIp = params['PublicIp']
          @NodeID = params['NodeID']
          @PodIP = params['PodIP']
          @PodName = params['PodName']
          @NodeType = params['NodeType']
          @NodeUniqueID = params['NodeUniqueID']
        end
      end

      # 主机所属项目
      class ProjectInfo < TencentCloud::Common::AbstractModel
        # @param ProjectName: 项目名称
        # @type ProjectName: String
        # @param ProjectID: 项目ID
        # @type ProjectID: Integer

        attr_accessor :ProjectName, :ProjectID

        def initialize(projectname=nil, projectid=nil)
          @ProjectName = projectname
          @ProjectID = projectid
        end

        def deserialize(params)
          @ProjectName = params['ProjectName']
          @ProjectID = params['ProjectID']
        end
      end

      # 促销活动内容
      class PromotionActivityContent < TencentCloud::Common::AbstractModel
        # @param MonthNum: 月数
        # @type MonthNum: Integer
        # @param CoresCountLimit: 核数最低限量
        # @type CoresCountLimit: Integer
        # @param ProfessionalDiscount: 专业版折扣
        # @type ProfessionalDiscount: Integer
        # @param ImageAuthorizationNum: 附赠镜像数
        # @type ImageAuthorizationNum: Integer

        attr_accessor :MonthNum, :CoresCountLimit, :ProfessionalDiscount, :ImageAuthorizationNum

        def initialize(monthnum=nil, corescountlimit=nil, professionaldiscount=nil, imageauthorizationnum=nil)
          @MonthNum = monthnum
          @CoresCountLimit = corescountlimit
          @ProfessionalDiscount = professionaldiscount
          @ImageAuthorizationNum = imageauthorizationnum
        end

        def deserialize(params)
          @MonthNum = params['MonthNum']
          @CoresCountLimit = params['CoresCountLimit']
          @ProfessionalDiscount = params['ProfessionalDiscount']
          @ImageAuthorizationNum = params['ImageAuthorizationNum']
        end
      end

      # 漏洞防御插件 rasp信息
      class RaspInfo < TencentCloud::Common::AbstractModel
        # @param Name: rasp名称
        # @type Name: String
        # @param Value: rasp  描述
        # @type Value: String

        attr_accessor :Name, :Value

        def initialize(name=nil, value=nil)
          @Name = name
          @Value = value
        end

        def deserialize(params)
          @Name = params['Name']
          @Value = params['Value']
        end
      end

      # 地域信息
      class RegionInfo < TencentCloud::Common::AbstractModel
        # @param Region: 地域标识
        # @type Region: String
        # @param RegionName: 地域名称
        # @type RegionName: String

        attr_accessor :Region, :RegionName

        def initialize(region=nil, regionname=nil)
          @Region = region
          @RegionName = regionname
        end

        def deserialize(params)
          @Region = params['Region']
          @RegionName = params['RegionName']
        end
      end

      # 镜像仓库联通性检测结果
      class RegistryConnDetectResult < TencentCloud::Common::AbstractModel
        # @param Quuid: 联通性检测的主机quuid 或者 backend
        # @type Quuid: String
        # @param Uuid: 联通性检测的主机uuid 或者 backend
        # @type Uuid: String
        # @param ConnDetectStatus: 检测结果状态
        # @type ConnDetectStatus: String
        # @param ConnDetectMessage: 检测结果信息
        # @type ConnDetectMessage: String
        # @param Solution: 失败的解决方案
        # @type Solution: String
        # @param FailReason: 失败原因
        # @type FailReason: String

        attr_accessor :Quuid, :Uuid, :ConnDetectStatus, :ConnDetectMessage, :Solution, :FailReason

        def initialize(quuid=nil, uuid=nil, conndetectstatus=nil, conndetectmessage=nil, solution=nil, failreason=nil)
          @Quuid = quuid
          @Uuid = uuid
          @ConnDetectStatus = conndetectstatus
          @ConnDetectMessage = conndetectmessage
          @Solution = solution
          @FailReason = failreason
        end

        def deserialize(params)
          @Quuid = params['Quuid']
          @Uuid = params['Uuid']
          @ConnDetectStatus = params['ConnDetectStatus']
          @ConnDetectMessage = params['ConnDetectMessage']
          @Solution = params['Solution']
          @FailReason = params['FailReason']
        end
      end

      # RemoveAssetImageRegistryRegistryDetail请求参数结构体
      class RemoveAssetImageRegistryRegistryDetailRequest < TencentCloud::Common::AbstractModel
        # @param RegistryId: 仓库唯一id
        # @type RegistryId: Integer

        attr_accessor :RegistryId

        def initialize(registryid=nil)
          @RegistryId = registryid
        end

        def deserialize(params)
          @RegistryId = params['RegistryId']
        end
      end

      # RemoveAssetImageRegistryRegistryDetail返回参数结构体
      class RemoveAssetImageRegistryRegistryDetailResponse < TencentCloud::Common::AbstractModel
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RequestId

        def initialize(requestid=nil)
          @RequestId = requestid
        end

        def deserialize(params)
          @RequestId = params['RequestId']
        end
      end

      # RenewImageAuthorizeState请求参数结构体
      class RenewImageAuthorizeStateRequest < TencentCloud::Common::AbstractModel
        # @param AllImages: 是否全部未授权镜像
        # @type AllImages: Boolean
        # @param ImageIds: 镜像ids
        # @type ImageIds: Array
        # @param NeedScan: 是否授权后自动扫描
        # @type NeedScan: Boolean
        # @param ScanType: 扫描类型
        # @type ScanType: Array

        attr_accessor :AllImages, :ImageIds, :NeedScan, :ScanType

        def initialize(allimages=nil, imageids=nil, needscan=nil, scantype=nil)
          @AllImages = allimages
          @ImageIds = imageids
          @NeedScan = needscan
          @ScanType = scantype
        end

        def deserialize(params)
          @AllImages = params['AllImages']
          @ImageIds = params['ImageIds']
          @NeedScan = params['NeedScan']
          @ScanType = params['ScanType']
        end
      end

      # RenewImageAuthorizeState返回参数结构体
      class RenewImageAuthorizeStateResponse < TencentCloud::Common::AbstractModel
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RequestId

        def initialize(requestid=nil)
          @RequestId = requestid
        end

        def deserialize(params)
          @RequestId = params['RequestId']
        end
      end

      # ResetSecLogTopicConfig请求参数结构体
      class ResetSecLogTopicConfigRequest < TencentCloud::Common::AbstractModel
        # @param ConfigType: 配置类型(ckafka/cls)
        # @type ConfigType: String
        # @param LogType: 日志类型
        # @type LogType: String

        attr_accessor :ConfigType, :LogType

        def initialize(configtype=nil, logtype=nil)
          @ConfigType = configtype
          @LogType = logtype
        end

        def deserialize(params)
          @ConfigType = params['ConfigType']
          @LogType = params['LogType']
        end
      end

      # ResetSecLogTopicConfig返回参数结构体
      class ResetSecLogTopicConfigResponse < TencentCloud::Common::AbstractModel
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RequestId

        def initialize(requestid=nil)
          @RequestId = requestid
        end

        def deserialize(params)
          @RequestId = params['RequestId']
        end
      end

      # 运行时容器反弹shell事件描述信息
      class ReverseShellEventDescription < TencentCloud::Common::AbstractModel
        # @param Description: 描述信息
        # @type Description: String
        # @param Solution: 解决方案
        # @type Solution: String
        # @param Remark: 事件备注信息
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Remark: String
        # @param DstAddress: 目标地址
        # @type DstAddress: String
        # @param OperationTime: 事件最后一次处理的时间
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type OperationTime: String

        attr_accessor :Description, :Solution, :Remark, :DstAddress, :OperationTime

        def initialize(description=nil, solution=nil, remark=nil, dstaddress=nil, operationtime=nil)
          @Description = description
          @Solution = solution
          @Remark = remark
          @DstAddress = dstaddress
          @OperationTime = operationtime
        end

        def deserialize(params)
          @Description = params['Description']
          @Solution = params['Solution']
          @Remark = params['Remark']
          @DstAddress = params['DstAddress']
          @OperationTime = params['OperationTime']
        end
      end

      # 容器安全运行时高危系统调用信息
      class ReverseShellEventInfo < TencentCloud::Common::AbstractModel
        # @param ProcessName: 进程名称
        # @type ProcessName: String
        # @param ProcessPath: 进程路径
        # @type ProcessPath: String
        # @param ImageId: 镜像id
        # @type ImageId: String
        # @param ContainerId: 容器id
        # @type ContainerId: String
        # @param ImageName: 镜像名
        # @type ImageName: String
        # @param ContainerName: 容器名
        # @type ContainerName: String
        # @param FoundTime: 生成时间
        # @type FoundTime: String
        # @param Solution: 事件解决方案
        # @type Solution: String
        # @param Description: 事件详细描述
        # @type Description: String
        # @param Status: 状态，EVENT_UNDEAL:事件未处理
        #     EVENT_DEALED:事件已经处理
        #     EVENT_INGNORE：事件已经忽略
        #     EVENT_ADD_WHITE：时间已经加白
        # @type Status: String
        # @param EventId: 事件id
        # @type EventId: String
        # @param Remark: 备注
        # @type Remark: String
        # @param PProcessName: 父进程名
        # @type PProcessName: String
        # @param EventCount: 事件数量
        # @type EventCount: Integer
        # @param LatestFoundTime: 最近生成时间
        # @type LatestFoundTime: String
        # @param DstAddress: 目标地址
        # @type DstAddress: String
        # @param ContainerNetStatus: 网络状态
        # 未隔离  	NORMAL
        # 已隔离		ISOLATED
        # 隔离中		ISOLATING
        # 隔离失败	ISOLATE_FAILED
        # 解除隔离中  RESTORING
        # 解除隔离失败 RESTORE_FAILED
        # @type ContainerNetStatus: String
        # @param ContainerNetSubStatus: 容器子状态
        # "AGENT_OFFLINE"       //Agent离线
        # 	"NODE_DESTROYED"      //节点已销毁
        # 	"CONTAINER_EXITED"    //容器已退出
        # 	"CONTAINER_DESTROYED" //容器已销毁
        # 	"SHARED_HOST"         // 容器与主机共享网络
        # 	"RESOURCE_LIMIT"      //隔离操作资源超限
        # 	"UNKNOW"              // 原因未知
        # @type ContainerNetSubStatus: String
        # @param ContainerIsolateOperationSrc: 容器隔离操作来源
        # @type ContainerIsolateOperationSrc: String
        # @param ContainerStatus: 容器状态
        # 正在运行: RUNNING
        # 暂停: PAUSED
        # 停止: STOPPED
        # 已经创建: CREATED
        # 已经销毁: DESTROYED
        # 正在重启中: RESTARTING
        # 迁移中: REMOVING
        # @type ContainerStatus: String

        attr_accessor :ProcessName, :ProcessPath, :ImageId, :ContainerId, :ImageName, :ContainerName, :FoundTime, :Solution, :Description, :Status, :EventId, :Remark, :PProcessName, :EventCount, :LatestFoundTime, :DstAddress, :ContainerNetStatus, :ContainerNetSubStatus, :ContainerIsolateOperationSrc, :ContainerStatus

        def initialize(processname=nil, processpath=nil, imageid=nil, containerid=nil, imagename=nil, containername=nil, foundtime=nil, solution=nil, description=nil, status=nil, eventid=nil, remark=nil, pprocessname=nil, eventcount=nil, latestfoundtime=nil, dstaddress=nil, containernetstatus=nil, containernetsubstatus=nil, containerisolateoperationsrc=nil, containerstatus=nil)
          @ProcessName = processname
          @ProcessPath = processpath
          @ImageId = imageid
          @ContainerId = containerid
          @ImageName = imagename
          @ContainerName = containername
          @FoundTime = foundtime
          @Solution = solution
          @Description = description
          @Status = status
          @EventId = eventid
          @Remark = remark
          @PProcessName = pprocessname
          @EventCount = eventcount
          @LatestFoundTime = latestfoundtime
          @DstAddress = dstaddress
          @ContainerNetStatus = containernetstatus
          @ContainerNetSubStatus = containernetsubstatus
          @ContainerIsolateOperationSrc = containerisolateoperationsrc
          @ContainerStatus = containerstatus
        end

        def deserialize(params)
          @ProcessName = params['ProcessName']
          @ProcessPath = params['ProcessPath']
          @ImageId = params['ImageId']
          @ContainerId = params['ContainerId']
          @ImageName = params['ImageName']
          @ContainerName = params['ContainerName']
          @FoundTime = params['FoundTime']
          @Solution = params['Solution']
          @Description = params['Description']
          @Status = params['Status']
          @EventId = params['EventId']
          @Remark = params['Remark']
          @PProcessName = params['PProcessName']
          @EventCount = params['EventCount']
          @LatestFoundTime = params['LatestFoundTime']
          @DstAddress = params['DstAddress']
          @ContainerNetStatus = params['ContainerNetStatus']
          @ContainerNetSubStatus = params['ContainerNetSubStatus']
          @ContainerIsolateOperationSrc = params['ContainerIsolateOperationSrc']
          @ContainerStatus = params['ContainerStatus']
        end
      end

      # 反弹shell白名单信息
      class ReverseShellWhiteListBaseInfo < TencentCloud::Common::AbstractModel
        # @param Id: 白名单id
        # @type Id: String
        # @param ImageCount: 镜像数量
        # @type ImageCount: Integer
        # @param ProcessName: 连接进程名字
        # @type ProcessName: String
        # @param DstIp: 目标地址ip
        # @type DstIp: String
        # @param CreateTime: 创建时间
        # @type CreateTime: String
        # @param UpdateTime: 更新时间
        # @type UpdateTime: String
        # @param DstPort: 目标端口
        # @type DstPort: String
        # @param IsGlobal: 是否是全局白名单，true全局
        # @type IsGlobal: Boolean
        # @param ImageIds: 镜像id数组，为空代表全部
        # @type ImageIds: Array

        attr_accessor :Id, :ImageCount, :ProcessName, :DstIp, :CreateTime, :UpdateTime, :DstPort, :IsGlobal, :ImageIds

        def initialize(id=nil, imagecount=nil, processname=nil, dstip=nil, createtime=nil, updatetime=nil, dstport=nil, isglobal=nil, imageids=nil)
          @Id = id
          @ImageCount = imagecount
          @ProcessName = processname
          @DstIp = dstip
          @CreateTime = createtime
          @UpdateTime = updatetime
          @DstPort = dstport
          @IsGlobal = isglobal
          @ImageIds = imageids
        end

        def deserialize(params)
          @Id = params['Id']
          @ImageCount = params['ImageCount']
          @ProcessName = params['ProcessName']
          @DstIp = params['DstIp']
          @CreateTime = params['CreateTime']
          @UpdateTime = params['UpdateTime']
          @DstPort = params['DstPort']
          @IsGlobal = params['IsGlobal']
          @ImageIds = params['ImageIds']
        end
      end

      # 反弹shell白名单信息
      class ReverseShellWhiteListInfo < TencentCloud::Common::AbstractModel
        # @param DstIp: 目标IP
        # @type DstIp: String
        # @param DstPort: 目标端口
        # @type DstPort: String
        # @param ProcessName: 目标进程
        # @type ProcessName: String
        # @param ImageIds: 镜像id数组，为空代表全部
        # @type ImageIds: Array
        # @param Id: 白名单id，如果新建则id为空
        # @type Id: String

        attr_accessor :DstIp, :DstPort, :ProcessName, :ImageIds, :Id

        def initialize(dstip=nil, dstport=nil, processname=nil, imageids=nil, id=nil)
          @DstIp = dstip
          @DstPort = dstport
          @ProcessName = processname
          @ImageIds = imageids
          @Id = id
        end

        def deserialize(params)
          @DstIp = params['DstIp']
          @DstPort = params['DstPort']
          @ProcessName = params['ProcessName']
          @ImageIds = params['ImageIds']
          @Id = params['Id']
        end
      end

      # 恶意请求事件信息
      class RiskDnsEventInfo < TencentCloud::Common::AbstractModel
        # @param EventID: 事件ID
        # @type EventID: Integer
        # @param EventType: 事件类型，恶意域名请求：DOMAIN，恶意IP请求：IP
        # @type EventType: String
        # @param Address: 恶意请求域名/IP
        # @type Address: String
        # @param ContainerID: 容器ID
        # @type ContainerID: String
        # @param ContainerName: 容器名称
        # @type ContainerName: String
        # @param ContainerNetStatus: 隔离状态
        # 未隔离  	NORMAL
        # 已隔离		ISOLATED
        # 隔离中		ISOLATING
        # 隔离失败	ISOLATE_FAILED
        # 解除隔离中  RESTORING
        # 解除隔离失败 RESTORE_FAILED
        # @type ContainerNetStatus: String
        # @param ContainerStatus: 容器状态
        # 正在运行: RUNNING
        # 暂停: PAUSED
        # 停止: STOPPED
        # 已经创建: CREATED
        # 已经销毁: DESTROYED
        # 正在重启中: RESTARTING
        # 迁移中: REMOVING
        # @type ContainerStatus: String
        # @param ContainerNetSubStatus: 容器子状态
        # "AGENT_OFFLINE"       //Agent离线
        # "NODE_DESTROYED"      //节点已销毁
        # "CONTAINER_EXITED"    //容器已退出
        # "CONTAINER_DESTROYED" //容器已销毁
        # "SHARED_HOST"         // 容器与主机共享网络
        # "RESOURCE_LIMIT"      //隔离操作资源超限
        # "UNKNOW"              // 原因未知
        # @type ContainerNetSubStatus: String
        # @param ContainerIsolateOperationSrc: 容器隔离操作来源
        # @type ContainerIsolateOperationSrc: String
        # @param ImageID: 镜像ID
        # @type ImageID: String
        # @param ImageName: 镜像名称
        # @type ImageName: String
        # @param FoundTime: 首次发现时间
        # @type FoundTime: String
        # @param LatestFoundTime: 最近生成时间
        # @type LatestFoundTime: String
        # @param EventStatus: 事件状态
        # EVENT_UNDEAL： 待处理
        # EVENT_DEALED：已处理
        # EVENT_IGNORE： 已忽略
        # EVENT_ADD_WHITE：已加白
        # @type EventStatus: String
        # @param EventCount: 恶意请求次数
        # @type EventCount: Integer
        # @param Description: 事件描述
        # @type Description: String
        # @param Solution: 解决方案
        # @type Solution: String
        # @param City: 恶意IP所属城市
        # @type City: String
        # @param HostName: 主机名称
        # @type HostName: String
        # @param HostID: 主机ID
        # @type HostID: String
        # @param HostIP: 内网IP
        # @type HostIP: String
        # @param PublicIP: 外网IP
        # @type PublicIP: String
        # @param NodeType: 节点类型：NORMAL普通节点、SUPER超级节点
        # @type NodeType: String
        # @param NodeName: 节点名称
        # @type NodeName: String
        # @param PodIP: pod ip
        # @type PodIP: String
        # @param PodName: pod 名称
        # @type PodName: String
        # @param ClusterID: 集群ID
        # @type ClusterID: String
        # @param NodeID: 节点id
        # @type NodeID: String
        # @param NodeUniqueID: 节点唯一id
        # @type NodeUniqueID: String
        # @param ClusterName: 集群名称
        # @type ClusterName: String

        attr_accessor :EventID, :EventType, :Address, :ContainerID, :ContainerName, :ContainerNetStatus, :ContainerStatus, :ContainerNetSubStatus, :ContainerIsolateOperationSrc, :ImageID, :ImageName, :FoundTime, :LatestFoundTime, :EventStatus, :EventCount, :Description, :Solution, :City, :HostName, :HostID, :HostIP, :PublicIP, :NodeType, :NodeName, :PodIP, :PodName, :ClusterID, :NodeID, :NodeUniqueID, :ClusterName

        def initialize(eventid=nil, eventtype=nil, address=nil, containerid=nil, containername=nil, containernetstatus=nil, containerstatus=nil, containernetsubstatus=nil, containerisolateoperationsrc=nil, imageid=nil, imagename=nil, foundtime=nil, latestfoundtime=nil, eventstatus=nil, eventcount=nil, description=nil, solution=nil, city=nil, hostname=nil, hostid=nil, hostip=nil, publicip=nil, nodetype=nil, nodename=nil, podip=nil, podname=nil, clusterid=nil, nodeid=nil, nodeuniqueid=nil, clustername=nil)
          @EventID = eventid
          @EventType = eventtype
          @Address = address
          @ContainerID = containerid
          @ContainerName = containername
          @ContainerNetStatus = containernetstatus
          @ContainerStatus = containerstatus
          @ContainerNetSubStatus = containernetsubstatus
          @ContainerIsolateOperationSrc = containerisolateoperationsrc
          @ImageID = imageid
          @ImageName = imagename
          @FoundTime = foundtime
          @LatestFoundTime = latestfoundtime
          @EventStatus = eventstatus
          @EventCount = eventcount
          @Description = description
          @Solution = solution
          @City = city
          @HostName = hostname
          @HostID = hostid
          @HostIP = hostip
          @PublicIP = publicip
          @NodeType = nodetype
          @NodeName = nodename
          @PodIP = podip
          @PodName = podname
          @ClusterID = clusterid
          @NodeID = nodeid
          @NodeUniqueID = nodeuniqueid
          @ClusterName = clustername
        end

        def deserialize(params)
          @EventID = params['EventID']
          @EventType = params['EventType']
          @Address = params['Address']
          @ContainerID = params['ContainerID']
          @ContainerName = params['ContainerName']
          @ContainerNetStatus = params['ContainerNetStatus']
          @ContainerStatus = params['ContainerStatus']
          @ContainerNetSubStatus = params['ContainerNetSubStatus']
          @ContainerIsolateOperationSrc = params['ContainerIsolateOperationSrc']
          @ImageID = params['ImageID']
          @ImageName = params['ImageName']
          @FoundTime = params['FoundTime']
          @LatestFoundTime = params['LatestFoundTime']
          @EventStatus = params['EventStatus']
          @EventCount = params['EventCount']
          @Description = params['Description']
          @Solution = params['Solution']
          @City = params['City']
          @HostName = params['HostName']
          @HostID = params['HostID']
          @HostIP = params['HostIP']
          @PublicIP = params['PublicIP']
          @NodeType = params['NodeType']
          @NodeName = params['NodeName']
          @PodIP = params['PodIP']
          @PodName = params['PodName']
          @ClusterID = params['ClusterID']
          @NodeID = params['NodeID']
          @NodeUniqueID = params['NodeUniqueID']
          @ClusterName = params['ClusterName']
        end
      end

      # 运行时容器高危系统调用事件描述信息
      class RiskSyscallEventDescription < TencentCloud::Common::AbstractModel
        # @param Description: 描述信息
        # @type Description: String
        # @param Solution: 解决方案
        # @type Solution: String
        # @param Remark: 事件备注信息
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Remark: String
        # @param SyscallName: 系统调用名称
        # @type SyscallName: String
        # @param OperationTime: 事件最后一次处理的时间
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type OperationTime: String

        attr_accessor :Description, :Solution, :Remark, :SyscallName, :OperationTime

        def initialize(description=nil, solution=nil, remark=nil, syscallname=nil, operationtime=nil)
          @Description = description
          @Solution = solution
          @Remark = remark
          @SyscallName = syscallname
          @OperationTime = operationtime
        end

        def deserialize(params)
          @Description = params['Description']
          @Solution = params['Solution']
          @Remark = params['Remark']
          @SyscallName = params['SyscallName']
          @OperationTime = params['OperationTime']
        end
      end

      # 容器安全运行时高危系统调用信息
      class RiskSyscallEventInfo < TencentCloud::Common::AbstractModel
        # @param ProcessName: 进程名称
        # @type ProcessName: String
        # @param ProcessPath: 进程路径
        # @type ProcessPath: String
        # @param ImageId: 镜像id
        # @type ImageId: String
        # @param ContainerId: 容器id
        # @type ContainerId: String
        # @param ImageName: 镜像名
        # @type ImageName: String
        # @param ContainerName: 容器名
        # @type ContainerName: String
        # @param FoundTime: 生成时间
        # @type FoundTime: String
        # @param Solution: 事件解决方案
        # @type Solution: String
        # @param Description: 事件详细描述
        # @type Description: String
        # @param SyscallName: 系统调用名称
        # @type SyscallName: String
        # @param Status: 状态，EVENT_UNDEAL:事件未处理
        #     EVENT_DEALED:事件已经处理
        #     EVENT_INGNORE：事件已经忽略
        #     EVENT_ADD_WHITE：时间已经加白
        # @type Status: String
        # @param EventId: 事件id
        # @type EventId: String
        # @param NodeName: 节点名称
        # @type NodeName: String
        # @param PodName: pod(实例)的名字
        # @type PodName: String
        # @param Remark: 备注
        # @type Remark: String
        # @param RuleExist: 系统监控名称是否存在
        # @type RuleExist: Boolean
        # @param EventCount: 事件数量
        # @type EventCount: Integer
        # @param LatestFoundTime: 最近生成时间
        # @type LatestFoundTime: String
        # @param ContainerNetStatus: 网络状态
        # 未隔离  	NORMAL
        # 已隔离		ISOLATED
        # 隔离中		ISOLATING
        # 隔离失败	ISOLATE_FAILED
        # 解除隔离中  RESTORING
        # 解除隔离失败 RESTORE_FAILED
        # @type ContainerNetStatus: String
        # @param ContainerNetSubStatus: 容器子状态
        # "AGENT_OFFLINE"       //Agent离线
        # "NODE_DESTROYED"      //节点已销毁
        # "CONTAINER_EXITED"    //容器已退出
        # "CONTAINER_DESTROYED" //容器已销毁
        # "SHARED_HOST"         // 容器与主机共享网络
        # "RESOURCE_LIMIT"      //隔离操作资源超限
        # "UNKNOW"              // 原因未知
        # @type ContainerNetSubStatus: String
        # @param ContainerIsolateOperationSrc: 容器隔离操作来源
        # @type ContainerIsolateOperationSrc: String
        # @param ContainerStatus: 容器状态
        # 正在运行: RUNNING
        # 暂停: PAUSED
        # 停止: STOPPED
        # 已经创建: CREATED
        # 已经销毁: DESTROYED
        # 正在重启中: RESTARTING
        # 迁移中: REMOVING
        # @type ContainerStatus: String
        # @param NodeType: 节点类型：NORMAL普通节点、SUPER超级节点
        # @type NodeType: String
        # @param ClusterID: 集群I'D
        # @type ClusterID: String
        # @param PodIP: pod ip
        # @type PodIP: String
        # @param NodeUniqueID: 节点唯一id
        # @type NodeUniqueID: String
        # @param PublicIP: 节点公网ip
        # @type PublicIP: String
        # @param NodeID: 节点id
        # @type NodeID: String
        # @param HostID: uuid
        # @type HostID: String
        # @param HostIP: 节点内网ip
        # @type HostIP: String
        # @param ClusterName: 集群名称
        # @type ClusterName: String

        attr_accessor :ProcessName, :ProcessPath, :ImageId, :ContainerId, :ImageName, :ContainerName, :FoundTime, :Solution, :Description, :SyscallName, :Status, :EventId, :NodeName, :PodName, :Remark, :RuleExist, :EventCount, :LatestFoundTime, :ContainerNetStatus, :ContainerNetSubStatus, :ContainerIsolateOperationSrc, :ContainerStatus, :NodeType, :ClusterID, :PodIP, :NodeUniqueID, :PublicIP, :NodeID, :HostID, :HostIP, :ClusterName

        def initialize(processname=nil, processpath=nil, imageid=nil, containerid=nil, imagename=nil, containername=nil, foundtime=nil, solution=nil, description=nil, syscallname=nil, status=nil, eventid=nil, nodename=nil, podname=nil, remark=nil, ruleexist=nil, eventcount=nil, latestfoundtime=nil, containernetstatus=nil, containernetsubstatus=nil, containerisolateoperationsrc=nil, containerstatus=nil, nodetype=nil, clusterid=nil, podip=nil, nodeuniqueid=nil, publicip=nil, nodeid=nil, hostid=nil, hostip=nil, clustername=nil)
          @ProcessName = processname
          @ProcessPath = processpath
          @ImageId = imageid
          @ContainerId = containerid
          @ImageName = imagename
          @ContainerName = containername
          @FoundTime = foundtime
          @Solution = solution
          @Description = description
          @SyscallName = syscallname
          @Status = status
          @EventId = eventid
          @NodeName = nodename
          @PodName = podname
          @Remark = remark
          @RuleExist = ruleexist
          @EventCount = eventcount
          @LatestFoundTime = latestfoundtime
          @ContainerNetStatus = containernetstatus
          @ContainerNetSubStatus = containernetsubstatus
          @ContainerIsolateOperationSrc = containerisolateoperationsrc
          @ContainerStatus = containerstatus
          @NodeType = nodetype
          @ClusterID = clusterid
          @PodIP = podip
          @NodeUniqueID = nodeuniqueid
          @PublicIP = publicip
          @NodeID = nodeid
          @HostID = hostid
          @HostIP = hostip
          @ClusterName = clustername
        end

        def deserialize(params)
          @ProcessName = params['ProcessName']
          @ProcessPath = params['ProcessPath']
          @ImageId = params['ImageId']
          @ContainerId = params['ContainerId']
          @ImageName = params['ImageName']
          @ContainerName = params['ContainerName']
          @FoundTime = params['FoundTime']
          @Solution = params['Solution']
          @Description = params['Description']
          @SyscallName = params['SyscallName']
          @Status = params['Status']
          @EventId = params['EventId']
          @NodeName = params['NodeName']
          @PodName = params['PodName']
          @Remark = params['Remark']
          @RuleExist = params['RuleExist']
          @EventCount = params['EventCount']
          @LatestFoundTime = params['LatestFoundTime']
          @ContainerNetStatus = params['ContainerNetStatus']
          @ContainerNetSubStatus = params['ContainerNetSubStatus']
          @ContainerIsolateOperationSrc = params['ContainerIsolateOperationSrc']
          @ContainerStatus = params['ContainerStatus']
          @NodeType = params['NodeType']
          @ClusterID = params['ClusterID']
          @PodIP = params['PodIP']
          @NodeUniqueID = params['NodeUniqueID']
          @PublicIP = params['PublicIP']
          @NodeID = params['NodeID']
          @HostID = params['HostID']
          @HostIP = params['HostIP']
          @ClusterName = params['ClusterName']
        end
      end

      # 高危系统调用白名单信息
      class RiskSyscallWhiteListBaseInfo < TencentCloud::Common::AbstractModel
        # @param Id: 白名单id
        # @type Id: String
        # @param ImageCount: 镜像数量
        # @type ImageCount: Integer
        # @param ProcessPath: 连接进程路径
        # @type ProcessPath: String
        # @param SyscallNames: 系统调用名称列表
        # @type SyscallNames: Array
        # @param CreateTime: 创建时间
        # @type CreateTime: String
        # @param UpdateTime: 更新时间
        # @type UpdateTime: String
        # @param IsGlobal: 是否是全局白名单，true全局
        # @type IsGlobal: Boolean
        # @param ImageIds: 镜像id数组
        # @type ImageIds: Array

        attr_accessor :Id, :ImageCount, :ProcessPath, :SyscallNames, :CreateTime, :UpdateTime, :IsGlobal, :ImageIds

        def initialize(id=nil, imagecount=nil, processpath=nil, syscallnames=nil, createtime=nil, updatetime=nil, isglobal=nil, imageids=nil)
          @Id = id
          @ImageCount = imagecount
          @ProcessPath = processpath
          @SyscallNames = syscallnames
          @CreateTime = createtime
          @UpdateTime = updatetime
          @IsGlobal = isglobal
          @ImageIds = imageids
        end

        def deserialize(params)
          @Id = params['Id']
          @ImageCount = params['ImageCount']
          @ProcessPath = params['ProcessPath']
          @SyscallNames = params['SyscallNames']
          @CreateTime = params['CreateTime']
          @UpdateTime = params['UpdateTime']
          @IsGlobal = params['IsGlobal']
          @ImageIds = params['ImageIds']
        end
      end

      # 高危系统调用白名单信息
      class RiskSyscallWhiteListInfo < TencentCloud::Common::AbstractModel
        # @param ImageIds: 镜像id数组，为空代表全部
        # @type ImageIds: Array
        # @param SyscallNames: 系统调用名称，通过DescribeRiskSyscallNames接口获取枚举列表
        # @type SyscallNames: Array
        # @param ProcessPath: 目标进程
        # @type ProcessPath: String
        # @param Id: 白名单id，如果新建则id为空
        # @type Id: String

        attr_accessor :ImageIds, :SyscallNames, :ProcessPath, :Id

        def initialize(imageids=nil, syscallnames=nil, processpath=nil, id=nil)
          @ImageIds = imageids
          @SyscallNames = syscallnames
          @ProcessPath = processpath
          @Id = id
        end

        def deserialize(params)
          @ImageIds = params['ImageIds']
          @SyscallNames = params['SyscallNames']
          @ProcessPath = params['ProcessPath']
          @Id = params['Id']
        end
      end

      # 运行时安全，策略基本信息
      class RuleBaseInfo < TencentCloud::Common::AbstractModel
        # @param IsDefault: true: 默认策略，false:自定义策略
        # @type IsDefault: Boolean
        # @param EffectImageCount: 策略生效镜像数量
        # @type EffectImageCount: Integer
        # @param RuleId: 策略Id
        # @type RuleId: String
        # @param UpdateTime: 策略更新时间, 存在为空的情况
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type UpdateTime: String
        # @param RuleName: 策略名字
        # @type RuleName: String
        # @param EditUserName: 编辑用户名称
        # @type EditUserName: String
        # @param IsEnable: true: 策略启用，false：策略禁用
        # @type IsEnable: Boolean

        attr_accessor :IsDefault, :EffectImageCount, :RuleId, :UpdateTime, :RuleName, :EditUserName, :IsEnable

        def initialize(isdefault=nil, effectimagecount=nil, ruleid=nil, updatetime=nil, rulename=nil, editusername=nil, isenable=nil)
          @IsDefault = isdefault
          @EffectImageCount = effectimagecount
          @RuleId = ruleid
          @UpdateTime = updatetime
          @RuleName = rulename
          @EditUserName = editusername
          @IsEnable = isenable
        end

        def deserialize(params)
          @IsDefault = params['IsDefault']
          @EffectImageCount = params['EffectImageCount']
          @RuleId = params['RuleId']
          @UpdateTime = params['UpdateTime']
          @RuleName = params['RuleName']
          @EditUserName = params['EditUserName']
          @IsEnable = params['IsEnable']
        end
      end

      # 运行时安全事件基本信息
      class RunTimeEventBaseInfo < TencentCloud::Common::AbstractModel
        # @param EventId: 事件唯一ID
        # @type EventId: String
        # @param FoundTime: 事件发现时间
        # @type FoundTime: String
        # @param ContainerId: 容器id
        # @type ContainerId: String
        # @param ContainerName: 容器名称
        # @type ContainerName: String
        # @param ImageId: 镜像id
        # @type ImageId: String
        # @param ImageName: 镜像名称
        # @type ImageName: String
        # @param NodeName: 节点名称
        # @type NodeName: String
        # @param Status: 状态， “EVENT_UNDEAL”:事件未处理
        #     "EVENT_DEALED":事件已经处理
        #     "EVENT_INGNORE"：事件已经忽略
        # @type Status: String
        # @param EventName: 事件名称：
        # 宿主机文件访问逃逸、
        # Syscall逃逸、
        # MountNamespace逃逸、
        # 程序提权逃逸、
        # 特权容器启动逃逸、
        # 敏感路径挂载
        # 恶意进程启动
        # 文件篡改
        # @type EventName: String
        # @param EventType: 事件类型
        #    ESCAPE_HOST_ACESS_FILE:宿主机文件访问逃逸
        #    ESCAPE_MOUNT_NAMESPACE:MountNamespace逃逸
        #    ESCAPE_PRIVILEDGE:程序提权逃逸
        #    ESCAPE_PRIVILEDGE_CONTAINER_START:特权容器启动逃逸
        #    ESCAPE_MOUNT_SENSITIVE_PTAH:敏感路径挂载
        #    ESCAPE_SYSCALL:Syscall逃逸
        # @type EventType: String
        # @param EventCount: 事件数量
        # @type EventCount: Integer
        # @param LatestFoundTime: 最近生成时间
        # @type LatestFoundTime: String
        # @param HostIP: 内网ip
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type HostIP: String
        # @param ClientIP: 外网ip
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ClientIP: String
        # @param ContainerNetStatus: 网络状态
        # 未隔离  	NORMAL
        # 已隔离		ISOLATED
        # 隔离中		ISOLATING
        # 隔离失败	ISOLATE_FAILED
        # 解除隔离中  RESTORING
        # 解除隔离失败 RESTORE_FAILED
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ContainerNetStatus: String
        # @param ContainerNetSubStatus: 容器子状态
        # "AGENT_OFFLINE"       //Agent离线
        # "NODE_DESTROYED"      //节点已销毁
        # "CONTAINER_EXITED"    //容器已退出
        # "CONTAINER_DESTROYED" //容器已销毁
        # "SHARED_HOST"         // 容器与主机共享网络
        # "RESOURCE_LIMIT"      //隔离操作资源超限
        # "UNKNOW"              // 原因未知
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ContainerNetSubStatus: String
        # @param ContainerIsolateOperationSrc: 容器隔离操作来源
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ContainerIsolateOperationSrc: String
        # @param NodeID: 节点ID
        # @type NodeID: String
        # @param NodeType: 节点类型:NORMAL:普通节点;SUPER:超级节点
        # @type NodeType: String
        # @param NodeSubNetID: 节点子网ID
        # @type NodeSubNetID: String
        # @param NodeSubNetName: 节点子网名称
        # @type NodeSubNetName: String
        # @param NodeSubNetCIDR: 节点子网网段
        # @type NodeSubNetCIDR: String
        # @param PodName: pod名称
        # @type PodName: String
        # @param PodIP: podIP
        # @type PodIP: String
        # @param PodStatus: pod状态
        # @type PodStatus: String
        # @param ClusterID: 集群id
        # @type ClusterID: String
        # @param ClusterName: 集群名称
        # @type ClusterName: String
        # @param NodeUniqueID: 节点唯一id
        # @type NodeUniqueID: String
        # @param HostID: uuid
        # @type HostID: String
        # @param Namespace: Namespace
        # @type Namespace: String
        # @param WorkloadType: WorkloadType
        # @type WorkloadType: String

        attr_accessor :EventId, :FoundTime, :ContainerId, :ContainerName, :ImageId, :ImageName, :NodeName, :Status, :EventName, :EventType, :EventCount, :LatestFoundTime, :HostIP, :ClientIP, :ContainerNetStatus, :ContainerNetSubStatus, :ContainerIsolateOperationSrc, :NodeID, :NodeType, :NodeSubNetID, :NodeSubNetName, :NodeSubNetCIDR, :PodName, :PodIP, :PodStatus, :ClusterID, :ClusterName, :NodeUniqueID, :HostID, :Namespace, :WorkloadType

        def initialize(eventid=nil, foundtime=nil, containerid=nil, containername=nil, imageid=nil, imagename=nil, nodename=nil, status=nil, eventname=nil, eventtype=nil, eventcount=nil, latestfoundtime=nil, hostip=nil, clientip=nil, containernetstatus=nil, containernetsubstatus=nil, containerisolateoperationsrc=nil, nodeid=nil, nodetype=nil, nodesubnetid=nil, nodesubnetname=nil, nodesubnetcidr=nil, podname=nil, podip=nil, podstatus=nil, clusterid=nil, clustername=nil, nodeuniqueid=nil, hostid=nil, namespace=nil, workloadtype=nil)
          @EventId = eventid
          @FoundTime = foundtime
          @ContainerId = containerid
          @ContainerName = containername
          @ImageId = imageid
          @ImageName = imagename
          @NodeName = nodename
          @Status = status
          @EventName = eventname
          @EventType = eventtype
          @EventCount = eventcount
          @LatestFoundTime = latestfoundtime
          @HostIP = hostip
          @ClientIP = clientip
          @ContainerNetStatus = containernetstatus
          @ContainerNetSubStatus = containernetsubstatus
          @ContainerIsolateOperationSrc = containerisolateoperationsrc
          @NodeID = nodeid
          @NodeType = nodetype
          @NodeSubNetID = nodesubnetid
          @NodeSubNetName = nodesubnetname
          @NodeSubNetCIDR = nodesubnetcidr
          @PodName = podname
          @PodIP = podip
          @PodStatus = podstatus
          @ClusterID = clusterid
          @ClusterName = clustername
          @NodeUniqueID = nodeuniqueid
          @HostID = hostid
          @Namespace = namespace
          @WorkloadType = workloadtype
        end

        def deserialize(params)
          @EventId = params['EventId']
          @FoundTime = params['FoundTime']
          @ContainerId = params['ContainerId']
          @ContainerName = params['ContainerName']
          @ImageId = params['ImageId']
          @ImageName = params['ImageName']
          @NodeName = params['NodeName']
          @Status = params['Status']
          @EventName = params['EventName']
          @EventType = params['EventType']
          @EventCount = params['EventCount']
          @LatestFoundTime = params['LatestFoundTime']
          @HostIP = params['HostIP']
          @ClientIP = params['ClientIP']
          @ContainerNetStatus = params['ContainerNetStatus']
          @ContainerNetSubStatus = params['ContainerNetSubStatus']
          @ContainerIsolateOperationSrc = params['ContainerIsolateOperationSrc']
          @NodeID = params['NodeID']
          @NodeType = params['NodeType']
          @NodeSubNetID = params['NodeSubNetID']
          @NodeSubNetName = params['NodeSubNetName']
          @NodeSubNetCIDR = params['NodeSubNetCIDR']
          @PodName = params['PodName']
          @PodIP = params['PodIP']
          @PodStatus = params['PodStatus']
          @ClusterID = params['ClusterID']
          @ClusterName = params['ClusterName']
          @NodeUniqueID = params['NodeUniqueID']
          @HostID = params['HostID']
          @Namespace = params['Namespace']
          @WorkloadType = params['WorkloadType']
        end
      end

      # 容器安全
      # 描述键值对过滤器，用于条件过滤查询。例如过滤ID、名称、状态等
      # 若存在多个Filter时，Filter间的关系为逻辑与（AND）关系。
      # 若同一个Filter存在多个Values，同一Filter下Values间的关系为逻辑或（OR）关系。
      class RunTimeFilters < TencentCloud::Common::AbstractModel
        # @param Name: 过滤键的名称
        # @type Name: String
        # @param Values: 一个或者多个过滤值。
        # @type Values: Array
        # @param ExactMatch: 是否模糊查询
        # @type ExactMatch: Boolean

        attr_accessor :Name, :Values, :ExactMatch

        def initialize(name=nil, values=nil, exactmatch=nil)
          @Name = name
          @Values = values
          @ExactMatch = exactmatch
        end

        def deserialize(params)
          @Name = params['Name']
          @Values = params['Values']
          @ExactMatch = params['ExactMatch']
        end
      end

      # 运行时风险信息
      class RunTimeRiskInfo < TencentCloud::Common::AbstractModel
        # @param Cnt: 数量
        # @type Cnt: Integer
        # @param Level: 风险等级：
        # CRITICAL: 严重
        # HIGH: 高
        # MEDIUM：中
        # LOW: 低
        # @type Level: String

        attr_accessor :Cnt, :Level

        def initialize(cnt=nil, level=nil)
          @Cnt = cnt
          @Level = level
        end

        def deserialize(params)
          @Cnt = params['Cnt']
          @Level = params['Level']
        end
      end

      # 运行时趋势信息
      class RunTimeTendencyInfo < TencentCloud::Common::AbstractModel
        # @param CurTime: 当天时间
        # @type CurTime: String
        # @param Cnt: 当前数量
        # @type Cnt: Integer

        attr_accessor :CurTime, :Cnt

        def initialize(curtime=nil, cnt=nil)
          @CurTime = curtime
          @Cnt = cnt
        end

        def deserialize(params)
          @CurTime = params['CurTime']
          @Cnt = params['Cnt']
        end
      end

      # ScanComplianceAssetsByPolicyItem请求参数结构体
      class ScanComplianceAssetsByPolicyItemRequest < TencentCloud::Common::AbstractModel
        # @param CustomerPolicyItemId: 指定的检测项的ID
        # @type CustomerPolicyItemId: Integer
        # @param CustomerAssetIdSet: 要重新扫描的客户资产项ID的列表。
        # @type CustomerAssetIdSet: Array
        # @param AssetType: 扫描资产类型 <li>ASSET_CONTAINER Docker容器</li> <li>ASSET_IMAGE Docker镜像</li> <li>ASSET_HOST Docker主机</li> <li>ASSET_K8S Kubernetes</li> <li>ASSET_CONTAINERD Containerd主机</li> <li>ASSET_CONTAINERD_CONTAINER Containerd容器</li>
        # @type AssetType: String

        attr_accessor :CustomerPolicyItemId, :CustomerAssetIdSet, :AssetType

        def initialize(customerpolicyitemid=nil, customerassetidset=nil, assettype=nil)
          @CustomerPolicyItemId = customerpolicyitemid
          @CustomerAssetIdSet = customerassetidset
          @AssetType = assettype
        end

        def deserialize(params)
          @CustomerPolicyItemId = params['CustomerPolicyItemId']
          @CustomerAssetIdSet = params['CustomerAssetIdSet']
          @AssetType = params['AssetType']
        end
      end

      # ScanComplianceAssetsByPolicyItem返回参数结构体
      class ScanComplianceAssetsByPolicyItemResponse < TencentCloud::Common::AbstractModel
        # @param TaskId: 返回重新检测任务的ID。
        # @type TaskId: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TaskId, :RequestId

        def initialize(taskid=nil, requestid=nil)
          @TaskId = taskid
          @RequestId = requestid
        end

        def deserialize(params)
          @TaskId = params['TaskId']
          @RequestId = params['RequestId']
        end
      end

      # ScanComplianceAssets请求参数结构体
      class ScanComplianceAssetsRequest < TencentCloud::Common::AbstractModel
        # @param CustomerAssetIdSet: 要重新扫描的客户资产项ID的列表。
        # @type CustomerAssetIdSet: Array
        # @param AssetType: 扫描资产类型 <li>ASSET_CONTAINER Docker容器</li> <li>ASSET_IMAGE Docker镜像</li> <li>ASSET_HOST Docker主机</li> <li>ASSET_K8S Kubernetes</li> <li>ASSET_CONTAINERD Containerd主机</li> <li>ASSET_CONTAINERD_CONTAINER Containerd容器</li>
        # @type AssetType: String

        attr_accessor :CustomerAssetIdSet, :AssetType

        def initialize(customerassetidset=nil, assettype=nil)
          @CustomerAssetIdSet = customerassetidset
          @AssetType = assettype
        end

        def deserialize(params)
          @CustomerAssetIdSet = params['CustomerAssetIdSet']
          @AssetType = params['AssetType']
        end
      end

      # ScanComplianceAssets返回参数结构体
      class ScanComplianceAssetsResponse < TencentCloud::Common::AbstractModel
        # @param TaskId: 返回重新检测任务的ID。
        # @type TaskId: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TaskId, :RequestId

        def initialize(taskid=nil, requestid=nil)
          @TaskId = taskid
          @RequestId = requestid
        end

        def deserialize(params)
          @TaskId = params['TaskId']
          @RequestId = params['RequestId']
        end
      end

      # ScanCompliancePolicyItems请求参数结构体
      class ScanCompliancePolicyItemsRequest < TencentCloud::Common::AbstractModel
        # @param CustomerPolicyItemIdSet: 要重新扫描的客户检测项的列表。
        # @type CustomerPolicyItemIdSet: Array

        attr_accessor :CustomerPolicyItemIdSet

        def initialize(customerpolicyitemidset=nil)
          @CustomerPolicyItemIdSet = customerpolicyitemidset
        end

        def deserialize(params)
          @CustomerPolicyItemIdSet = params['CustomerPolicyItemIdSet']
        end
      end

      # ScanCompliancePolicyItems返回参数结构体
      class ScanCompliancePolicyItemsResponse < TencentCloud::Common::AbstractModel
        # @param TaskId: 返回重新检测任务的ID。
        # @type TaskId: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TaskId, :RequestId

        def initialize(taskid=nil, requestid=nil)
          @TaskId = taskid
          @RequestId = requestid
        end

        def deserialize(params)
          @TaskId = params['TaskId']
          @RequestId = params['RequestId']
        end
      end

      # ScanComplianceScanFailedAssets请求参数结构体
      class ScanComplianceScanFailedAssetsRequest < TencentCloud::Common::AbstractModel
        # @param CustomerAssetIdSet: 要重新扫描的客户资产项ID的列表。
        # @type CustomerAssetIdSet: Array
        # @param AssetType: 扫描资产类型 <li>ASSET_CONTAINER Docker容器</li> <li>ASSET_IMAGE Docker镜像</li> <li>ASSET_HOST Docker主机</li> <li>ASSET_K8S Kubernetes</li> <li>ASSET_CONTAINERD Containerd主机</li> <li>ASSET_CONTAINERD_CONTAINER Containerd容器</li>
        # @type AssetType: String

        attr_accessor :CustomerAssetIdSet, :AssetType

        def initialize(customerassetidset=nil, assettype=nil)
          @CustomerAssetIdSet = customerassetidset
          @AssetType = assettype
        end

        def deserialize(params)
          @CustomerAssetIdSet = params['CustomerAssetIdSet']
          @AssetType = params['AssetType']
        end
      end

      # ScanComplianceScanFailedAssets返回参数结构体
      class ScanComplianceScanFailedAssetsResponse < TencentCloud::Common::AbstractModel
        # @param TaskId: 返回重新检测任务的ID。
        # @type TaskId: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TaskId, :RequestId

        def initialize(taskid=nil, requestid=nil)
          @TaskId = taskid
          @RequestId = requestid
        end

        def deserialize(params)
          @TaskId = params['TaskId']
          @RequestId = params['RequestId']
        end
      end

      # 扫描忽略的漏洞
      class ScanIgnoreVul < TencentCloud::Common::AbstractModel
        # @param VulName: 漏洞名称
        # @type VulName: String
        # @param CVEID: 漏洞CVEID
        # @type CVEID: String
        # @param PocID: 漏洞PocID
        # @type PocID: String
        # @param RegistryImageCount: 忽略的仓库镜像数
        # @type RegistryImageCount: Integer
        # @param UpdateTime: 更新时间
        # @type UpdateTime: String
        # @param IsIgnoreAll: 是否忽略所有镜像：0：否/1：是
        # @type IsIgnoreAll: Integer
        # @param LocalImageCount: 忽略的本地镜像数
        # @type LocalImageCount: Integer

        attr_accessor :VulName, :CVEID, :PocID, :RegistryImageCount, :UpdateTime, :IsIgnoreAll, :LocalImageCount

        def initialize(vulname=nil, cveid=nil, pocid=nil, registryimagecount=nil, updatetime=nil, isignoreall=nil, localimagecount=nil)
          @VulName = vulname
          @CVEID = cveid
          @PocID = pocid
          @RegistryImageCount = registryimagecount
          @UpdateTime = updatetime
          @IsIgnoreAll = isignoreall
          @LocalImageCount = localimagecount
        end

        def deserialize(params)
          @VulName = params['VulName']
          @CVEID = params['CVEID']
          @PocID = params['PocID']
          @RegistryImageCount = params['RegistryImageCount']
          @UpdateTime = params['UpdateTime']
          @IsIgnoreAll = params['IsIgnoreAll']
          @LocalImageCount = params['LocalImageCount']
        end
      end

      # 快速搜索模板
      class SearchTemplate < TencentCloud::Common::AbstractModel
        # @param Name: 检索名称
        # @type Name: String
        # @param LogType: 检索索引类型
        # @type LogType: String
        # @param Condition: 检索语句
        # @type Condition: String
        # @param TimeRange: 时间范围
        # @type TimeRange: String
        # @param Query: 转换的检索语句内容
        # @type Query: String
        # @param Flag: 检索方式。输入框检索：standard,过滤，检索：simple
        # @type Flag: String
        # @param DisplayData: 展示数据
        # @type DisplayData: String
        # @param Id: 规则ID
        # @type Id: Integer

        attr_accessor :Name, :LogType, :Condition, :TimeRange, :Query, :Flag, :DisplayData, :Id

        def initialize(name=nil, logtype=nil, condition=nil, timerange=nil, query=nil, flag=nil, displaydata=nil, id=nil)
          @Name = name
          @LogType = logtype
          @Condition = condition
          @TimeRange = timerange
          @Query = query
          @Flag = flag
          @DisplayData = displaydata
          @Id = id
        end

        def deserialize(params)
          @Name = params['Name']
          @LogType = params['LogType']
          @Condition = params['Condition']
          @TimeRange = params['TimeRange']
          @Query = params['Query']
          @Flag = params['Flag']
          @DisplayData = params['DisplayData']
          @Id = params['Id']
        end
      end

      # 安全日志告警信息
      class SecLogAlertMsgInfo < TencentCloud::Common::AbstractModel
        # @param MsgType: 告警类型
        # @type MsgType: String
        # @param MsgValue: 告警值
        # @type MsgValue: String
        # @param State: 状态(0:关闭 1:开启)
        # @type State: Boolean

        attr_accessor :MsgType, :MsgValue, :State

        def initialize(msgtype=nil, msgvalue=nil, state=nil)
          @MsgType = msgtype
          @MsgValue = msgvalue
          @State = state
        end

        def deserialize(params)
          @MsgType = params['MsgType']
          @MsgValue = params['MsgValue']
          @State = params['State']
        end
      end

      # 安全日志-日志投递cls设置信息
      class SecLogDeliveryClsSettingInfo < TencentCloud::Common::AbstractModel
        # @param LogType: 日志类型
        # @type LogType: String
        # @param State: 投递状态(true:开启 false:关闭)
        # @type State: Boolean
        # @param Region: 区域
        # @type Region: String
        # @param LogSet: 日志集
        # @type LogSet: String
        # @param TopicID: 主题ID
        # @type TopicID: String
        # @param LogSetName: 日志集名称
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type LogSetName: String
        # @param TopicName: 主题名称
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type TopicName: String

        attr_accessor :LogType, :State, :Region, :LogSet, :TopicID, :LogSetName, :TopicName

        def initialize(logtype=nil, state=nil, region=nil, logset=nil, topicid=nil, logsetname=nil, topicname=nil)
          @LogType = logtype
          @State = state
          @Region = region
          @LogSet = logset
          @TopicID = topicid
          @LogSetName = logsetname
          @TopicName = topicname
        end

        def deserialize(params)
          @LogType = params['LogType']
          @State = params['State']
          @Region = params['Region']
          @LogSet = params['LogSet']
          @TopicID = params['TopicID']
          @LogSetName = params['LogSetName']
          @TopicName = params['TopicName']
        end
      end

      # 安全日志日志投递kafka设置详情
      class SecLogDeliveryKafkaSettingInfo < TencentCloud::Common::AbstractModel
        # @param LogType: 日志类型
        # @type LogType: String
        # @param TopicID: 主题ID
        # @type TopicID: String
        # @param TopicName: 主题名称
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type TopicName: String
        # @param State: 投递状态(false:关 true:开)
        # @type State: Boolean

        attr_accessor :LogType, :TopicID, :TopicName, :State

        def initialize(logtype=nil, topicid=nil, topicname=nil, state=nil)
          @LogType = logtype
          @TopicID = topicid
          @TopicName = topicname
          @State = state
        end

        def deserialize(params)
          @LogType = params['LogType']
          @TopicID = params['TopicID']
          @TopicName = params['TopicName']
          @State = params['State']
        end
      end

      # 安全日志接入详情
      class SecLogJoinInfo < TencentCloud::Common::AbstractModel
        # @param Count: 已接入普通主机数量
        # @type Count: Integer
        # @param SuperNodeCount: 已接入超级节点数量
        # @type SuperNodeCount: Integer
        # @param IsJoined: 是否已接入(true:已接入 false:未接入)
        # @type IsJoined: Boolean
        # @param LogType: 日志类型(
        # 容器bash:  "container_bash"
        # 容器启动: "container_launch"
        # k8sApi: "k8s_api"
        # )
        # @type LogType: String

        attr_accessor :Count, :SuperNodeCount, :IsJoined, :LogType

        def initialize(count=nil, supernodecount=nil, isjoined=nil, logtype=nil)
          @Count = count
          @SuperNodeCount = supernodecount
          @IsJoined = isjoined
          @LogType = logtype
        end

        def deserialize(params)
          @Count = params['Count']
          @SuperNodeCount = params['SuperNodeCount']
          @IsJoined = params['IsJoined']
          @LogType = params['LogType']
        end
      end

      # 安全日志接入对象详情
      class SecLogJoinObjectInfo < TencentCloud::Common::AbstractModel
        # @param HostID: 主机ID
        # @type HostID: String
        # @param HostName: 主机名称
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type HostName: String
        # @param HostIP: 主机IP
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type HostIP: String
        # @param HostStatus: 主机状态
        # @type HostStatus: String
        # @param ClusterID: 集群ID
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ClusterID: String
        # @param ClusterName: 集群名称
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ClusterName: String
        # @param PublicIP: 外网IP
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type PublicIP: String
        # @param JoinState: 接入状态(true:已接入  false:未接入)
        # @type JoinState: Boolean
        # @param ClusterVersion: 集群版本
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ClusterVersion: String
        # @param ClusterMainAddress: 集群主节点地址
        # @type ClusterMainAddress: String

        attr_accessor :HostID, :HostName, :HostIP, :HostStatus, :ClusterID, :ClusterName, :PublicIP, :JoinState, :ClusterVersion, :ClusterMainAddress

        def initialize(hostid=nil, hostname=nil, hostip=nil, hoststatus=nil, clusterid=nil, clustername=nil, publicip=nil, joinstate=nil, clusterversion=nil, clustermainaddress=nil)
          @HostID = hostid
          @HostName = hostname
          @HostIP = hostip
          @HostStatus = hoststatus
          @ClusterID = clusterid
          @ClusterName = clustername
          @PublicIP = publicip
          @JoinState = joinstate
          @ClusterVersion = clusterversion
          @ClusterMainAddress = clustermainaddress
        end

        def deserialize(params)
          @HostID = params['HostID']
          @HostName = params['HostName']
          @HostIP = params['HostIP']
          @HostStatus = params['HostStatus']
          @ClusterID = params['ClusterID']
          @ClusterName = params['ClusterName']
          @PublicIP = params['PublicIP']
          @JoinState = params['JoinState']
          @ClusterVersion = params['ClusterVersion']
          @ClusterMainAddress = params['ClusterMainAddress']
        end
      end

      # 运行时安全事件趋势信息
      class SecTendencyEventInfo < TencentCloud::Common::AbstractModel
        # @param EventSet: 趋势列表
        # @type EventSet: Array
        # @param EventType: 事件类型：
        # ET_ESCAPE : 容器逃逸
        # ET_REVERSE_SHELL: 反弹shell
        # ET_RISK_SYSCALL:高危系统调用
        # ET_ABNORMAL_PROCESS: 异常进程
        # ET_ACCESS_CONTROL 文件篡改
        # ET_VIRUS 木马事件
        # ET_MALICIOUS_CONNECTION 恶意外连事件
        # @type EventType: String

        attr_accessor :EventSet, :EventType

        def initialize(eventset=nil, eventtype=nil)
          @EventSet = eventset
          @EventType = eventtype
        end

        def deserialize(params)
          unless params['EventSet'].nil?
            @EventSet = []
            params['EventSet'].each do |i|
              runtimetendencyinfo_tmp = RunTimeTendencyInfo.new
              runtimetendencyinfo_tmp.deserialize(i)
              @EventSet << runtimetendencyinfo_tmp
            end
          end
          @EventType = params['EventType']
        end
      end

      # 容器安全服务信息列表
      class ServiceInfo < TencentCloud::Common::AbstractModel
        # @param ServiceID: 服务id
        # @type ServiceID: String
        # @param HostID: 主机id
        # @type HostID: String
        # @param HostIP: 主机ip
        # @type HostIP: String
        # @param ContainerName: 容器名
        # @type ContainerName: String
        # @param Type: 服务名 例如nginx/redis
        # @type Type: String
        # @param Version: 版本
        # @type Version: String
        # @param RunAs: 账号
        # @type RunAs: String
        # @param Listen: 监听端口
        # @type Listen: Array
        # @param Config: 配置
        # @type Config: String
        # @param ProcessCnt: 关联进程数
        # @type ProcessCnt: Integer
        # @param AccessLog: 访问日志
        # @type AccessLog: String
        # @param ErrorLog: 错误日志
        # @type ErrorLog: String
        # @param DataPath: 数据目录
        # @type DataPath: String
        # @param WebRoot: web目录
        # @type WebRoot: String
        # @param Pids: 关联的进程id
        # @type Pids: Array
        # @param MainType: 服务类型 app,web,db
        # @type MainType: String
        # @param Exe: 执行文件
        # @type Exe: String
        # @param Parameter: 服务命令行参数
        # @type Parameter: String
        # @param ContainerId: 容器id
        # @type ContainerId: String
        # @param HostName: 主机名称
        # @type HostName: String
        # @param PublicIp: 外网ip
        # @type PublicIp: String
        # @param NodeID: 节点id
        # @type NodeID: String
        # @param PodIP: podip
        # @type PodIP: String
        # @param PodName: pod名称
        # @type PodName: String
        # @param NodeType: 节点类型
        # @type NodeType: String
        # @param NodeUniqueID: 超级节点唯一id
        # @type NodeUniqueID: String

        attr_accessor :ServiceID, :HostID, :HostIP, :ContainerName, :Type, :Version, :RunAs, :Listen, :Config, :ProcessCnt, :AccessLog, :ErrorLog, :DataPath, :WebRoot, :Pids, :MainType, :Exe, :Parameter, :ContainerId, :HostName, :PublicIp, :NodeID, :PodIP, :PodName, :NodeType, :NodeUniqueID

        def initialize(serviceid=nil, hostid=nil, hostip=nil, containername=nil, type=nil, version=nil, runas=nil, listen=nil, config=nil, processcnt=nil, accesslog=nil, errorlog=nil, datapath=nil, webroot=nil, pids=nil, maintype=nil, exe=nil, parameter=nil, containerid=nil, hostname=nil, publicip=nil, nodeid=nil, podip=nil, podname=nil, nodetype=nil, nodeuniqueid=nil)
          @ServiceID = serviceid
          @HostID = hostid
          @HostIP = hostip
          @ContainerName = containername
          @Type = type
          @Version = version
          @RunAs = runas
          @Listen = listen
          @Config = config
          @ProcessCnt = processcnt
          @AccessLog = accesslog
          @ErrorLog = errorlog
          @DataPath = datapath
          @WebRoot = webroot
          @Pids = pids
          @MainType = maintype
          @Exe = exe
          @Parameter = parameter
          @ContainerId = containerid
          @HostName = hostname
          @PublicIp = publicip
          @NodeID = nodeid
          @PodIP = podip
          @PodName = podname
          @NodeType = nodetype
          @NodeUniqueID = nodeuniqueid
        end

        def deserialize(params)
          @ServiceID = params['ServiceID']
          @HostID = params['HostID']
          @HostIP = params['HostIP']
          @ContainerName = params['ContainerName']
          @Type = params['Type']
          @Version = params['Version']
          @RunAs = params['RunAs']
          @Listen = params['Listen']
          @Config = params['Config']
          @ProcessCnt = params['ProcessCnt']
          @AccessLog = params['AccessLog']
          @ErrorLog = params['ErrorLog']
          @DataPath = params['DataPath']
          @WebRoot = params['WebRoot']
          @Pids = params['Pids']
          @MainType = params['MainType']
          @Exe = params['Exe']
          @Parameter = params['Parameter']
          @ContainerId = params['ContainerId']
          @HostName = params['HostName']
          @PublicIp = params['PublicIp']
          @NodeID = params['NodeID']
          @PodIP = params['PodIP']
          @PodName = params['PodName']
          @NodeType = params['NodeType']
          @NodeUniqueID = params['NodeUniqueID']
        end
      end

      # SetCheckMode请求参数结构体
      class SetCheckModeRequest < TencentCloud::Common::AbstractModel
        # @param ClusterIds: 要设置的集群ID列表
        # @type ClusterIds: Array
        # @param ClusterCheckMode: 集群检查模式(正常模式"Cluster_Normal"、主动模式"Cluster_Actived"、不设置"Cluster_Unset")
        # @type ClusterCheckMode: String
        # @param ClusterAutoCheck: 0不设置 1打开 2关闭
        # @type ClusterAutoCheck: Integer

        attr_accessor :ClusterIds, :ClusterCheckMode, :ClusterAutoCheck

        def initialize(clusterids=nil, clustercheckmode=nil, clusterautocheck=nil)
          @ClusterIds = clusterids
          @ClusterCheckMode = clustercheckmode
          @ClusterAutoCheck = clusterautocheck
        end

        def deserialize(params)
          @ClusterIds = params['ClusterIds']
          @ClusterCheckMode = params['ClusterCheckMode']
          @ClusterAutoCheck = params['ClusterAutoCheck']
        end
      end

      # SetCheckMode返回参数结构体
      class SetCheckModeResponse < TencentCloud::Common::AbstractModel
        # @param SetCheckResult: "Succ"表示设置成功，"Failed"表示设置失败
        # @type SetCheckResult: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :SetCheckResult, :RequestId

        def initialize(setcheckresult=nil, requestid=nil)
          @SetCheckResult = setcheckresult
          @RequestId = requestid
        end

        def deserialize(params)
          @SetCheckResult = params['SetCheckResult']
          @RequestId = params['RequestId']
        end
      end

      # 后付费详情
      class SoftQuotaDayInfo < TencentCloud::Common::AbstractModel
        # @param PayTime: 扣费时间
        # @type PayTime: String
        # @param CoresCnt: 计费核数(已废弃)
        # @type CoresCnt: Integer

        attr_accessor :PayTime, :CoresCnt

        def initialize(paytime=nil, corescnt=nil)
          @PayTime = paytime
          @CoresCnt = corescnt
        end

        def deserialize(params)
          @PayTime = params['PayTime']
          @CoresCnt = params['CoresCnt']
        end
      end

      # StopVirusScanTask请求参数结构体
      class StopVirusScanTaskRequest < TencentCloud::Common::AbstractModel
        # @param TaskId: 任务ID
        # @type TaskId: String
        # @param ContainerIds: 需要停止的容器id 为空默认停止整个任务
        # @type ContainerIds: Array

        attr_accessor :TaskId, :ContainerIds

        def initialize(taskid=nil, containerids=nil)
          @TaskId = taskid
          @ContainerIds = containerids
        end

        def deserialize(params)
          @TaskId = params['TaskId']
          @ContainerIds = params['ContainerIds']
        end
      end

      # StopVirusScanTask返回参数结构体
      class StopVirusScanTaskResponse < TencentCloud::Common::AbstractModel
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RequestId

        def initialize(requestid=nil)
          @RequestId = requestid
        end

        def deserialize(params)
          @RequestId = params['RequestId']
        end
      end

      # StopVulScanTask请求参数结构体
      class StopVulScanTaskRequest < TencentCloud::Common::AbstractModel
        # @param LocalTaskID: 本地镜像漏洞扫描任务ID
        # @type LocalTaskID: Integer
        # @param LocalImageIDs: 本地镜像ID，无则全部
        # @type LocalImageIDs: Array
        # @param RegistryImageIDs: 仓库镜像ID，无则全部
        # @type RegistryImageIDs: Array
        # @param RegistryTaskID: 仓库镜像漏洞扫描任务ID
        # @type RegistryTaskID: Integer

        attr_accessor :LocalTaskID, :LocalImageIDs, :RegistryImageIDs, :RegistryTaskID

        def initialize(localtaskid=nil, localimageids=nil, registryimageids=nil, registrytaskid=nil)
          @LocalTaskID = localtaskid
          @LocalImageIDs = localimageids
          @RegistryImageIDs = registryimageids
          @RegistryTaskID = registrytaskid
        end

        def deserialize(params)
          @LocalTaskID = params['LocalTaskID']
          @LocalImageIDs = params['LocalImageIDs']
          @RegistryImageIDs = params['RegistryImageIDs']
          @RegistryTaskID = params['RegistryTaskID']
        end
      end

      # StopVulScanTask返回参数结构体
      class StopVulScanTaskResponse < TencentCloud::Common::AbstractModel
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RequestId

        def initialize(requestid=nil)
          @RequestId = requestid
        end

        def deserialize(params)
          @RequestId = params['RequestId']
        end
      end

      # 超级节点信息
      class SuperNodeListItem < TencentCloud::Common::AbstractModel
        # @param NodeID: 超级节点ID
        # @type NodeID: String
        # @param NodeName: 超级节点名称
        # @type NodeName: String
        # @param ClusterName: 所属集群名
        # @type ClusterName: String
        # @param ClusterID: 所属集群ID
        # @type ClusterID: String
        # @param Status: 节点状态:Running,Ready,Notready,Initializing,Failed,Error
        # @type Status: String
        # @param SubNetID: 子网ID
        # @type SubNetID: String
        # @param SubNetName: 子网名称
        # @type SubNetName: String
        # @param SubNetCidr: 子网网段
        # @type SubNetCidr: String
        # @param ZoneID: 可用区ID
        # @type ZoneID: String
        # @param Zone: 可用区
        # @type Zone: String
        # @param CreateTime: 创建时间
        # @type CreateTime: String
        # @param RelatePodCount: 关联pod数
        # @type RelatePodCount: Integer
        # @param RelateContainerCount: 关联容器数
        # @type RelateContainerCount: Integer
        # @param AgentStatus: agent安装状态UNINSTALL:未安装;INSTALLED:已安装;INSTALLING:安装中;
        # @type AgentStatus: String
        # @param NodeUniqueID: 节点唯一id
        # @type NodeUniqueID: String
        # @param ClusterAccessedStatus: 集群接入状态
        # @type ClusterAccessedStatus: String
        # @param ChargeCoresCnt: 计费核数
        # @type ChargeCoresCnt: Integer
        # @param DefendStatus: 防护状态:
        # 已防护: Defended
        # 未防护: UnDefended
        # @type DefendStatus: String

        attr_accessor :NodeID, :NodeName, :ClusterName, :ClusterID, :Status, :SubNetID, :SubNetName, :SubNetCidr, :ZoneID, :Zone, :CreateTime, :RelatePodCount, :RelateContainerCount, :AgentStatus, :NodeUniqueID, :ClusterAccessedStatus, :ChargeCoresCnt, :DefendStatus

        def initialize(nodeid=nil, nodename=nil, clustername=nil, clusterid=nil, status=nil, subnetid=nil, subnetname=nil, subnetcidr=nil, zoneid=nil, zone=nil, createtime=nil, relatepodcount=nil, relatecontainercount=nil, agentstatus=nil, nodeuniqueid=nil, clusteraccessedstatus=nil, chargecorescnt=nil, defendstatus=nil)
          @NodeID = nodeid
          @NodeName = nodename
          @ClusterName = clustername
          @ClusterID = clusterid
          @Status = status
          @SubNetID = subnetid
          @SubNetName = subnetname
          @SubNetCidr = subnetcidr
          @ZoneID = zoneid
          @Zone = zone
          @CreateTime = createtime
          @RelatePodCount = relatepodcount
          @RelateContainerCount = relatecontainercount
          @AgentStatus = agentstatus
          @NodeUniqueID = nodeuniqueid
          @ClusterAccessedStatus = clusteraccessedstatus
          @ChargeCoresCnt = chargecorescnt
          @DefendStatus = defendstatus
        end

        def deserialize(params)
          @NodeID = params['NodeID']
          @NodeName = params['NodeName']
          @ClusterName = params['ClusterName']
          @ClusterID = params['ClusterID']
          @Status = params['Status']
          @SubNetID = params['SubNetID']
          @SubNetName = params['SubNetName']
          @SubNetCidr = params['SubNetCidr']
          @ZoneID = params['ZoneID']
          @Zone = params['Zone']
          @CreateTime = params['CreateTime']
          @RelatePodCount = params['RelatePodCount']
          @RelateContainerCount = params['RelateContainerCount']
          @AgentStatus = params['AgentStatus']
          @NodeUniqueID = params['NodeUniqueID']
          @ClusterAccessedStatus = params['ClusterAccessedStatus']
          @ChargeCoresCnt = params['ChargeCoresCnt']
          @DefendStatus = params['DefendStatus']
        end
      end

      # 超级节点Pod列表Item信息
      class SuperNodePodListItem < TencentCloud::Common::AbstractModel
        # @param PodName: pod名称
        # @type PodName: String
        # @param PodIP: podIP
        # @type PodIP: String
        # @param NodeUniqueID: 节点唯一id
        # @type NodeUniqueID: String
        # @param Status: 运行状态
        # @type Status: String
        # @param CpuRequest: cpu需求核数
        # @type CpuRequest: Integer
        # @param CpuLimit: cpu限制核数
        # @type CpuLimit: Integer
        # @param MemRequest: 内存需求大小
        # @type MemRequest: Integer
        # @param MemLimit: 内存限制大小
        # @type MemLimit: Integer
        # @param Namespace: 命名空间
        # @type Namespace: String
        # @param DeploymentName: 工作负载名称
        # @type DeploymentName: String
        # @param DeploymentID: 工作负载id
        # @type DeploymentID: String
        # @param StartTime: 启动时间
        # @type StartTime: String
        # @param CreateTime: 创建时间
        # @type CreateTime: String
        # @param RelateContainerCount: 关联容器个数
        # @type RelateContainerCount: Integer
        # @param RunningTime: 运行时间
        # @type RunningTime: String
        # @param PodUid: PodUid
        # @type PodUid: String
        # @param ChargeCoresCnt: 计费核数
        # @type ChargeCoresCnt: Integer
        # @param DefendStatus: 防护状态
        # @type DefendStatus: String

        attr_accessor :PodName, :PodIP, :NodeUniqueID, :Status, :CpuRequest, :CpuLimit, :MemRequest, :MemLimit, :Namespace, :DeploymentName, :DeploymentID, :StartTime, :CreateTime, :RelateContainerCount, :RunningTime, :PodUid, :ChargeCoresCnt, :DefendStatus

        def initialize(podname=nil, podip=nil, nodeuniqueid=nil, status=nil, cpurequest=nil, cpulimit=nil, memrequest=nil, memlimit=nil, namespace=nil, deploymentname=nil, deploymentid=nil, starttime=nil, createtime=nil, relatecontainercount=nil, runningtime=nil, poduid=nil, chargecorescnt=nil, defendstatus=nil)
          @PodName = podname
          @PodIP = podip
          @NodeUniqueID = nodeuniqueid
          @Status = status
          @CpuRequest = cpurequest
          @CpuLimit = cpulimit
          @MemRequest = memrequest
          @MemLimit = memlimit
          @Namespace = namespace
          @DeploymentName = deploymentname
          @DeploymentID = deploymentid
          @StartTime = starttime
          @CreateTime = createtime
          @RelateContainerCount = relatecontainercount
          @RunningTime = runningtime
          @PodUid = poduid
          @ChargeCoresCnt = chargecorescnt
          @DefendStatus = defendstatus
        end

        def deserialize(params)
          @PodName = params['PodName']
          @PodIP = params['PodIP']
          @NodeUniqueID = params['NodeUniqueID']
          @Status = params['Status']
          @CpuRequest = params['CpuRequest']
          @CpuLimit = params['CpuLimit']
          @MemRequest = params['MemRequest']
          @MemLimit = params['MemLimit']
          @Namespace = params['Namespace']
          @DeploymentName = params['DeploymentName']
          @DeploymentID = params['DeploymentID']
          @StartTime = params['StartTime']
          @CreateTime = params['CreateTime']
          @RelateContainerCount = params['RelateContainerCount']
          @RunningTime = params['RunningTime']
          @PodUid = params['PodUid']
          @ChargeCoresCnt = params['ChargeCoresCnt']
          @DefendStatus = params['DefendStatus']
        end
      end

      # 支持防御的漏洞
      class SupportDefenceVul < TencentCloud::Common::AbstractModel
        # @param PocID: 漏洞PocID
        # @type PocID: String
        # @param Name: 漏洞名称
        # @type Name: String
        # @param Tags: 漏洞标签
        # @type Tags: Array
        # @param CVSSV3Score: 漏洞CVSS
        # @type CVSSV3Score: Float
        # @param Level: 漏洞威胁等级
        # @type Level: String
        # @param CVEID: 漏洞CVEID
        # @type CVEID: String
        # @param SubmitTime: 漏洞披露时间
        # @type SubmitTime: String

        attr_accessor :PocID, :Name, :Tags, :CVSSV3Score, :Level, :CVEID, :SubmitTime

        def initialize(pocid=nil, name=nil, tags=nil, cvssv3score=nil, level=nil, cveid=nil, submittime=nil)
          @PocID = pocid
          @Name = name
          @Tags = tags
          @CVSSV3Score = cvssv3score
          @Level = level
          @CVEID = cveid
          @SubmitTime = submittime
        end

        def deserialize(params)
          @PocID = params['PocID']
          @Name = params['Name']
          @Tags = params['Tags']
          @CVSSV3Score = params['CVSSV3Score']
          @Level = params['Level']
          @CVEID = params['CVEID']
          @SubmitTime = params['SubmitTime']
        end
      end

      # SwitchImageAutoAuthorizedRule请求参数结构体
      class SwitchImageAutoAuthorizedRuleRequest < TencentCloud::Common::AbstractModel
        # @param IsEnabled: 规则是否生效，0:不生效，1:已生效
        # @type IsEnabled: Integer
        # @param RuleId: 规则id
        # @type RuleId: Integer

        attr_accessor :IsEnabled, :RuleId

        def initialize(isenabled=nil, ruleid=nil)
          @IsEnabled = isenabled
          @RuleId = ruleid
        end

        def deserialize(params)
          @IsEnabled = params['IsEnabled']
          @RuleId = params['RuleId']
        end
      end

      # SwitchImageAutoAuthorizedRule返回参数结构体
      class SwitchImageAutoAuthorizedRuleResponse < TencentCloud::Common::AbstractModel
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RequestId

        def initialize(requestid=nil)
          @RequestId = requestid
        end

        def deserialize(params)
          @RequestId = params['RequestId']
        end
      end

      # SyncAssetImageRegistryAsset请求参数结构体
      class SyncAssetImageRegistryAssetRequest < TencentCloud::Common::AbstractModel
        # @param All: 是否同步所有镜像仓库
        # @type All: Boolean
        # @param RegistryIds: 需要同步的部分镜像仓库
        # @type RegistryIds: Array

        attr_accessor :All, :RegistryIds

        def initialize(all=nil, registryids=nil)
          @All = all
          @RegistryIds = registryids
        end

        def deserialize(params)
          @All = params['All']
          @RegistryIds = params['RegistryIds']
        end
      end

      # SyncAssetImageRegistryAsset返回参数结构体
      class SyncAssetImageRegistryAssetResponse < TencentCloud::Common::AbstractModel
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RequestId

        def initialize(requestid=nil)
          @RequestId = requestid
        end

        def deserialize(params)
          @RequestId = params['RequestId']
        end
      end

      # 主机标签信息
      class TagInfo < TencentCloud::Common::AbstractModel
        # @param TagKey: 标签键
        # @type TagKey: String
        # @param TagValue: 标签值
        # @type TagValue: String

        attr_accessor :TagKey, :TagValue

        def initialize(tagkey=nil, tagvalue=nil)
          @TagKey = tagkey
          @TagValue = tagvalue
        end

        def deserialize(params)
          @TagKey = params['TagKey']
          @TagValue = params['TagValue']
        end
      end

      # 未授权核数趋势
      class UnauthorizedCoresTendency < TencentCloud::Common::AbstractModel
        # @param DateTime: 日期
        # @type DateTime: String
        # @param CoresCount: 未授权的核数
        # @type CoresCount: Integer

        attr_accessor :DateTime, :CoresCount

        def initialize(datetime=nil, corescount=nil)
          @DateTime = datetime
          @CoresCount = corescount
        end

        def deserialize(params)
          @DateTime = params['DateTime']
          @CoresCount = params['CoresCount']
        end
      end

      # UpdateAndPublishNetworkFirewallPolicyDetail请求参数结构体
      class UpdateAndPublishNetworkFirewallPolicyDetailRequest < TencentCloud::Common::AbstractModel
        # @param ClusterId: 集群Id
        # @type ClusterId: String
        # @param Id: 策略Id
        # @type Id: Integer
        # @param FromPolicyRule: 入站规则

        # 全部允许：1

        # 全部拒绝 ：2

        # 自定义：3
        # @type FromPolicyRule: Integer
        # @param ToPolicyRule: 出站规则

        # 全部允许：1

        # 全部拒绝 ：2

        # 自定义：3
        # @type ToPolicyRule: Integer
        # @param PodSelector: pod选择器
        # @type PodSelector: String
        # @param Namespace: 命名空间
        # @type Namespace: String
        # @param Description: 策略描述
        # @type Description: String
        # @param CustomPolicy: 自定义规则
        # @type CustomPolicy: Array

        attr_accessor :ClusterId, :Id, :FromPolicyRule, :ToPolicyRule, :PodSelector, :Namespace, :Description, :CustomPolicy

        def initialize(clusterid=nil, id=nil, frompolicyrule=nil, topolicyrule=nil, podselector=nil, namespace=nil, description=nil, custompolicy=nil)
          @ClusterId = clusterid
          @Id = id
          @FromPolicyRule = frompolicyrule
          @ToPolicyRule = topolicyrule
          @PodSelector = podselector
          @Namespace = namespace
          @Description = description
          @CustomPolicy = custompolicy
        end

        def deserialize(params)
          @ClusterId = params['ClusterId']
          @Id = params['Id']
          @FromPolicyRule = params['FromPolicyRule']
          @ToPolicyRule = params['ToPolicyRule']
          @PodSelector = params['PodSelector']
          @Namespace = params['Namespace']
          @Description = params['Description']
          unless params['CustomPolicy'].nil?
            @CustomPolicy = []
            params['CustomPolicy'].each do |i|
              networkcustompolicy_tmp = NetworkCustomPolicy.new
              networkcustompolicy_tmp.deserialize(i)
              @CustomPolicy << networkcustompolicy_tmp
            end
          end
        end
      end

      # UpdateAndPublishNetworkFirewallPolicyDetail返回参数结构体
      class UpdateAndPublishNetworkFirewallPolicyDetailResponse < TencentCloud::Common::AbstractModel
        # @param TaskId: 返回创建的任务的ID，为0表示创建失败。
        # @type TaskId: Integer
        # @param Result: 创建任务的结果，"Succ"为成功，"Failed"为失败
        # @type Result: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TaskId, :Result, :RequestId

        def initialize(taskid=nil, result=nil, requestid=nil)
          @TaskId = taskid
          @Result = result
          @RequestId = requestid
        end

        def deserialize(params)
          @TaskId = params['TaskId']
          @Result = params['Result']
          @RequestId = params['RequestId']
        end
      end

      # UpdateAndPublishNetworkFirewallPolicyYamlDetail请求参数结构体
      class UpdateAndPublishNetworkFirewallPolicyYamlDetailRequest < TencentCloud::Common::AbstractModel
        # @param ClusterId: 集群Id
        # @type ClusterId: String
        # @param Id: 策略id
        # @type Id: Integer
        # @param Yaml: base64编码的networkpolicy yaml字符串
        # @type Yaml: String
        # @param Description: 策略描述
        # @type Description: String

        attr_accessor :ClusterId, :Id, :Yaml, :Description

        def initialize(clusterid=nil, id=nil, yaml=nil, description=nil)
          @ClusterId = clusterid
          @Id = id
          @Yaml = yaml
          @Description = description
        end

        def deserialize(params)
          @ClusterId = params['ClusterId']
          @Id = params['Id']
          @Yaml = params['Yaml']
          @Description = params['Description']
        end
      end

      # UpdateAndPublishNetworkFirewallPolicyYamlDetail返回参数结构体
      class UpdateAndPublishNetworkFirewallPolicyYamlDetailResponse < TencentCloud::Common::AbstractModel
        # @param TaskId: 返回创建的任务的ID，为0表示创建失败。
        # @type TaskId: Integer
        # @param Result: 创建任务的结果，"Succ"为成功，"Failed"为失败
        # @type Result: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TaskId, :Result, :RequestId

        def initialize(taskid=nil, result=nil, requestid=nil)
          @TaskId = taskid
          @Result = result
          @RequestId = requestid
        end

        def deserialize(params)
          @TaskId = params['TaskId']
          @Result = params['Result']
          @RequestId = params['RequestId']
        end
      end

      # UpdateAssetImageRegistryRegistryDetail请求参数结构体
      class UpdateAssetImageRegistryRegistryDetailRequest < TencentCloud::Common::AbstractModel
        # @param Name: 仓库名
        # @type Name: String
        # @param Username: 用户名
        # @type Username: String
        # @param Password: 密码
        # @type Password: String
        # @param Url: 仓库url
        # @type Url: String
        # @param RegistryType: 仓库类型，列表：harbor
        # @type RegistryType: String
        # @param NetType: 网络类型，列表：public（公网）
        # @type NetType: String
        # @param RegistryVersion: 仓库版本
        # @type RegistryVersion: String
        # @param RegistryRegion: 区域，列表：default（默认）
        # @type RegistryRegion: String
        # @param SpeedLimit: 限速
        # @type SpeedLimit: Integer
        # @param Insecure: 安全模式（证书校验）：0（默认） 非安全模式（跳过证书校验）：1
        # @type Insecure: Integer
        # @param ConnDetectConfig: 联通性检测的配置
        # @type ConnDetectConfig: Array

        attr_accessor :Name, :Username, :Password, :Url, :RegistryType, :NetType, :RegistryVersion, :RegistryRegion, :SpeedLimit, :Insecure, :ConnDetectConfig

        def initialize(name=nil, username=nil, password=nil, url=nil, registrytype=nil, nettype=nil, registryversion=nil, registryregion=nil, speedlimit=nil, insecure=nil, conndetectconfig=nil)
          @Name = name
          @Username = username
          @Password = password
          @Url = url
          @RegistryType = registrytype
          @NetType = nettype
          @RegistryVersion = registryversion
          @RegistryRegion = registryregion
          @SpeedLimit = speedlimit
          @Insecure = insecure
          @ConnDetectConfig = conndetectconfig
        end

        def deserialize(params)
          @Name = params['Name']
          @Username = params['Username']
          @Password = params['Password']
          @Url = params['Url']
          @RegistryType = params['RegistryType']
          @NetType = params['NetType']
          @RegistryVersion = params['RegistryVersion']
          @RegistryRegion = params['RegistryRegion']
          @SpeedLimit = params['SpeedLimit']
          @Insecure = params['Insecure']
          unless params['ConnDetectConfig'].nil?
            @ConnDetectConfig = []
            params['ConnDetectConfig'].each do |i|
              conndetectconfig_tmp = ConnDetectConfig.new
              conndetectconfig_tmp.deserialize(i)
              @ConnDetectConfig << conndetectconfig_tmp
            end
          end
        end
      end

      # UpdateAssetImageRegistryRegistryDetail返回参数结构体
      class UpdateAssetImageRegistryRegistryDetailResponse < TencentCloud::Common::AbstractModel
        # @param HealthCheckErr: 连接错误信息
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type HealthCheckErr: String
        # @param NameRepeatErr: 名称错误信息
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type NameRepeatErr: String
        # @param RegistryId: 仓库唯一id
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type RegistryId: Integer
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :HealthCheckErr, :NameRepeatErr, :RegistryId, :RequestId

        def initialize(healthcheckerr=nil, namerepeaterr=nil, registryid=nil, requestid=nil)
          @HealthCheckErr = healthcheckerr
          @NameRepeatErr = namerepeaterr
          @RegistryId = registryid
          @RequestId = requestid
        end

        def deserialize(params)
          @HealthCheckErr = params['HealthCheckErr']
          @NameRepeatErr = params['NameRepeatErr']
          @RegistryId = params['RegistryId']
          @RequestId = params['RequestId']
        end
      end

      # UpdateImageRegistryTimingScanTask请求参数结构体
      class UpdateImageRegistryTimingScanTaskRequest < TencentCloud::Common::AbstractModel
        # @param ScanPeriod: 定时扫描周期
        # @type ScanPeriod: Integer
        # @param Enable: 定时扫描开关
        # @type Enable: Boolean
        # @param ScanTime: 定时扫描的时间
        # @type ScanTime: String
        # @param ScanType: 扫描木马类型数组
        # @type ScanType: Array
        # @param Images: 扫描镜像
        # @type Images: Array
        # @param All: 是否扫描所有
        # @type All: Boolean
        # @param Id: 扫描镜像Id
        # @type Id: Array
        # @param Latest: 是否扫描最新版本
        # @type Latest: Boolean
        # @param ContainerRunning: 是否存在运行中的容器
        # @type ContainerRunning: Boolean
        # @param ScanEndTime: 扫描结束时间
        # @type ScanEndTime: String
        # @param ScanScope: 扫描范围 0全部镜像，1自选镜像，2推荐扫描镜像
        # @type ScanScope: Integer
        # @param RegistryType: 仓库类型 tcr,ccr,harbor
        # @type RegistryType: Array
        # @param Namespace: 命名空间
        # @type Namespace: Array
        # @param ExcludeImageAssetIds: 排除的镜像资产id
        # @type ExcludeImageAssetIds: Array

        attr_accessor :ScanPeriod, :Enable, :ScanTime, :ScanType, :Images, :All, :Id, :Latest, :ContainerRunning, :ScanEndTime, :ScanScope, :RegistryType, :Namespace, :ExcludeImageAssetIds
        extend Gem::Deprecate
        deprecate :All, :none, 2024, 9
        deprecate :All=, :none, 2024, 9

        def initialize(scanperiod=nil, enable=nil, scantime=nil, scantype=nil, images=nil, all=nil, id=nil, latest=nil, containerrunning=nil, scanendtime=nil, scanscope=nil, registrytype=nil, namespace=nil, excludeimageassetids=nil)
          @ScanPeriod = scanperiod
          @Enable = enable
          @ScanTime = scantime
          @ScanType = scantype
          @Images = images
          @All = all
          @Id = id
          @Latest = latest
          @ContainerRunning = containerrunning
          @ScanEndTime = scanendtime
          @ScanScope = scanscope
          @RegistryType = registrytype
          @Namespace = namespace
          @ExcludeImageAssetIds = excludeimageassetids
        end

        def deserialize(params)
          @ScanPeriod = params['ScanPeriod']
          @Enable = params['Enable']
          @ScanTime = params['ScanTime']
          @ScanType = params['ScanType']
          unless params['Images'].nil?
            @Images = []
            params['Images'].each do |i|
              imageinfo_tmp = ImageInfo.new
              imageinfo_tmp.deserialize(i)
              @Images << imageinfo_tmp
            end
          end
          @All = params['All']
          @Id = params['Id']
          @Latest = params['Latest']
          @ContainerRunning = params['ContainerRunning']
          @ScanEndTime = params['ScanEndTime']
          @ScanScope = params['ScanScope']
          @RegistryType = params['RegistryType']
          @Namespace = params['Namespace']
          @ExcludeImageAssetIds = params['ExcludeImageAssetIds']
        end
      end

      # UpdateImageRegistryTimingScanTask返回参数结构体
      class UpdateImageRegistryTimingScanTaskResponse < TencentCloud::Common::AbstractModel
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :RequestId

        def initialize(requestid=nil)
          @RequestId = requestid
        end

        def deserialize(params)
          @RequestId = params['RequestId']
        end
      end

      # UpdateNetworkFirewallPolicyDetail请求参数结构体
      class UpdateNetworkFirewallPolicyDetailRequest < TencentCloud::Common::AbstractModel
        # @param ClusterId: 集群Id
        # @type ClusterId: String
        # @param Id: 策略Id
        # @type Id: Integer
        # @param FromPolicyRule: 入站规则

        # 全部允许：1

        # 全部拒绝 ：2

        # 自定义：3
        # @type FromPolicyRule: Integer
        # @param ToPolicyRule: 出站规则

        # 全部允许：1

        # 全部拒绝 ：2

        # 自定义：3
        # @type ToPolicyRule: Integer
        # @param PodSelector: pod选择器
        # @type PodSelector: String
        # @param Namespace: 命名空间
        # @type Namespace: String
        # @param Description: 策略描述
        # @type Description: String
        # @param CustomPolicy: 自定义规则
        # @type CustomPolicy: Array

        attr_accessor :ClusterId, :Id, :FromPolicyRule, :ToPolicyRule, :PodSelector, :Namespace, :Description, :CustomPolicy

        def initialize(clusterid=nil, id=nil, frompolicyrule=nil, topolicyrule=nil, podselector=nil, namespace=nil, description=nil, custompolicy=nil)
          @ClusterId = clusterid
          @Id = id
          @FromPolicyRule = frompolicyrule
          @ToPolicyRule = topolicyrule
          @PodSelector = podselector
          @Namespace = namespace
          @Description = description
          @CustomPolicy = custompolicy
        end

        def deserialize(params)
          @ClusterId = params['ClusterId']
          @Id = params['Id']
          @FromPolicyRule = params['FromPolicyRule']
          @ToPolicyRule = params['ToPolicyRule']
          @PodSelector = params['PodSelector']
          @Namespace = params['Namespace']
          @Description = params['Description']
          unless params['CustomPolicy'].nil?
            @CustomPolicy = []
            params['CustomPolicy'].each do |i|
              networkcustompolicy_tmp = NetworkCustomPolicy.new
              networkcustompolicy_tmp.deserialize(i)
              @CustomPolicy << networkcustompolicy_tmp
            end
          end
        end
      end

      # UpdateNetworkFirewallPolicyDetail返回参数结构体
      class UpdateNetworkFirewallPolicyDetailResponse < TencentCloud::Common::AbstractModel
        # @param TaskId: 返回创建的任务的ID，为0表示创建失败。
        # @type TaskId: Integer
        # @param Result: 创建任务的结果，"Succ"为成功，"Failed"为失败
        # @type Result: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TaskId, :Result, :RequestId

        def initialize(taskid=nil, result=nil, requestid=nil)
          @TaskId = taskid
          @Result = result
          @RequestId = requestid
        end

        def deserialize(params)
          @TaskId = params['TaskId']
          @Result = params['Result']
          @RequestId = params['RequestId']
        end
      end

      # UpdateNetworkFirewallPolicyYamlDetail请求参数结构体
      class UpdateNetworkFirewallPolicyYamlDetailRequest < TencentCloud::Common::AbstractModel
        # @param ClusterId: 集群Id
        # @type ClusterId: String
        # @param Id: 策略id
        # @type Id: Integer
        # @param Yaml: base64编码的networkpolicy yaml字符串
        # @type Yaml: String
        # @param Description: 策略描述
        # @type Description: String

        attr_accessor :ClusterId, :Id, :Yaml, :Description

        def initialize(clusterid=nil, id=nil, yaml=nil, description=nil)
          @ClusterId = clusterid
          @Id = id
          @Yaml = yaml
          @Description = description
        end

        def deserialize(params)
          @ClusterId = params['ClusterId']
          @Id = params['Id']
          @Yaml = params['Yaml']
          @Description = params['Description']
        end
      end

      # UpdateNetworkFirewallPolicyYamlDetail返回参数结构体
      class UpdateNetworkFirewallPolicyYamlDetailResponse < TencentCloud::Common::AbstractModel
        # @param TaskId: 返回创建的任务的ID，为0表示创建失败。
        # @type TaskId: Integer
        # @param Result: 创建任务的结果，"Succ"为成功，"Failed"为失败
        # @type Result: String
        # @param RequestId: 唯一请求 ID，由服务端生成，每次请求都会返回（若请求因其他原因未能抵达服务端，则该次请求不会获得 RequestId）。定位问题时需要提供该次请求的 RequestId。
        # @type RequestId: String

        attr_accessor :TaskId, :Result, :RequestId

        def initialize(taskid=nil, result=nil, requestid=nil)
          @TaskId = taskid
          @Result = result
          @RequestId = requestid
        end

        def deserialize(params)
          @TaskId = params['TaskId']
          @Result = params['Result']
          @RequestId = params['RequestId']
        end
      end

      # 木马自动隔离样本信息
      class VirusAutoIsolateSampleInfo < TencentCloud::Common::AbstractModel
        # @param MD5: 文件MD5值
        # @type MD5: String
        # @param VirusName: 病毒名
        # @type VirusName: String
        # @param ModifyTime: 最近编辑时间
        # @type ModifyTime: String
        # @param AutoIsolateSwitch: 自动隔离开关(true:开 false:关)
        # @type AutoIsolateSwitch: Boolean

        attr_accessor :MD5, :VirusName, :ModifyTime, :AutoIsolateSwitch

        def initialize(md5=nil, virusname=nil, modifytime=nil, autoisolateswitch=nil)
          @MD5 = md5
          @VirusName = virusname
          @ModifyTime = modifytime
          @AutoIsolateSwitch = autoisolateswitch
        end

        def deserialize(params)
          @MD5 = params['MD5']
          @VirusName = params['VirusName']
          @ModifyTime = params['ModifyTime']
          @AutoIsolateSwitch = params['AutoIsolateSwitch']
        end
      end

      # 运行时木马列表信息
      class VirusInfo < TencentCloud::Common::AbstractModel
        # @param FileName: 文件名称
        # @type FileName: String
        # @param FilePath: 文件路径
        # @type FilePath: String
        # @param VirusName: 病毒名称
        # @type VirusName: String
        # @param CreateTime: 创建时间
        # @type CreateTime: String
        # @param ModifyTime: 更新时间
        # @type ModifyTime: String
        # @param ContainerName: 容器名称
        # @type ContainerName: String
        # @param ContainerId: 容器id
        # @type ContainerId: String
        # @param ContainerStatus: 容器状态
        # 正在运行: RUNNING
        # 暂停: PAUSED
        # 停止: STOPPED
        # 已经创建: CREATED
        # 已经销毁: DESTROYED
        # 正在重启中: RESTARTING
        # 迁移中: REMOVING
        # @type ContainerStatus: String
        # @param ImageName: 镜像名称
        # @type ImageName: String
        # @param ImageId: 镜像id
        # @type ImageId: String
        # @param Status: DEAL_NONE:文件待处理
        # DEAL_IGNORE:已经忽略
        # DEAL_ADD_WHITELIST:加白
        # DEAL_DEL:文件已经删除
        # DEAL_ISOLATE:已经隔离
        # DEAL_ISOLATING:隔离中
        # DEAL_ISOLATE_FAILED:隔离失败
        # DEAL_RECOVERING:恢复中
        # DEAL_RECOVER_FAILED: 恢复失败
        # @type Status: String
        # @param Id: 事件id
        # @type Id: String
        # @param HarmDescribe: 事件描述
        # @type HarmDescribe: String
        # @param SuggestScheme: 建议方案
        # @type SuggestScheme: String
        # @param SubStatus: 失败子状态:
        # FILE_NOT_FOUND:文件不存在
        # FILE_ABNORMAL:文件异常
        # FILE_ABNORMAL_DEAL_RECOVER:恢复文件时，文件异常
        # BACKUP_FILE_NOT_FOUND:备份文件不存在
        # CONTAINER_NOT_FOUND_DEAL_ISOLATE:隔离时，容器不存在
        # CONTAINER_NOT_FOUND_DEAL_RECOVER:恢复时，容器不存在
        # TIMEOUT: 超时
        # TOO_MANY: 任务过多
        # OFFLINE: 离线
        # INTERNAL: 服务内部错误
        # VALIDATION: 参数非法
        # @type SubStatus: String
        # @param ContainerNetStatus: 网络状态
        # 未隔离  	NORMAL
        # 已隔离		ISOLATED
        # 隔离中		ISOLATING
        # 隔离失败	ISOLATE_FAILED
        # 解除隔离中  RESTORING
        # 解除隔离失败 RESTORE_FAILED
        # @type ContainerNetStatus: String
        # @param ContainerNetSubStatus: 容器子状态
        # "AGENT_OFFLINE"       //Agent离线
        # 	"NODE_DESTROYED"      //节点已销毁
        # 	"CONTAINER_EXITED"    //容器已退出
        # 	"CONTAINER_DESTROYED" //容器已销毁
        # 	"SHARED_HOST"         // 容器与主机共享网络
        # 	"RESOURCE_LIMIT"      //隔离操作资源超限
        # 	"UNKNOW"              // 原因未知
        # @type ContainerNetSubStatus: String
        # @param ContainerIsolateOperationSrc: 容器隔离操作来源
        # @type ContainerIsolateOperationSrc: String
        # @param MD5: md5值
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type MD5: String
        # @param RiskLevel: 风险等级 RISK_CRITICAL, RISK_HIGH, RISK_MEDIUM, RISK_LOW, RISK_NOTICE。
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type RiskLevel: String
        # @param CheckPlatform: 检测平台
        # 1: 云查杀引擎
        # 2: tav
        # 3: binaryAi
        # 4: 异常行为
        # 5: 威胁情报
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type CheckPlatform: Array
        # @param NodeID: 节点ID
        # @type NodeID: String
        # @param NodeName: 节点名称
        # @type NodeName: String
        # @param PodIP: pod ip
        # @type PodIP: String
        # @param PodName: pod(实例)的名字
        # @type PodName: String
        # @param ClusterID: 节点所属集群ID
        # @type ClusterID: String
        # @param NodeType: 节点类型：NORMAL普通节点、SUPER超级节点
        # @type NodeType: String
        # @param PublicIP: 节点外网IP
        # @type PublicIP: String
        # @param InnerIP: 节点内网IP
        # @type InnerIP: String
        # @param NodeUniqueID: 节点唯一ID
        # @type NodeUniqueID: String
        # @param HostID: 普通节点ID
        # @type HostID: String
        # @param ClusterName: 集群名称
        # @type ClusterName: String

        attr_accessor :FileName, :FilePath, :VirusName, :CreateTime, :ModifyTime, :ContainerName, :ContainerId, :ContainerStatus, :ImageName, :ImageId, :Status, :Id, :HarmDescribe, :SuggestScheme, :SubStatus, :ContainerNetStatus, :ContainerNetSubStatus, :ContainerIsolateOperationSrc, :MD5, :RiskLevel, :CheckPlatform, :NodeID, :NodeName, :PodIP, :PodName, :ClusterID, :NodeType, :PublicIP, :InnerIP, :NodeUniqueID, :HostID, :ClusterName

        def initialize(filename=nil, filepath=nil, virusname=nil, createtime=nil, modifytime=nil, containername=nil, containerid=nil, containerstatus=nil, imagename=nil, imageid=nil, status=nil, id=nil, harmdescribe=nil, suggestscheme=nil, substatus=nil, containernetstatus=nil, containernetsubstatus=nil, containerisolateoperationsrc=nil, md5=nil, risklevel=nil, checkplatform=nil, nodeid=nil, nodename=nil, podip=nil, podname=nil, clusterid=nil, nodetype=nil, publicip=nil, innerip=nil, nodeuniqueid=nil, hostid=nil, clustername=nil)
          @FileName = filename
          @FilePath = filepath
          @VirusName = virusname
          @CreateTime = createtime
          @ModifyTime = modifytime
          @ContainerName = containername
          @ContainerId = containerid
          @ContainerStatus = containerstatus
          @ImageName = imagename
          @ImageId = imageid
          @Status = status
          @Id = id
          @HarmDescribe = harmdescribe
          @SuggestScheme = suggestscheme
          @SubStatus = substatus
          @ContainerNetStatus = containernetstatus
          @ContainerNetSubStatus = containernetsubstatus
          @ContainerIsolateOperationSrc = containerisolateoperationsrc
          @MD5 = md5
          @RiskLevel = risklevel
          @CheckPlatform = checkplatform
          @NodeID = nodeid
          @NodeName = nodename
          @PodIP = podip
          @PodName = podname
          @ClusterID = clusterid
          @NodeType = nodetype
          @PublicIP = publicip
          @InnerIP = innerip
          @NodeUniqueID = nodeuniqueid
          @HostID = hostid
          @ClusterName = clustername
        end

        def deserialize(params)
          @FileName = params['FileName']
          @FilePath = params['FilePath']
          @VirusName = params['VirusName']
          @CreateTime = params['CreateTime']
          @ModifyTime = params['ModifyTime']
          @ContainerName = params['ContainerName']
          @ContainerId = params['ContainerId']
          @ContainerStatus = params['ContainerStatus']
          @ImageName = params['ImageName']
          @ImageId = params['ImageId']
          @Status = params['Status']
          @Id = params['Id']
          @HarmDescribe = params['HarmDescribe']
          @SuggestScheme = params['SuggestScheme']
          @SubStatus = params['SubStatus']
          @ContainerNetStatus = params['ContainerNetStatus']
          @ContainerNetSubStatus = params['ContainerNetSubStatus']
          @ContainerIsolateOperationSrc = params['ContainerIsolateOperationSrc']
          @MD5 = params['MD5']
          @RiskLevel = params['RiskLevel']
          @CheckPlatform = params['CheckPlatform']
          @NodeID = params['NodeID']
          @NodeName = params['NodeName']
          @PodIP = params['PodIP']
          @PodName = params['PodName']
          @ClusterID = params['ClusterID']
          @NodeType = params['NodeType']
          @PublicIP = params['PublicIP']
          @InnerIP = params['InnerIP']
          @NodeUniqueID = params['NodeUniqueID']
          @HostID = params['HostID']
          @ClusterName = params['ClusterName']
        end
      end

      # 运行时文件查杀任务容器列表信息
      class VirusTaskInfo < TencentCloud::Common::AbstractModel
        # @param ContainerName: 容器名称
        # @type ContainerName: String
        # @param ContainerId: 容器id
        # @type ContainerId: String
        # @param ImageName: 镜像名称
        # @type ImageName: String
        # @param ImageId: 镜像Id
        # @type ImageId: String
        # @param HostName: 节点名
        # @type HostName: String
        # @param HostIp: 节点内网ip
        # @type HostIp: String
        # @param Status: 扫描状态：
        # WAIT: 等待扫描
        # FAILED: 失败
        # SCANNING: 扫描中
        # FINISHED: 结束
        # CANCELING: 取消中
        # CANCELED: 已取消
        # CANCEL_FAILED： 取消失败
        # @type Status: String
        # @param StartTime: 检测开始时间
        # @type StartTime: String
        # @param EndTime: 检测结束时间
        # @type EndTime: String
        # @param RiskCnt: 风险个数
        # @type RiskCnt: Integer
        # @param Id: 事件id
        # @type Id: String
        # @param ErrorMsg: 错误原因:
        # SEND_SUCCESSED: 下发成功
        # SCAN_WAIT: agent排队扫描等待中
        # OFFLINE: 离线
        # SEND_FAILED:下发失败
        # TIMEOUT: 超时
        # LOW_AGENT_VERSION: 客户端版本过低
        # AGENT_NOT_FOUND: 镜像所属客户端版不存在
        # TOO_MANY: 任务过多
        # VALIDATION: 参数非法
        # INTERNAL: 服务内部错误
        # MISC: 其他错误
        # UNAUTH: 所在镜像未授权
        # SEND_CANCEL_SUCCESSED:下发成功
        # @type ErrorMsg: String
        # @param NodeType: 节点类型：NORMAL普通节点、SUPER超级节点
        # @type NodeType: String
        # @param PublicIP: 节点外网IP
        # @type PublicIP: String
        # @param NodeID: 节点ID
        # @type NodeID: String

        attr_accessor :ContainerName, :ContainerId, :ImageName, :ImageId, :HostName, :HostIp, :Status, :StartTime, :EndTime, :RiskCnt, :Id, :ErrorMsg, :NodeType, :PublicIP, :NodeID

        def initialize(containername=nil, containerid=nil, imagename=nil, imageid=nil, hostname=nil, hostip=nil, status=nil, starttime=nil, endtime=nil, riskcnt=nil, id=nil, errormsg=nil, nodetype=nil, publicip=nil, nodeid=nil)
          @ContainerName = containername
          @ContainerId = containerid
          @ImageName = imagename
          @ImageId = imageid
          @HostName = hostname
          @HostIp = hostip
          @Status = status
          @StartTime = starttime
          @EndTime = endtime
          @RiskCnt = riskcnt
          @Id = id
          @ErrorMsg = errormsg
          @NodeType = nodetype
          @PublicIP = publicip
          @NodeID = nodeid
        end

        def deserialize(params)
          @ContainerName = params['ContainerName']
          @ContainerId = params['ContainerId']
          @ImageName = params['ImageName']
          @ImageId = params['ImageId']
          @HostName = params['HostName']
          @HostIp = params['HostIp']
          @Status = params['Status']
          @StartTime = params['StartTime']
          @EndTime = params['EndTime']
          @RiskCnt = params['RiskCnt']
          @Id = params['Id']
          @ErrorMsg = params['ErrorMsg']
          @NodeType = params['NodeType']
          @PublicIP = params['PublicIP']
          @NodeID = params['NodeID']
        end
      end

      # 木马趋势详情
      class VirusTendencyInfo < TencentCloud::Common::AbstractModel
        # @param Date: 日期
        # @type Date: String
        # @param PendingEventCount: 待处理事件总数
        # @type PendingEventCount: Integer
        # @param RiskContainerCount: 风险容器总数
        # @type RiskContainerCount: Integer
        # @param EventCount: 事件总数
        # @type EventCount: Integer
        # @param IsolateEventCount: 隔离事件总数
        # @type IsolateEventCount: Integer

        attr_accessor :Date, :PendingEventCount, :RiskContainerCount, :EventCount, :IsolateEventCount

        def initialize(date=nil, pendingeventcount=nil, riskcontainercount=nil, eventcount=nil, isolateeventcount=nil)
          @Date = date
          @PendingEventCount = pendingeventcount
          @RiskContainerCount = riskcontainercount
          @EventCount = eventcount
          @IsolateEventCount = isolateeventcount
        end

        def deserialize(params)
          @Date = params['Date']
          @PendingEventCount = params['PendingEventCount']
          @RiskContainerCount = params['RiskContainerCount']
          @EventCount = params['EventCount']
          @IsolateEventCount = params['IsolateEventCount']
        end
      end

      # 受漏洞影响的组件信息
      class VulAffectedComponentInfo < TencentCloud::Common::AbstractModel
        # @param Name: 组件名称
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Name: String
        # @param Version: 组件版本
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Version: Array
        # @param FixedVersion: 组件修复版本
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type FixedVersion: Array

        attr_accessor :Name, :Version, :FixedVersion

        def initialize(name=nil, version=nil, fixedversion=nil)
          @Name = name
          @Version = version
          @FixedVersion = fixedversion
        end

        def deserialize(params)
          @Name = params['Name']
          @Version = params['Version']
          @FixedVersion = params['FixedVersion']
        end
      end

      # 受漏洞影响的容器信息
      class VulAffectedContainerInfo < TencentCloud::Common::AbstractModel
        # @param HostIP: 内网IP
        # @type HostIP: String
        # @param ContainerID: 容器ID
        # @type ContainerID: String
        # @param ContainerName: 容器名称
        # @type ContainerName: String
        # @param PodName: Pod名称
        # @type PodName: String
        # @param PodIP: PodIP值
        # @type PodIP: String
        # @param HostName: 主机名称
        # @type HostName: String
        # @param HostID: 主机ID
        # @type HostID: String
        # @param PublicIP: 外网IP
        # @type PublicIP: String
        # @param ClusterID: 集群ID
        # @type ClusterID: String
        # @param ClusterName: 集群名称
        # @type ClusterName: String
        # @param NodeType: 节点类型[NORMAL:普通节点|SUPER:超级节点]
        # @type NodeType: String
        # @param NodeUniqueID: 超级节点唯一ID
        # @type NodeUniqueID: String
        # @param NodeID: 超级节点ID
        # @type NodeID: String
        # @param NodeName: 超级节点名称
        # @type NodeName: String

        attr_accessor :HostIP, :ContainerID, :ContainerName, :PodName, :PodIP, :HostName, :HostID, :PublicIP, :ClusterID, :ClusterName, :NodeType, :NodeUniqueID, :NodeID, :NodeName

        def initialize(hostip=nil, containerid=nil, containername=nil, podname=nil, podip=nil, hostname=nil, hostid=nil, publicip=nil, clusterid=nil, clustername=nil, nodetype=nil, nodeuniqueid=nil, nodeid=nil, nodename=nil)
          @HostIP = hostip
          @ContainerID = containerid
          @ContainerName = containername
          @PodName = podname
          @PodIP = podip
          @HostName = hostname
          @HostID = hostid
          @PublicIP = publicip
          @ClusterID = clusterid
          @ClusterName = clustername
          @NodeType = nodetype
          @NodeUniqueID = nodeuniqueid
          @NodeID = nodeid
          @NodeName = nodename
        end

        def deserialize(params)
          @HostIP = params['HostIP']
          @ContainerID = params['ContainerID']
          @ContainerName = params['ContainerName']
          @PodName = params['PodName']
          @PodIP = params['PodIP']
          @HostName = params['HostName']
          @HostID = params['HostID']
          @PublicIP = params['PublicIP']
          @ClusterID = params['ClusterID']
          @ClusterName = params['ClusterName']
          @NodeType = params['NodeType']
          @NodeUniqueID = params['NodeUniqueID']
          @NodeID = params['NodeID']
          @NodeName = params['NodeName']
        end
      end

      # 受漏洞影响的组件信息
      class VulAffectedImageComponentInfo < TencentCloud::Common::AbstractModel
        # @param Name: 组件名称
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Name: String
        # @param Version: 组件版本
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Version: String
        # @param FixedVersion: 组件修复版本
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type FixedVersion: String
        # @param Path: 组件路径
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Path: String

        attr_accessor :Name, :Version, :FixedVersion, :Path

        def initialize(name=nil, version=nil, fixedversion=nil, path=nil)
          @Name = name
          @Version = version
          @FixedVersion = fixedversion
          @Path = path
        end

        def deserialize(params)
          @Name = params['Name']
          @Version = params['Version']
          @FixedVersion = params['FixedVersion']
          @Path = params['Path']
        end
      end

      # 受漏洞影响的镜像信息
      class VulAffectedImageInfo < TencentCloud::Common::AbstractModel
        # @param ImageID: 镜像ID
        # @type ImageID: String
        # @param ImageName: 镜像名称
        # @type ImageName: String
        # @param HostCount: 关联的主机数
        # @type HostCount: Integer
        # @param ContainerCount: 关联的容器数
        # @type ContainerCount: Integer
        # @param ComponentList: 组件列表
        # @type ComponentList: Array

        attr_accessor :ImageID, :ImageName, :HostCount, :ContainerCount, :ComponentList

        def initialize(imageid=nil, imagename=nil, hostcount=nil, containercount=nil, componentlist=nil)
          @ImageID = imageid
          @ImageName = imagename
          @HostCount = hostcount
          @ContainerCount = containercount
          @ComponentList = componentlist
        end

        def deserialize(params)
          @ImageID = params['ImageID']
          @ImageName = params['ImageName']
          @HostCount = params['HostCount']
          @ContainerCount = params['ContainerCount']
          unless params['ComponentList'].nil?
            @ComponentList = []
            params['ComponentList'].each do |i|
              vulaffectedimagecomponentinfo_tmp = VulAffectedImageComponentInfo.new
              vulaffectedimagecomponentinfo_tmp.deserialize(i)
              @ComponentList << vulaffectedimagecomponentinfo_tmp
            end
          end
        end
      end

      # 漏洞影响的仓库镜像列表
      class VulAffectedRegistryImageInfo < TencentCloud::Common::AbstractModel
        # @param ImageID: 镜像ID
        # @type ImageID: String
        # @param ImageName: 镜像名称
        # @type ImageName: String
        # @param ImageTag: 镜像版本
        # @type ImageTag: String
        # @param Namespace: 镜像命名空间
        # @type Namespace: String
        # @param ImageRepoAddress: 镜像地址
        # @type ImageRepoAddress: String
        # @param ComponentList: 组件列表
        # @type ComponentList: Array
        # @param IsLatestImage: 是否为镜像的最新版本
        # @type IsLatestImage: Boolean
        # @param ImageAssetId: 内部镜像资产ID
        # @type ImageAssetId: Integer

        attr_accessor :ImageID, :ImageName, :ImageTag, :Namespace, :ImageRepoAddress, :ComponentList, :IsLatestImage, :ImageAssetId

        def initialize(imageid=nil, imagename=nil, imagetag=nil, namespace=nil, imagerepoaddress=nil, componentlist=nil, islatestimage=nil, imageassetid=nil)
          @ImageID = imageid
          @ImageName = imagename
          @ImageTag = imagetag
          @Namespace = namespace
          @ImageRepoAddress = imagerepoaddress
          @ComponentList = componentlist
          @IsLatestImage = islatestimage
          @ImageAssetId = imageassetid
        end

        def deserialize(params)
          @ImageID = params['ImageID']
          @ImageName = params['ImageName']
          @ImageTag = params['ImageTag']
          @Namespace = params['Namespace']
          @ImageRepoAddress = params['ImageRepoAddress']
          unless params['ComponentList'].nil?
            @ComponentList = []
            params['ComponentList'].each do |i|
              vulaffectedimagecomponentinfo_tmp = VulAffectedImageComponentInfo.new
              vulaffectedimagecomponentinfo_tmp.deserialize(i)
              @ComponentList << vulaffectedimagecomponentinfo_tmp
            end
          end
          @IsLatestImage = params['IsLatestImage']
          @ImageAssetId = params['ImageAssetId']
        end
      end

      # 漏洞防御事件详情
      class VulDefenceEvent < TencentCloud::Common::AbstractModel
        # @param CVEID: 漏洞CVEID
        # @type CVEID: String
        # @param VulName: 漏洞名称
        # @type VulName: String
        # @param PocID: 漏洞PocID
        # @type PocID: String
        # @param EventType: 入侵状态
        # @type EventType: String
        # @param SourceIP: 攻击源IP
        # @type SourceIP: String
        # @param City: 攻击源ip地址所在城市
        # @type City: String
        # @param EventCount: 事件数量
        # @type EventCount: Integer
        # @param ContainerID: 容器ID
        # @type ContainerID: String
        # @param ContainerName: 容器名称
        # @type ContainerName: String
        # @param ImageID: 镜像ID
        # @type ImageID: String
        # @param ImageName: 镜像名称
        # @type ImageName: String
        # @param Status: 处理状态
        # @type Status: String
        # @param EventID: 事件ID
        # @type EventID: Integer
        # @param CreateTime: 首次发现时间
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type CreateTime: String
        # @param ContainerNetStatus: 隔离状态
        # 未隔离  	NORMAL
        # 已隔离		ISOLATED
        # 隔离中		ISOLATING
        # 隔离失败	ISOLATE_FAILED
        # 解除隔离中  RESTORING
        # 解除隔离失败 RESTORE_FAILED
        # @type ContainerNetStatus: String
        # @param MergeTime: 最近发现时间
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type MergeTime: String
        # @param ContainerStatus: 容器状态
        # 正在运行: RUNNING
        # 暂停: PAUSED
        # 停止: STOPPED
        # 已经创建: CREATED
        # 已经销毁: DESTROYED
        # 正在重启中: RESTARTING
        # 迁移中: REMOVING
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ContainerStatus: String
        # @param ContainerNetSubStatus: 容器子状态
        # "AGENT_OFFLINE"       //Agent离线
        # 	"NODE_DESTROYED"      //节点已销毁
        # 	"CONTAINER_EXITED"    //容器已退出
        # 	"CONTAINER_DESTROYED" //容器已销毁
        # 	"SHARED_HOST"         // 容器与主机共享网络
        # 	"RESOURCE_LIMIT"      //隔离操作资源超限
        # 	"UNKNOW"              // 原因未知
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ContainerNetSubStatus: String
        # @param ContainerIsolateOperationSrc: 容器隔离操作来源
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ContainerIsolateOperationSrc: String
        # @param QUUID: 主机QUUID/超级节点ID
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type QUUID: String
        # @param HostIP: 主机内网IP
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type HostIP: String
        # @param HostName: 主机名称/超级节点名称
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type HostName: String
        # @param NodeType: 节点类型[NORMAL:普通节点|SUPER:超级节点]
        # @type NodeType: String
        # @param PublicIP: 外网IP
        # @type PublicIP: String
        # @param NodeUniqueID: 超级节点唯一ID
        # @type NodeUniqueID: String
        # @param NodeID: 超级节点ID
        # @type NodeID: String
        # @param ClusterID: 集群ID
        # @type ClusterID: String
        # @param ClusterName: 集群名称
        # @type ClusterName: String

        attr_accessor :CVEID, :VulName, :PocID, :EventType, :SourceIP, :City, :EventCount, :ContainerID, :ContainerName, :ImageID, :ImageName, :Status, :EventID, :CreateTime, :ContainerNetStatus, :MergeTime, :ContainerStatus, :ContainerNetSubStatus, :ContainerIsolateOperationSrc, :QUUID, :HostIP, :HostName, :NodeType, :PublicIP, :NodeUniqueID, :NodeID, :ClusterID, :ClusterName

        def initialize(cveid=nil, vulname=nil, pocid=nil, eventtype=nil, sourceip=nil, city=nil, eventcount=nil, containerid=nil, containername=nil, imageid=nil, imagename=nil, status=nil, eventid=nil, createtime=nil, containernetstatus=nil, mergetime=nil, containerstatus=nil, containernetsubstatus=nil, containerisolateoperationsrc=nil, quuid=nil, hostip=nil, hostname=nil, nodetype=nil, publicip=nil, nodeuniqueid=nil, nodeid=nil, clusterid=nil, clustername=nil)
          @CVEID = cveid
          @VulName = vulname
          @PocID = pocid
          @EventType = eventtype
          @SourceIP = sourceip
          @City = city
          @EventCount = eventcount
          @ContainerID = containerid
          @ContainerName = containername
          @ImageID = imageid
          @ImageName = imagename
          @Status = status
          @EventID = eventid
          @CreateTime = createtime
          @ContainerNetStatus = containernetstatus
          @MergeTime = mergetime
          @ContainerStatus = containerstatus
          @ContainerNetSubStatus = containernetsubstatus
          @ContainerIsolateOperationSrc = containerisolateoperationsrc
          @QUUID = quuid
          @HostIP = hostip
          @HostName = hostname
          @NodeType = nodetype
          @PublicIP = publicip
          @NodeUniqueID = nodeuniqueid
          @NodeID = nodeid
          @ClusterID = clusterid
          @ClusterName = clustername
        end

        def deserialize(params)
          @CVEID = params['CVEID']
          @VulName = params['VulName']
          @PocID = params['PocID']
          @EventType = params['EventType']
          @SourceIP = params['SourceIP']
          @City = params['City']
          @EventCount = params['EventCount']
          @ContainerID = params['ContainerID']
          @ContainerName = params['ContainerName']
          @ImageID = params['ImageID']
          @ImageName = params['ImageName']
          @Status = params['Status']
          @EventID = params['EventID']
          @CreateTime = params['CreateTime']
          @ContainerNetStatus = params['ContainerNetStatus']
          @MergeTime = params['MergeTime']
          @ContainerStatus = params['ContainerStatus']
          @ContainerNetSubStatus = params['ContainerNetSubStatus']
          @ContainerIsolateOperationSrc = params['ContainerIsolateOperationSrc']
          @QUUID = params['QUUID']
          @HostIP = params['HostIP']
          @HostName = params['HostName']
          @NodeType = params['NodeType']
          @PublicIP = params['PublicIP']
          @NodeUniqueID = params['NodeUniqueID']
          @NodeID = params['NodeID']
          @ClusterID = params['ClusterID']
          @ClusterName = params['ClusterName']
        end
      end

      # 漏洞防御事件详情
      class VulDefenceEventDetail < TencentCloud::Common::AbstractModel
        # @param CVEID: 漏洞CVEID
        # @type CVEID: String
        # @param VulName: 漏洞名称
        # @type VulName: String
        # @param PocID: 漏洞PocID
        # @type PocID: String
        # @param EventType: 入侵状态
        # @type EventType: String
        # @param SourceIP: 攻击源IP
        # @type SourceIP: String
        # @param City: 攻击源ip地址所在城市
        # @type City: String
        # @param EventCount: 事件数量
        # @type EventCount: Integer
        # @param ContainerID: 容器ID
        # @type ContainerID: String
        # @param ContainerName: 容器名称
        # @type ContainerName: String
        # @param ImageID: 镜像ID
        # @type ImageID: String
        # @param ImageName: 镜像名称
        # @type ImageName: String
        # @param Status: 处理状态
        # @type Status: String
        # @param SourcePort: 攻击源端口
        # @type SourcePort: Array
        # @param EventID: 事件ID
        # @type EventID: Integer
        # @param HostName: 主机名称/超级节点名称
        # @type HostName: String
        # @param HostIP: 主机内网IP
        # @type HostIP: String
        # @param PublicIP: 主机外网IP
        # @type PublicIP: String
        # @param PodName: Pod名称
        # @type PodName: String
        # @param Description: 危害描述
        # @type Description: String
        # @param OfficialSolution: 修复建议
        # @type OfficialSolution: String
        # @param NetworkPayload: 攻击包
        # @type NetworkPayload: String
        # @param PID: 进程PID
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type PID: Integer
        # @param MainClass: 进程主类名
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type MainClass: String
        # @param StackTrace: 堆栈信息
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type StackTrace: String
        # @param ServerAccount: 监听账号
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ServerAccount: String
        # @param ServerPort: 监听端口
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ServerPort: String
        # @param ServerExe: 进程路径
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ServerExe: String
        # @param ServerArg: 进程命令行参数
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ServerArg: String
        # @param QUUID: 主机QUUID/超级节点ID
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type QUUID: String
        # @param ContainerNetStatus: 隔离状态
        # 未隔离  	NORMAL
        # 已隔离		ISOLATED
        # 隔离中		ISOLATING
        # 隔离失败	ISOLATE_FAILED
        # 解除隔离中  RESTORING
        # 解除隔离失败 RESTORE_FAILED
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ContainerNetStatus: String
        # @param ContainerNetSubStatus: 容器子状态
        # "AGENT_OFFLINE"       //Agent离线
        # 	"NODE_DESTROYED"      //节点已销毁
        # 	"CONTAINER_EXITED"    //容器已退出
        # 	"CONTAINER_DESTROYED" //容器已销毁
        # 	"SHARED_HOST"         // 容器与主机共享网络
        # 	"RESOURCE_LIMIT"      //隔离操作资源超限
        # 	"UNKNOW"              // 原因未知
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ContainerNetSubStatus: String
        # @param ContainerIsolateOperationSrc: 容器隔离操作来源
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ContainerIsolateOperationSrc: String
        # @param ContainerStatus: 容器状态
        # 正在运行: RUNNING
        # 暂停: PAUSED
        # 停止: STOPPED
        # 已经创建: CREATED
        # 已经销毁: DESTROYED
        # 正在重启中: RESTARTING
        # 迁移中: REMOVING
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ContainerStatus: String
        # @param JNDIUrl: 接口Url
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type JNDIUrl: String
        # @param RaspDetail: rasp detail
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type RaspDetail: Array
        # @param NodeSubNetName: 超级节点子网名称
        # @type NodeSubNetName: String
        # @param NodeSubNetCIDR: 超级节点子网网段
        # @type NodeSubNetCIDR: String
        # @param PodIP: pod ip
        # @type PodIP: String
        # @param NodeType: 节点类型[NORMAL:普通节点|SUPER:超级节点]
        # @type NodeType: String
        # @param NodeID: 超级节点ID
        # @type NodeID: String
        # @param NodeUniqueID: 超级节点唯一ID
        # @type NodeUniqueID: String
        # @param NodeSubNetID: 超级节点子网ID
        # @type NodeSubNetID: String
        # @param ClusterID: 集群ID
        # @type ClusterID: String
        # @param ClusterName: 集群名称
        # @type ClusterName: String
        # @param Namespace: Namespace
        # @type Namespace: String
        # @param WorkloadType: 工作负载
        # @type WorkloadType: String

        attr_accessor :CVEID, :VulName, :PocID, :EventType, :SourceIP, :City, :EventCount, :ContainerID, :ContainerName, :ImageID, :ImageName, :Status, :SourcePort, :EventID, :HostName, :HostIP, :PublicIP, :PodName, :Description, :OfficialSolution, :NetworkPayload, :PID, :MainClass, :StackTrace, :ServerAccount, :ServerPort, :ServerExe, :ServerArg, :QUUID, :ContainerNetStatus, :ContainerNetSubStatus, :ContainerIsolateOperationSrc, :ContainerStatus, :JNDIUrl, :RaspDetail, :NodeSubNetName, :NodeSubNetCIDR, :PodIP, :NodeType, :NodeID, :NodeUniqueID, :NodeSubNetID, :ClusterID, :ClusterName, :Namespace, :WorkloadType

        def initialize(cveid=nil, vulname=nil, pocid=nil, eventtype=nil, sourceip=nil, city=nil, eventcount=nil, containerid=nil, containername=nil, imageid=nil, imagename=nil, status=nil, sourceport=nil, eventid=nil, hostname=nil, hostip=nil, publicip=nil, podname=nil, description=nil, officialsolution=nil, networkpayload=nil, pid=nil, mainclass=nil, stacktrace=nil, serveraccount=nil, serverport=nil, serverexe=nil, serverarg=nil, quuid=nil, containernetstatus=nil, containernetsubstatus=nil, containerisolateoperationsrc=nil, containerstatus=nil, jndiurl=nil, raspdetail=nil, nodesubnetname=nil, nodesubnetcidr=nil, podip=nil, nodetype=nil, nodeid=nil, nodeuniqueid=nil, nodesubnetid=nil, clusterid=nil, clustername=nil, namespace=nil, workloadtype=nil)
          @CVEID = cveid
          @VulName = vulname
          @PocID = pocid
          @EventType = eventtype
          @SourceIP = sourceip
          @City = city
          @EventCount = eventcount
          @ContainerID = containerid
          @ContainerName = containername
          @ImageID = imageid
          @ImageName = imagename
          @Status = status
          @SourcePort = sourceport
          @EventID = eventid
          @HostName = hostname
          @HostIP = hostip
          @PublicIP = publicip
          @PodName = podname
          @Description = description
          @OfficialSolution = officialsolution
          @NetworkPayload = networkpayload
          @PID = pid
          @MainClass = mainclass
          @StackTrace = stacktrace
          @ServerAccount = serveraccount
          @ServerPort = serverport
          @ServerExe = serverexe
          @ServerArg = serverarg
          @QUUID = quuid
          @ContainerNetStatus = containernetstatus
          @ContainerNetSubStatus = containernetsubstatus
          @ContainerIsolateOperationSrc = containerisolateoperationsrc
          @ContainerStatus = containerstatus
          @JNDIUrl = jndiurl
          @RaspDetail = raspdetail
          @NodeSubNetName = nodesubnetname
          @NodeSubNetCIDR = nodesubnetcidr
          @PodIP = podip
          @NodeType = nodetype
          @NodeID = nodeid
          @NodeUniqueID = nodeuniqueid
          @NodeSubNetID = nodesubnetid
          @ClusterID = clusterid
          @ClusterName = clustername
          @Namespace = namespace
          @WorkloadType = workloadtype
        end

        def deserialize(params)
          @CVEID = params['CVEID']
          @VulName = params['VulName']
          @PocID = params['PocID']
          @EventType = params['EventType']
          @SourceIP = params['SourceIP']
          @City = params['City']
          @EventCount = params['EventCount']
          @ContainerID = params['ContainerID']
          @ContainerName = params['ContainerName']
          @ImageID = params['ImageID']
          @ImageName = params['ImageName']
          @Status = params['Status']
          @SourcePort = params['SourcePort']
          @EventID = params['EventID']
          @HostName = params['HostName']
          @HostIP = params['HostIP']
          @PublicIP = params['PublicIP']
          @PodName = params['PodName']
          @Description = params['Description']
          @OfficialSolution = params['OfficialSolution']
          @NetworkPayload = params['NetworkPayload']
          @PID = params['PID']
          @MainClass = params['MainClass']
          @StackTrace = params['StackTrace']
          @ServerAccount = params['ServerAccount']
          @ServerPort = params['ServerPort']
          @ServerExe = params['ServerExe']
          @ServerArg = params['ServerArg']
          @QUUID = params['QUUID']
          @ContainerNetStatus = params['ContainerNetStatus']
          @ContainerNetSubStatus = params['ContainerNetSubStatus']
          @ContainerIsolateOperationSrc = params['ContainerIsolateOperationSrc']
          @ContainerStatus = params['ContainerStatus']
          @JNDIUrl = params['JNDIUrl']
          unless params['RaspDetail'].nil?
            @RaspDetail = []
            params['RaspDetail'].each do |i|
              raspinfo_tmp = RaspInfo.new
              raspinfo_tmp.deserialize(i)
              @RaspDetail << raspinfo_tmp
            end
          end
          @NodeSubNetName = params['NodeSubNetName']
          @NodeSubNetCIDR = params['NodeSubNetCIDR']
          @PodIP = params['PodIP']
          @NodeType = params['NodeType']
          @NodeID = params['NodeID']
          @NodeUniqueID = params['NodeUniqueID']
          @NodeSubNetID = params['NodeSubNetID']
          @ClusterID = params['ClusterID']
          @ClusterName = params['ClusterName']
          @Namespace = params['Namespace']
          @WorkloadType = params['WorkloadType']
        end
      end

      # 漏洞防御攻击事件趋势
      class VulDefenceEventTendency < TencentCloud::Common::AbstractModel
        # @param Date: 日期
        # @type Date: String
        # @param EventCount: 事件数量
        # @type EventCount: Integer

        attr_accessor :Date, :EventCount

        def initialize(date=nil, eventcount=nil)
          @Date = date
          @EventCount = eventcount
        end

        def deserialize(params)
          @Date = params['Date']
          @EventCount = params['EventCount']
        end
      end

      # 漏洞防御的主机信息
      class VulDefenceHost < TencentCloud::Common::AbstractModel
        # @param HostName: 主机名称/超级节点名称
        # @type HostName: String
        # @param HostIP: 主机ip即内网ip
        # @type HostIP: String
        # @param HostID: 主机QUUID/超级节点ID
        # @type HostID: String
        # @param Status: 插件状态，正常：SUCCESS，异常：FAIL， NO_DEFENDED:未防御
        # @type Status: String
        # @param PublicIP: 外网ip
        # @type PublicIP: String
        # @param CreateTime: 首次开启时间
        # @type CreateTime: String
        # @param ModifyTime: 更新时间
        # @type ModifyTime: String
        # @param NodeType: 节点类型[NORMAL:普通节点|SUPER:超级节点]
        # @type NodeType: String
        # @param NodeSubNetName: 超级节点子网名称
        # @type NodeSubNetName: String
        # @param NodeSubNetCIDR: 超级节点子网网段
        # @type NodeSubNetCIDR: String
        # @param NodeSubNetID: 超级节点子网ID
        # @type NodeSubNetID: String
        # @param NodeUniqueID: 超级节点唯一ID
        # @type NodeUniqueID: String
        # @param NodeID: 超级节点ID
        # @type NodeID: String
        # @param PodIP: Pod Ip
        # @type PodIP: String
        # @param PodName: Pod 名称
        # @type PodName: String

        attr_accessor :HostName, :HostIP, :HostID, :Status, :PublicIP, :CreateTime, :ModifyTime, :NodeType, :NodeSubNetName, :NodeSubNetCIDR, :NodeSubNetID, :NodeUniqueID, :NodeID, :PodIP, :PodName

        def initialize(hostname=nil, hostip=nil, hostid=nil, status=nil, publicip=nil, createtime=nil, modifytime=nil, nodetype=nil, nodesubnetname=nil, nodesubnetcidr=nil, nodesubnetid=nil, nodeuniqueid=nil, nodeid=nil, podip=nil, podname=nil)
          @HostName = hostname
          @HostIP = hostip
          @HostID = hostid
          @Status = status
          @PublicIP = publicip
          @CreateTime = createtime
          @ModifyTime = modifytime
          @NodeType = nodetype
          @NodeSubNetName = nodesubnetname
          @NodeSubNetCIDR = nodesubnetcidr
          @NodeSubNetID = nodesubnetid
          @NodeUniqueID = nodeuniqueid
          @NodeID = nodeid
          @PodIP = podip
          @PodName = podname
        end

        def deserialize(params)
          @HostName = params['HostName']
          @HostIP = params['HostIP']
          @HostID = params['HostID']
          @Status = params['Status']
          @PublicIP = params['PublicIP']
          @CreateTime = params['CreateTime']
          @ModifyTime = params['ModifyTime']
          @NodeType = params['NodeType']
          @NodeSubNetName = params['NodeSubNetName']
          @NodeSubNetCIDR = params['NodeSubNetCIDR']
          @NodeSubNetID = params['NodeSubNetID']
          @NodeUniqueID = params['NodeUniqueID']
          @NodeID = params['NodeID']
          @PodIP = params['PodIP']
          @PodName = params['PodName']
        end
      end

      # 漏洞防护的插件信息
      class VulDefencePlugin < TencentCloud::Common::AbstractModel
        # @param PID: java进程pid
        # @type PID: Integer
        # @param MainClass: 进程主类名
        # @type MainClass: String
        # @param Status: 插件运行状态：注入中:INJECTING，注入成功：SUCCESS，注入失败：FAIL，插件超时：TIMEOUT，插件退出：QUIT
        # @type Status: String
        # @param ErrorLog: 错误日志
        # @type ErrorLog: String

        attr_accessor :PID, :MainClass, :Status, :ErrorLog

        def initialize(pid=nil, mainclass=nil, status=nil, errorlog=nil)
          @PID = pid
          @MainClass = mainclass
          @Status = status
          @ErrorLog = errorlog
        end

        def deserialize(params)
          @PID = params['PID']
          @MainClass = params['MainClass']
          @Status = params['Status']
          @ErrorLog = params['ErrorLog']
        end
      end

      # 漏洞详情信息
      class VulDetailInfo < TencentCloud::Common::AbstractModel
        # @param CVEID: CVE编号
        # @type CVEID: String
        # @param Name: 漏洞名称
        # @type Name: String
        # @param Tags: 漏洞标签
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Tags: Array
        # @param CategoryType: 漏洞类型
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type CategoryType: String
        # @param Level: 漏洞威胁等级
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Level: String
        # @param SubmitTime: 漏洞披露时间
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type SubmitTime: String
        # @param Description: 漏洞描述
        # @type Description: String
        # @param CVSSV3Desc: CVSS V3描述
        # @type CVSSV3Desc: String
        # @param OfficialSolution: 漏洞修复建议
        # @type OfficialSolution: String
        # @param DefenseSolution: 缓解措施
        # @type DefenseSolution: String
        # @param Reference: 参考链接
        # @type Reference: Array
        # @param CVSSV3Score: CVSS V3分数
        # @type CVSSV3Score: Float
        # @param ComponentList: 受漏洞影响的组件列表
        # @type ComponentList: Array
        # @param LocalImageCount: 影响本地镜像数
        # @type LocalImageCount: Integer
        # @param ContainerCount: 影响容器数
        # @type ContainerCount: Integer
        # @param RegistryImageCount: 影响仓库镜像数
        # @type RegistryImageCount: Integer
        # @param Category: 漏洞子类型
        # @type Category: String
        # @param LocalNewestImageCount: 影响最新本地镜像数
        # @type LocalNewestImageCount: Integer
        # @param RegistryNewestImageCount: 影响最新仓库镜像数
        # @type RegistryNewestImageCount: Integer
        # @param PocID: 漏洞PocID
        # @type PocID: String
        # @param DefenceStatus: 防御状态，NO_DEFENDED:未防御，DEFENDED:已防御
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type DefenceStatus: String
        # @param DefenceScope: 漏洞防御主机范围: MANUAL:自选主机节点，ALL:全部
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type DefenceScope: String
        # @param DefenceHostCount: 漏洞防御主机数量
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type DefenceHostCount: Integer
        # @param DefendedCount: 已防御攻击次数
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type DefendedCount: Integer
        # @param ScanStatus: 是否已扫描，NOT_SCAN:未扫描,SCANNED:已扫描
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ScanStatus: String

        attr_accessor :CVEID, :Name, :Tags, :CategoryType, :Level, :SubmitTime, :Description, :CVSSV3Desc, :OfficialSolution, :DefenseSolution, :Reference, :CVSSV3Score, :ComponentList, :LocalImageCount, :ContainerCount, :RegistryImageCount, :Category, :LocalNewestImageCount, :RegistryNewestImageCount, :PocID, :DefenceStatus, :DefenceScope, :DefenceHostCount, :DefendedCount, :ScanStatus

        def initialize(cveid=nil, name=nil, tags=nil, categorytype=nil, level=nil, submittime=nil, description=nil, cvssv3desc=nil, officialsolution=nil, defensesolution=nil, reference=nil, cvssv3score=nil, componentlist=nil, localimagecount=nil, containercount=nil, registryimagecount=nil, category=nil, localnewestimagecount=nil, registrynewestimagecount=nil, pocid=nil, defencestatus=nil, defencescope=nil, defencehostcount=nil, defendedcount=nil, scanstatus=nil)
          @CVEID = cveid
          @Name = name
          @Tags = tags
          @CategoryType = categorytype
          @Level = level
          @SubmitTime = submittime
          @Description = description
          @CVSSV3Desc = cvssv3desc
          @OfficialSolution = officialsolution
          @DefenseSolution = defensesolution
          @Reference = reference
          @CVSSV3Score = cvssv3score
          @ComponentList = componentlist
          @LocalImageCount = localimagecount
          @ContainerCount = containercount
          @RegistryImageCount = registryimagecount
          @Category = category
          @LocalNewestImageCount = localnewestimagecount
          @RegistryNewestImageCount = registrynewestimagecount
          @PocID = pocid
          @DefenceStatus = defencestatus
          @DefenceScope = defencescope
          @DefenceHostCount = defencehostcount
          @DefendedCount = defendedcount
          @ScanStatus = scanstatus
        end

        def deserialize(params)
          @CVEID = params['CVEID']
          @Name = params['Name']
          @Tags = params['Tags']
          @CategoryType = params['CategoryType']
          @Level = params['Level']
          @SubmitTime = params['SubmitTime']
          @Description = params['Description']
          @CVSSV3Desc = params['CVSSV3Desc']
          @OfficialSolution = params['OfficialSolution']
          @DefenseSolution = params['DefenseSolution']
          @Reference = params['Reference']
          @CVSSV3Score = params['CVSSV3Score']
          unless params['ComponentList'].nil?
            @ComponentList = []
            params['ComponentList'].each do |i|
              vulaffectedcomponentinfo_tmp = VulAffectedComponentInfo.new
              vulaffectedcomponentinfo_tmp.deserialize(i)
              @ComponentList << vulaffectedcomponentinfo_tmp
            end
          end
          @LocalImageCount = params['LocalImageCount']
          @ContainerCount = params['ContainerCount']
          @RegistryImageCount = params['RegistryImageCount']
          @Category = params['Category']
          @LocalNewestImageCount = params['LocalNewestImageCount']
          @RegistryNewestImageCount = params['RegistryNewestImageCount']
          @PocID = params['PocID']
          @DefenceStatus = params['DefenceStatus']
          @DefenceScope = params['DefenceScope']
          @DefenceHostCount = params['DefenceHostCount']
          @DefendedCount = params['DefendedCount']
          @ScanStatus = params['ScanStatus']
        end
      end

      # 漏洞扫描忽略的本地镜像
      class VulIgnoreLocalImage < TencentCloud::Common::AbstractModel
        # @param ID: 记录ID
        # @type ID: Integer
        # @param ImageID: 镜像ID
        # @type ImageID: String
        # @param ImageName: 镜像名称
        # @type ImageName: String
        # @param ImageSize: 镜像大小
        # @type ImageSize: Integer
        # @param PocID: 漏洞PocID
        # @type PocID: String

        attr_accessor :ID, :ImageID, :ImageName, :ImageSize, :PocID

        def initialize(id=nil, imageid=nil, imagename=nil, imagesize=nil, pocid=nil)
          @ID = id
          @ImageID = imageid
          @ImageName = imagename
          @ImageSize = imagesize
          @PocID = pocid
        end

        def deserialize(params)
          @ID = params['ID']
          @ImageID = params['ImageID']
          @ImageName = params['ImageName']
          @ImageSize = params['ImageSize']
          @PocID = params['PocID']
        end
      end

      # 漏洞扫描忽略的仓库镜像
      class VulIgnoreRegistryImage < TencentCloud::Common::AbstractModel
        # @param ID: 记录ID
        # @type ID: Integer
        # @param RegistryName: 仓库名称
        # @type RegistryName: String
        # @param ImageVersion: 镜像版本
        # @type ImageVersion: String
        # @param RegistryPath: 仓库地址
        # @type RegistryPath: String
        # @param ImageID: 镜像ID
        # @type ImageID: String
        # @param PocID: 漏洞PocID
        # @type PocID: String

        attr_accessor :ID, :RegistryName, :ImageVersion, :RegistryPath, :ImageID, :PocID

        def initialize(id=nil, registryname=nil, imageversion=nil, registrypath=nil, imageid=nil, pocid=nil)
          @ID = id
          @RegistryName = registryname
          @ImageVersion = imageversion
          @RegistryPath = registrypath
          @ImageID = imageid
          @PocID = pocid
        end

        def deserialize(params)
          @ID = params['ID']
          @RegistryName = params['RegistryName']
          @ImageVersion = params['ImageVersion']
          @RegistryPath = params['RegistryPath']
          @ImageID = params['ImageID']
          @PocID = params['PocID']
        end
      end

      # 漏洞列表信息
      class VulInfo < TencentCloud::Common::AbstractModel
        # @param Name: 漏洞名称
        # @type Name: String
        # @param Tags: 漏洞标签
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Tags: Array
        # @param CVSSV3Score: CVSS V3分数
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type CVSSV3Score: Float
        # @param Level: 风险等级
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Level: String
        # @param CVEID: CVE编号
        # @type CVEID: String
        # @param Category: 漏洞子类型
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type Category: String
        # @param FoundTime: 首次发现时间
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type FoundTime: String
        # @param LatestFoundTime: 最近发现时间
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type LatestFoundTime: String
        # @param ID: 漏洞ID
        # @type ID: Integer
        # @param LocalImageCount: 影响本地镜像数
        # @type LocalImageCount: Integer
        # @param ContainerCount: 影响容器数
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ContainerCount: Integer
        # @param RegistryImageCount: 影响仓库镜像数
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type RegistryImageCount: Integer
        # @param PocID: 漏洞PocID
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type PocID: String
        # @param DefenceStatus: 防御状态，NO_DEFENDED:未防御，DEFENDED:已防御
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type DefenceStatus: String
        # @param DefenceScope: 漏洞防御主机范围: MANUAL:自选主机节点，ALL:全部
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type DefenceScope: String
        # @param DefenceHostCount: 漏洞防御主机数量
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type DefenceHostCount: Integer
        # @param DefendedCount: 已防御攻击次数
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type DefendedCount: Integer

        attr_accessor :Name, :Tags, :CVSSV3Score, :Level, :CVEID, :Category, :FoundTime, :LatestFoundTime, :ID, :LocalImageCount, :ContainerCount, :RegistryImageCount, :PocID, :DefenceStatus, :DefenceScope, :DefenceHostCount, :DefendedCount

        def initialize(name=nil, tags=nil, cvssv3score=nil, level=nil, cveid=nil, category=nil, foundtime=nil, latestfoundtime=nil, id=nil, localimagecount=nil, containercount=nil, registryimagecount=nil, pocid=nil, defencestatus=nil, defencescope=nil, defencehostcount=nil, defendedcount=nil)
          @Name = name
          @Tags = tags
          @CVSSV3Score = cvssv3score
          @Level = level
          @CVEID = cveid
          @Category = category
          @FoundTime = foundtime
          @LatestFoundTime = latestfoundtime
          @ID = id
          @LocalImageCount = localimagecount
          @ContainerCount = containercount
          @RegistryImageCount = registryimagecount
          @PocID = pocid
          @DefenceStatus = defencestatus
          @DefenceScope = defencescope
          @DefenceHostCount = defencehostcount
          @DefendedCount = defendedcount
        end

        def deserialize(params)
          @Name = params['Name']
          @Tags = params['Tags']
          @CVSSV3Score = params['CVSSV3Score']
          @Level = params['Level']
          @CVEID = params['CVEID']
          @Category = params['Category']
          @FoundTime = params['FoundTime']
          @LatestFoundTime = params['LatestFoundTime']
          @ID = params['ID']
          @LocalImageCount = params['LocalImageCount']
          @ContainerCount = params['ContainerCount']
          @RegistryImageCount = params['RegistryImageCount']
          @PocID = params['PocID']
          @DefenceStatus = params['DefenceStatus']
          @DefenceScope = params['DefenceScope']
          @DefenceHostCount = params['DefenceHostCount']
          @DefendedCount = params['DefendedCount']
        end
      end

      # 漏洞扫描的镜像信息
      class VulScanImageInfo < TencentCloud::Common::AbstractModel
        # @param ImageID: 镜像ID
        # @type ImageID: String
        # @param ImageName: 镜像名称
        # @type ImageName: String
        # @param Size: 镜像大小
        # @type Size: Float
        # @param ScanStatus: 任务状态:SCANNING:扫描中 FAILED:失败 FINISHED:完成 CANCELED:取消
        # @type ScanStatus: String
        # @param ScanDuration: 扫描时长
        # 注意：此字段可能返回 null，表示取不到有效值。
        # @type ScanDuration: Float
        # @param HighLevelVulCount: 高危漏洞数
        # @type HighLevelVulCount: Integer
        # @param MediumLevelVulCount: 中危漏洞数
        # @type MediumLevelVulCount: Integer
        # @param LowLevelVulCount: 低危漏洞数
        # @type LowLevelVulCount: Integer
        # @param CriticalLevelVulCount: 严重漏洞数
        # @type CriticalLevelVulCount: Integer
        # @param TaskID: 本地镜像漏洞扫描任务ID
        # @type TaskID: Integer
        # @param ScanStartTime: 漏洞扫描的开始时间
        # @type ScanStartTime: String
        # @param ScanEndTime: 漏洞扫描的结束时间
        # @type ScanEndTime: String
        # @param ErrorStatus: 失败原因:TIMEOUT:超时 TOO_MANY:任务过多 OFFLINE:离线
        # @type ErrorStatus: String

        attr_accessor :ImageID, :ImageName, :Size, :ScanStatus, :ScanDuration, :HighLevelVulCount, :MediumLevelVulCount, :LowLevelVulCount, :CriticalLevelVulCount, :TaskID, :ScanStartTime, :ScanEndTime, :ErrorStatus

        def initialize(imageid=nil, imagename=nil, size=nil, scanstatus=nil, scanduration=nil, highlevelvulcount=nil, mediumlevelvulcount=nil, lowlevelvulcount=nil, criticallevelvulcount=nil, taskid=nil, scanstarttime=nil, scanendtime=nil, errorstatus=nil)
          @ImageID = imageid
          @ImageName = imagename
          @Size = size
          @ScanStatus = scanstatus
          @ScanDuration = scanduration
          @HighLevelVulCount = highlevelvulcount
          @MediumLevelVulCount = mediumlevelvulcount
          @LowLevelVulCount = lowlevelvulcount
          @CriticalLevelVulCount = criticallevelvulcount
          @TaskID = taskid
          @ScanStartTime = scanstarttime
          @ScanEndTime = scanendtime
          @ErrorStatus = errorstatus
        end

        def deserialize(params)
          @ImageID = params['ImageID']
          @ImageName = params['ImageName']
          @Size = params['Size']
          @ScanStatus = params['ScanStatus']
          @ScanDuration = params['ScanDuration']
          @HighLevelVulCount = params['HighLevelVulCount']
          @MediumLevelVulCount = params['MediumLevelVulCount']
          @LowLevelVulCount = params['LowLevelVulCount']
          @CriticalLevelVulCount = params['CriticalLevelVulCount']
          @TaskID = params['TaskID']
          @ScanStartTime = params['ScanStartTime']
          @ScanEndTime = params['ScanEndTime']
          @ErrorStatus = params['ErrorStatus']
        end
      end

      # 漏洞趋势信息
      class VulTendencyInfo < TencentCloud::Common::AbstractModel
        # @param VulSet: 漏洞趋势列表
        # @type VulSet: Array
        # @param ImageType: 漏洞影响的镜像类型：
        # LOCAL：本地镜像
        # REGISTRY: 仓库镜像
        # @type ImageType: String

        attr_accessor :VulSet, :ImageType

        def initialize(vulset=nil, imagetype=nil)
          @VulSet = vulset
          @ImageType = imagetype
        end

        def deserialize(params)
          unless params['VulSet'].nil?
            @VulSet = []
            params['VulSet'].each do |i|
              runtimetendencyinfo_tmp = RunTimeTendencyInfo.new
              runtimetendencyinfo_tmp.deserialize(i)
              @VulSet << runtimetendencyinfo_tmp
            end
          end
          @ImageType = params['ImageType']
        end
      end

      # 漏洞Top排名信息
      class VulTopRankingInfo < TencentCloud::Common::AbstractModel
        # @param VulName: 漏洞名称
        # @type VulName: String
        # @param Level: 威胁等级,CRITICAL:严重 HIGH:高/MIDDLE:中/LOW:低
        # @type Level: String
        # @param AffectedImageCount: 影响的镜像数
        # @type AffectedImageCount: Integer
        # @param AffectedContainerCount: 影响的容器数
        # @type AffectedContainerCount: Integer
        # @param ID: 漏洞ID
        # @type ID: Integer
        # @param PocID: 漏洞PocID
        # @type PocID: String

        attr_accessor :VulName, :Level, :AffectedImageCount, :AffectedContainerCount, :ID, :PocID

        def initialize(vulname=nil, level=nil, affectedimagecount=nil, affectedcontainercount=nil, id=nil, pocid=nil)
          @VulName = vulname
          @Level = level
          @AffectedImageCount = affectedimagecount
          @AffectedContainerCount = affectedcontainercount
          @ID = id
          @PocID = pocid
        end

        def deserialize(params)
          @VulName = params['VulName']
          @Level = params['Level']
          @AffectedImageCount = params['AffectedImageCount']
          @AffectedContainerCount = params['AffectedContainerCount']
          @ID = params['ID']
          @PocID = params['PocID']
        end
      end

      # 告警配置策略
      class WarningRule < TencentCloud::Common::AbstractModel
        # @param Type: 告警事件类型：
        # 镜像仓库安全-木马：IMG_REG_VIRUS
        # 镜像仓库安全-漏洞：IMG_REG_VUL
        # 镜像仓库安全-敏感信息：IMG_REG_RISK
        # 镜像安全-木马：IMG_VIRUS
        # 镜像安全-漏洞：IMG_VUL
        # 镜像安全-敏感信息：IMG_RISK
        # 镜像安全-镜像拦截：IMG_INTERCEPT
        # 运行时安全-容器逃逸：RUNTIME_ESCAPE
        # 运行时安全-异常进程：RUNTIME_FILE
        # 运行时安全-异常文件访问：RUNTIME_PROCESS
        # 运行时安全-高危系统调用：RUNTIME_SYSCALL
        # 运行时安全-反弹Shell：RUNTIME_REVERSE_SHELL
        # 运行时安全-木马：RUNTIME_VIRUS
        # @type Type: String
        # @param Switch: 开关状态：
        # 打开：ON
        # 关闭：OFF
        # @type Switch: String
        # @param BeginTime: 告警开始时间，格式: HH:mm
        # @type BeginTime: String
        # @param EndTime: 告警结束时间，格式: HH:mm
        # @type EndTime: String
        # @param ControlBits: 告警等级策略控制，二进制位每位代表一个含义，值以字符串类型传递
        # 控制开关分为高、中、低，则二进制位分别为：第1位:低，第2位:中，第3位:高，0表示关闭、1表示打开。
        # 如：高危和中危打开告警，低危关闭告警，则二进制值为：110
        # 告警类型不区分等级控制，则传1。
        # @type ControlBits: String

        attr_accessor :Type, :Switch, :BeginTime, :EndTime, :ControlBits

        def initialize(type=nil, switch=nil, begintime=nil, endtime=nil, controlbits=nil)
          @Type = type
          @Switch = switch
          @BeginTime = begintime
          @EndTime = endtime
          @ControlBits = controlbits
        end

        def deserialize(params)
          @Type = params['Type']
          @Switch = params['Switch']
          @BeginTime = params['BeginTime']
          @EndTime = params['EndTime']
          @ControlBits = params['ControlBits']
        end
      end

    end
  end
end

